var tabledb = [
"PGh0bWw+Cgo8aGVhZD4gICAKCjxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0idGVtcGxhdGUvbXVzaWNib3h2Mi5jc3MiIHR5cGU9InRleHQvY3NzIj4gCgo8U0NSSVBUIExBTkdVQUdFPSdKYXZhU2NyaXB0JyBTUkM9J3RlbXBsYXRlL2pzL2ZpbGwuanMnPjwvU0NSSVBUPgoKPFNDUklQVCBMQU5HVUFHRT0nSmF2YVNjcmlwdCcgU1JDPSd0ZW1wbGF0ZS9qcy9qdWtlLmpzJz48L1NDUklQVD4gCgo8U0NSSVBUIExBTkdVQUdFPSdKYXZhU2NyaXB0JyBTUkM9J3RlbXBsYXRlL2pzL3BvcHVwLmpzJz48L1NDUklQVD4KCgo8bWV0YSBodHRwLWVxdWl2PSJDb250ZW50LVR5cGUiIGNvbnRlbnQ9InRleHQvaHRtbDsgY2hhcnNldD1JU08tODg1OS0xIiAvPiAKICAgIAoKICAgICAgICAgICAgICAgIDxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+CjwhLS0KYm9keSB7CiAgICAgICAgZm9udC1mYW1pbHk6IFZlcmRhbmEsIEFyaWFsLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7CiAgICAgICAgbWFyZ2luOiAwOwogICAgICAgIGZvbnQtc2l6ZTogNzAlOwogICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkOwogICAgICAgIGJhY2tncm91bmQ6ICNGRkY7CiAgICAgICAgfQoKaDIgewogICAgICAgIGZvbnQ6IGJvbGQgMTRweCBWZXJkYW5hLCBBcmlhbCwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOwogICAgICAgIGNvbG9yOiAjMDAwOwogICAgICAgIG1hcmdpbjogMHB4OwogICAgICAgIHBhZGRpbmc6IDBweCAwcHggMHB4IDE1cHg7Cn0KCnVsIHsKICAgICAgICBsaXN0LXN0eWxlOiBub25lOwogICAgICAgIG1hcmdpbjogMDsKICAgICAgICBwYWRkaW5nOiAwOwogICAgICAgIH0KCmltZyB7CiAgICBib3JkZXI6IG5vbmU7Cn0KCi8qLSBNZW51IDMtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi8KCiNtZW51MyB7CiAgICAgICAgd2lkdGg6IDIwMHB4OwogICAgICAgIG1hcmdpbjogMHB4OwogICAgICAgIGJvcmRlci1zdHlsZTogc29saWQgc29saWQgbm9uZSBzb2xpZDsKICAgICAgICBib3JkZXItY29sb3I6ICM1NjhEQzA7CiAgICAgICAgYm9yZGVyLXNpemU6IDFweDsKICAgICAgICBib3JkZXItd2lkdGg6IDFweDsKICAgICAgICB9CgojbWVudTMgbGkgYSB7CiAgICAgICAgaGVpZ2h0OiAyMHB4OwogICAgICAgICAgdm9pY2UtZmFtaWx5OiAiXCJ9XCIiOwogICAgICAgICAgdm9pY2UtZmFtaWx5OiBpbmhlcml0OwogICAgICAgICAgaGVpZ2h0OiAxN3B4OwogICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTsKICAgICAgICB9CgojbWVudTMgbGkgYTpsaW5rLCAjbWVudTMgbGkgYTp2aXNpdGVkIHsKICAgICAgICBjb2xvcjogIzExNTc5OTsKICAgICAgICBkaXNwbGF5OiBibG9jazsKICAgICAgICBiYWNrZ3JvdW5kOiAgdXJsKGh0dHA6Ly9pbmRpYW1wMy5jb20vbXVzaWMvdGVtcGxhdGUvaW1hZ2VzL21lbnUzLmdpZik7CiAgICAgICAgcGFkZGluZzogOHB4IDAgMCAxMHB4OwogICAgICAgIH0KCiNtZW51MyBsaSBhOmhvdmVyLCAjbWVudTMgbGkgI2N1cnJlbnQgewogICAgICAgIGNvbG9yOiAjNjI3RUI3OwogICAgICAgIGJhY2tncm91bmQ6ICB1cmwoaHR0cDovL2luZGlhbXAzLmNvbS9tdXNpYy90ZW1wbGF0ZS9pbWFnZXMvbWVudTMuZ2lmKSAwIC0zMnB4OwogICAgICAgIHBhZGRpbmc6IDhweCAwIDAgMTBweDsKICAgICAgICB9Ci0tPgo8L3N0eWxlPgoKIDxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+CjwhLS0KICAgIGJvZHkgewogICAgICAgIG1hcmdpbjowOwogICAgICAgIHBhZGRpbmc6MDsKICAgICAgICBmb250OiBib2xkIDExcHgvMS41ZW0gVmVyZGFuYTsKfQoKaDIgewogICAgICAgIGZvbnQ6IGJvbGQgMTRweCBWZXJkYW5hLCBBcmlhbCwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOwogICAgICAgIGNvbG9yOiAjMDAwOwogICAgICAgIG1hcmdpbjogMHB4OwogICAgICAgIHBhZGRpbmc6IDBweCAwcHggMHB4IDE1cHg7Cn0KCmltZyB7CmJvcmRlcjogbm9uZTsKfQoKLyotIE1lbnUgVGFicyAxLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovCgoKICAgICN0YWJzMSB7CiAgICAgIGZsb2F0OmxlZnQ7CiAgICAgIHdpZHRoOjEwMCU7CiAgICAgICAgICBiYWNrZ3JvdW5kOiNGNEY3RkI7CiAgICAgIGZvbnQtc2l6ZTo3MCU7CiAgICAgIGxpbmUtaGVpZ2h0Om5vcm1hbDsKICAgICAgICAgIGJvcmRlci1ib3R0b206MXB4IHNvbGlkICNCQ0QyRTY7CiAgICAgIH0KICAgICN0YWJzMSB1bCB7CiAgICAgICAgICBtYXJnaW46MDsKICAgICAgICAgIHBhZGRpbmc6MTBweCAxMHB4IDAgNTBweDsKICAgICAgICAgIGxpc3Qtc3R5bGU6bm9uZTsKICAgICAgfQogICAgI3RhYnMxIGxpIHsKICAgICAgZGlzcGxheTppbmxpbmU7CiAgICAgIG1hcmdpbjowOwogICAgICBwYWRkaW5nOjA7CiAgICAgIH0KICAgICN0YWJzMSBhIHsKICAgICAgZmxvYXQ6bGVmdDsKICAgICAgYmFja2dyb3VuZDp1cmwoIi9pbWFnZXMvdGFibGVmdDEuZ2lmIikgbm8tcmVwZWF0IGxlZnQgdG9wOwogICAgICBtYXJnaW46MDsKICAgICAgcGFkZGluZzowIDAgMCA0cHg7CiAgICAgIHRleHQtZGVjb3JhdGlvbjpub25lOwogICAgICB9CiAgICAjdGFiczEgYSBzcGFuIHsKICAgICAgZmxvYXQ6bGVmdDsKICAgICAgZGlzcGxheTpibG9jazsKICAgICAgYmFja2dyb3VuZDp1cmwoIi9pbWFnZXMvdGFicmlnaHQxLmdpZiIpIG5vLXJlcGVhdCByaWdodCB0b3A7CiAgICAgIHBhZGRpbmc6NXB4IDE1cHggNHB4IDZweDsKICAgICAgY29sb3I6IzYyN0VCNzsKICAgICAgfQogICAgLyogQ29tbWVudGVkIEJhY2tzbGFzaCBIYWNrIGhpZGVzIHJ1bGUgZnJvbSBJRTUtTWFjIFwqLwogICAgI3RhYnMxIGEgc3BhbiB7ZmxvYXQ6bm9uZTt9CiAgICAvKiBFbmQgSUU1LU1hYyBoYWNrICovCiAgICAjdGFicyBhOmhvdmVyIHNwYW4gewogICAgICBjb2xvcjojNjI3RUI3OwogICAgICB9CiAgICAjdGFiczEgYTpob3ZlciB7CiAgICAgIGJhY2tncm91bmQtcG9zaXRpb246MCUgLTQycHg7CiAgICAgIH0KICAgICN0YWJzMSBhOmhvdmVyIHNwYW4gewogICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOjEwMCUgLTQycHg7CiAgICAgIH0KCiAgICAgICN0YWJzMSAjY3VycmVudCBhIHsKICAgICAgICAgICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOjAlIC00MnB4OwogICAgICB9CiAgICAgICN0YWJzMSAjY3VycmVudCBhIHNwYW4gewogICAgICAgICAgICAgIGJhY2tncm91bmQtcG9zaXRpb246MTAwJSAtNDJweDsKICAgICAgfQotLT4KICAgICAgICAgICAgICAgIDwvc3R5bGU+Cgo8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgo8IS0tCi5zdHlsZTMge2ZvbnQtc2l6ZTogMTJweH0KLnN0eWxlNCB7Zm9udC1zaXplOiAxM3B4OyB9Ci5zdHlsZTYge2ZvbnQtc2l6ZTogOXB4fQotLT4KPC9zdHlsZT4KCgoKPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgoKICB2YXIgX2dhcSA9IF9nYXEgfHwgW107CiAgX2dhcS5wdXNoKFsnX3NldEFjY291bnQnLCAnVUEtMjM4MTc2Ni0yJ10pOwogIF9nYXEucHVzaChbJ190cmFja1BhZ2V2aWV3J10pOwoKICAoZnVuY3Rpb24oKSB7CiAgICB2YXIgZ2EgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzY3JpcHQnKTsgZ2EudHlwZSA9ICd0ZXh0L2phdmFzY3JpcHQnOyBnYS5hc3luYyA9IHRydWU7CiAgICBnYS5zcmMgPSAoJ2h0dHBzOicgPT0gZG9jdW1lbnQubG9jYXRpb24ucHJvdG9jb2wgPyAnaHR0cHM6Ly9zc2wnIDogJ2h0dHA6Ly93d3cnKSArICcuZ29vZ2xlLWFuYWx5dGljcy5jb20vZ2EuanMnOwogICAgdmFyIHMgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgnc2NyaXB0JylbMF07IHMucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoZ2EsIHMpOwogIH0pKCk7Cgo8L3NjcmlwdD4KCjwvaGVhZD4gCgo8Ym9keSB0b3BtYXJnaW49IjAiIGxlZnRtYXJnaW49IjAiIHJpZ2h0bWFyZ2luPSIwIiBib3R0b21tYXJnaW49IjAiPiAgCgoKPGJvZHkgdG9wbWFyZ2luPSIwIiBsZWZ0bWFyZ2luPSIwIj4gCgo8dGFibGUgYm9yZGVyPSIxIiBjZWxscGFkZGluZz0iMCIgY2VsbHNwYWNpbmc9IjAiIHdpZHRoPSI3NzUiIGFsaWduPSJjZW50ZXIiPgogIDx0cj4KICAgIDx0ZD4KCgkJCQoKPHRhYmxlIGJvcmRlcj0iMCIgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIiB3aWR0aD0iNzc1IiBhbGlnbj0iY2VudGVyIj4KICA8dHI+CiAgICA8dGQ+PHRhYmxlIGJvcmRlcj0iMCIgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIiB3aWR0aD0iNzc1Ij4KICAgICAgIDx0cj4KCiAgPC90cj4KICAgIDwvdGFibGU+CiAgICA8L3RkPgogIDwvdHI+CjwvdGFibGU+CgoKPHRhYmxlIHdpZHRoPSIxMDAlIiAgYm9yZGVyPSIwIiBjZWxsc3BhY2luZz0iNSIgY2VsbHBhZGRpbmc9IjUiPgogIDx0cj4KICAgIDx0ZD48YSBocmVmPSJodHRwOi8vd3d3LmluZGlhbXAzLmNvbS9tdXNpYyI+PGltZyBzcmM9Ii9pbWFnZXMvbG9nby5qcGciIGFsdD0iSW5kaWFNcDMuQ29tIj48L2E+PC90ZD4KICAgIDx0ZD4KPHNjcmlwdCBzcmM9Imh0dHA6Ly9hZHMtYnkubWFkYWRzbWVkaWEuY29tL3RhZ3MvNjkwLzUzOC9hc3luYy80Njh4NjAuanMiIHR5cGU9InRleHQvamF2YXNjcmlwdCI+PC9zY3JpcHQ+Cgo8L3RkPgo8L3RyPgo8L3RhYmxlPgoKPHRhYmxlIHdpZHRoPSI3NzUiIGJvcmRlcj0iMCIgYWxpZ249ImNlbnRlciIgY2VsbHBhZGRpbmc9IjEiIGNlbGxzcGFjaW5nPSIxIj4KICA8dHI+CiAgICA8dGQ+IDxkaXYgaWQ9InRhYnMxIj4KICAgICAgICAgICAgICAgICAgICAgICAgPHVsPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0gQ1NTIFRhYnMgLS0+CjxsaT48YSBocmVmPSJodHRwOi8vd3d3LmluZGlhbXAzLmNvbS9tdXNpYy9nZW5yZV9hbGJ1bXMucGhwP2lkPTMmYXJ0aXN0PTMiPjxzcGFuPkluZGlhbiBNb3ZpZXM8L3NwYW4+PC9hPjwvbGk+CjxsaT48YSBocmVmPSJodHRwOi8vd3d3LmluZGlhbXAzLmNvbS9tdXNpYy9nZW5yZV9hbGJ1bXMucGhwP2lkPTQmYXJ0aXN0PTQiPjxzcGFuPkluZGlhbiBQT1AgQWxidW1zPC9zcGFuPjwvYT48L2xpPgo8bGk+PGEgaHJlZj0iaHR0cDovL3d3dy5pbmRpYW1wMy5jb20vbXVzaWMvZ2VucmVfYWxidW1zLnBocD9pZD02JmFydGlzdD02Ij48c3Bhbj5JbmRpYW4gQXJ0aXN0czwvc3Bhbj48L2E+PC9saT4KPGxpPjxhIGhyZWY9Imh0dHA6Ly93d3cuaW5kaWFtcDMuY29tL211c2ljL2dlbnJlX2FsYnVtcy5waHA/aWQ9NSZhcnRpc3Q9NSI+PHNwYW4+T2xkIElzIEdvbGQ8L3NwYW4+PC9hPjwvbGk+CjxsaT48YSBocmVmPSJodHRwOi8vd3d3LmluZGlhbXAzLmNvbS9tdXNpYy9nZW5yZV9hbGJ1bXMucGhwP2lkPTcmYXJ0aXN0PTciPjxzcGFuPlB1bmphYmkgQmhhbmdyYSBTb25nczwvc3Bhbj48L2E+PC9saT4KPGxpPjxhIGhyZWY9Imh0dHA6Ly93d3cuaW5kaWFtcDMuY29tL211c2ljL2dlbnJlX2FsYnVtcy5waHA/aWQ9OCZhcnRpc3Q9OCI+PHNwYW4+SW5kaWFuIEdoYXphbHM8L3NwYW4+PC9hPjwvbGk+CjxsaT48YSBocmVmPSJodHRwOi8vd3d3LmluZGlhbXAzLmNvbS9tdXNpYy9nZW5yZV9hbGJ1bXMucGhwP2lkPTkmYXJ0aXN0PTkiPjxzcGFuPlBha2lzdGFuaSBQT1AgQWxidW1zPC9zcGFuPjwvYT48L2xpPgo8bGk+PGEgaHJlZj0iaHR0cDovL3d3dy5pbmRpYW1wMy5jb20vbXVzaWMvZ2VucmVfYWxidW1zLnBocD9pZD05JmFydGlzdD05Ij48c3Bhbj5JbnN0cnVtZW50YWxzPC9zcGFuPjwvYT48L2xpPgo8bGk+PGEgaHJlZj0iaHR0cDovL3d3dy5pbmRpYW1wMy5jb20vbXVzaWMvZ2VucmVfYWxidW1zLnBocD9pZD0xMSZhcnRpc3Q9MTEiPjxzcGFuPldlZGRpbmcgU29uZ3M8L3NwYW4+PC9hPjwvbGk+CjxsaT48YSBocmVmPSJodHRwOi8vd3d3LmluZGlhbXAzLmNvbS9tdXNpYy9nZW5yZV9hbGJ1bXMucGhwP2lkPTEyJmFydGlzdD0xMiI+PHNwYW4+UWF3YWxpZXM8L3NwYW4+PC9hPjwvbGk+CjxsaT48YSBocmVmPSJodHRwOi8vd3d3LmluZGlhbXAzLmNvbS9tdXNpYy9nZW5yZV9hbGJ1bXMucGhwP2lkPTEzJmFydGlzdD0xMyI+PHNwYW4+VGFtaWwgU29uZ3M8L3NwYW4+PC9hPjwvbGk+CjxsaT48YSBocmVmPSJodHRwOi8vd3d3LmluZGlhbXAzLmNvbS9tdXNpYy9nZW5yZV9hbGJ1bXMucGhwP2lkPTE1JmFydGlzdD0xNSI+PHNwYW4+UGFraXN0YW5pIE1vdmllczwvc3Bhbj48L2E+PC9saT4KCiAgICAgICAgICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgICA8L2Rpdj4KPC90ZD4KICA8L3RyPgo8L3RhYmxlPgoKPGRpdiBjbGFzcz0iZ2xvc3N5bWVudSIgYWxpZ249ImNlbnRlciI+CgoJPGxpPjxhIGhyZWY9ImluZGV4LnBocCI+PGI+TmV3IEFsYnVtczwvYj48L2E+PC9saT4KCTxsaT48YSBocmVmPSJpbmRleC5waHA/YWN0aW9uPXRvcCZzaG93PTEwJnR5cGU9U29uZ3MiPjxiPlRvcCAxMCBTb25nczwvYj48L2E+PC9saT4KCTxsaT48YSBocmVmPSJnZW5yZV9hbGJ1bXMucGhwP2lkPTMmYXJ0aXN0PTMiPjxiPkhpbmRpIE1vdmllcyBTb25nczwvYj48L2E+PC9saT4JCgk8bGk+PGEgaHJlZj0iZ2VucmVfYWxidW1zLnBocD9pZD00JmFydGlzdD00Ij48Yj5JbmRpYW4gUE9QIEFsYnVtczwvYj48L2E+PC9saT4KCTxsaT48YSBocmVmPSJnZW5yZV9hbGJ1bXMucGhwP2lkPTUmYXJ0aXN0PTUiPjxiPk9sZGllczwvYj48L2E+PC9saT4KCTxsaT48YSBocmVmPSJpbmRleC5waHA/YWN0aW9uPXNlYXJjaCI+PGI+U2VhcmNoZXM8L2I+PC9hPjwvbGk+IAoKPC9kaXY+CgoKCgkgPHRhYmxlIGNsYXNzPSJzZWFyY2giPgoJCQkJPHRyPgoJCQkgIDx0ZCBhbGlnbj1jZW50ZXI+ICAKPGZvcm0gYWN0aW9uPSdpbmRleC5waHA/YWN0aW9uPXNlYXJjaCcgbWV0aG9kPSdnZXQnPiAgCjxzdHJvbmc+U2VhcmNoOjwvc3Ryb25nPiA8aW5wdXQgdHlwZT1yYWRpbyBuYW1lPSdpbicgdmFsdWU9ImFydGlzdCI+Jm5ic3A7QXJ0aXN0PC9vcHRpb24+PGlucHV0IHR5cGU9cmFkaW8gbmFtZT0naW4nIHZhbHVlPSJhbGJ1bSIgPiZuYnNwO0FsYnVtPC9vcHRpb24+IDxpbnB1dCB0eXBlPXJhZGlvIG5hbWU9J2luJyB2YWx1ZT0ic29uZyIgY2hlY2tlZD4mbmJzcDtTb25nPC9vcHRpb24+IDxpbnB1dCBjbGFzcz0iaW5wdXRib3giIHR5cGU9J3RleHRib3gnIHJvd3M9JzEwMCcgY29scz0nMTAwJyBuYW1lPSd0ZXJtJyBvbkJsdXI9ImlmKHRoaXMudmFsdWU9PScnKSB0aGlzLnZhbHVlPScnOyIgb25Gb2N1cz0iaWYodGhpcy52YWx1ZT09J3NlYXJjaC4uLicpIHRoaXMudmFsdWU9Jyc7Ij4mbmJzcDs8aW5wdXQgdHlwZT0naGlkZGVuJyBuYW1lPSdhY3Rpb24nIHZhbHVlPSdzZWFyY2gnPgo8aW5wdXQgdHlwZT0naGlkZGVuJyBuYW1lPSdzdGFydCcgdmFsdWU9JzAnPjxpbnB1dCB0eXBlPSJzdWJtaXQiIHZhbHVlPSdTZWFyY2gnIGNsYXNzPSJmb3JtYnV0dG9uIj4KPC90ZD48L2Zvcm0+IAogICAgICAgICAgPC90cj4KICAgICAgICA8L3RhYmxlPgoKCQk8dGFibGUgY2VsbHNwYWNpbmc9IjEiIGNlbGxwYWRkaW5nPSI2IiBjbGFzcz0iYnJvd3NlIj4KCgkJCQk8dHI+CgoJCQkJIDx0ZCBjbGFzcz1hbHBoYWJnX2NlbnRlcj48Yj5Ccm93c2UgQWxsIGJ5ICZuYnNwOzwvYj4gPEEgSFJFRj0iaW5kZXgucGhwP21vZGU9bGlzdCZhbHBoYT0wLTkiPiM8L0E+ICZuYnNwOyA8YSBocmVmPSJpbmRleC5waHA/bW9kZT1saXN0JmFscGhhPUEiPkE8L2E+ICZuYnNwOyA8YSBocmVmPSJpbmRleC5waHA/bW9kZT1saXN0JmFscGhhPUIiPkI8L2E+ICAmbmJzcDs8YSBocmVmPSJpbmRleC5waHA/bW9kZT1saXN0JmFscGhhPUMiPkM8L2E+ICZuYnNwOzxhIGhyZWY9ImluZGV4LnBocD9tb2RlPWxpc3QmYWxwaGE9RCI+RDwvYT4gJm5ic3A7PGEgaHJlZj0iaW5kZXgucGhwP21vZGU9bGlzdCZhbHBoYT1FIj5FPC9hPiAmbmJzcDs8YSBocmVmPSJpbmRleC5waHA/bW9kZT1saXN0JmFscGhhPUYiPkY8L2E+ICAmbmJzcDs8YSBocmVmPSJpbmRleC5waHA/bW9kZT1saXN0JmFscGhhPUciPkc8L2E+ICAmbmJzcDs8YSBocmVmPSJpbmRleC5waHA/bW9kZT1saXN0JmFscGhhPUgiPkg8L2E+ICZuYnNwOzxhIGhyZWY9ImluZGV4LnBocD9tb2RlPWxpc3QmYWxwaGE9SSI+STwvYT4gJm5ic3A7PGEgaHJlZj0iaW5kZXgucGhwP21vZGU9bGlzdCZhbHBoYT1KIj5KPC9hPiAmbmJzcDs8YSBocmVmPSJpbmRleC5waHA/bW9kZT1saXN0JmFscGhhPUsiPks8L2E+ICZuYnNwOzxhIGhyZWY9ImluZGV4LnBocD9tb2RlPWxpc3QmYWxwaGE9TCI+TDwvYT4gJm5ic3A7PGEgaHJlZj0iaW5kZXgucGhwP21vZGU9bGlzdCZhbHBoYT1NIj5NPC9hPiAmbmJzcDs8YSBocmVmPSJpbmRleC5waHA/bW9kZT1saXN0JmFscGhhPU4iPk48L2E+ICZuYnNwOzxhIGhyZWY9ImluZGV4LnBocD9tb2RlPWxpc3QmYWxwaGE9TyI+TzwvYT4gJm5ic3A7PGEgaHJlZj0iaW5kZXgucGhwP21vZGU9bGlzdCZhbHBoYT1QIj5QPC9hPiAmbmJzcDs8YSBocmVmPSJpbmRleC5waHA/bW9kZT1saXN0JmFscGhhPVEiPlE8L2E+ICZuYnNwOzxhIGhyZWY9ImluZGV4LnBocD9tb2RlPWxpc3QmYWxwaGE9UiI+UjwvYT4gJm5ic3A7PGEgaHJlZj0iaW5kZXgucGhwP21vZGU9bGlzdCZhbHBoYT1TIj5TPC9hPiAmbmJzcDs8YSBocmVmPSJpbmRleC5waHA/bW9kZT1saXN0JmFscGhhPVQiPlQ8L2E+ICZuYnNwOzxhIGhyZWY9ImluZGV4LnBocD9tb2RlPWxpc3QmYWxwaGE9VSI+VTwvYT4gJm5ic3A7PGEgaHJlZj0iaW5kZXgucGhwP21vZGU9bGlzdCZhbHBoYT1WIj5WPC9hPiAmbmJzcDs8YSBocmVmPSJpbmRleC5waHA/bW9kZT1saXN0JmFscGhhPVciPlc8L2E+ICZuYnNwOzxhIGhyZWY9ImluZGV4LnBocD9tb2RlPWxpc3QmYWxwaGE9WCI+WDwvYT4gJm5ic3A7PGEgaHJlZj0iaW5kZXgucGhwP21vZGU9bGlzdCZhbHBoYT1ZIj5ZPC9hPiAmbmJzcDs8YSBocmVmPSJpbmRleC5waHA/bW9kZT1saXN0JmFscGhhPVoiPlo8L2E+PC90ZD4gPHRkIGNsYXNzPWFscGhhYmdfY2VudGVyPiAgICAgICAgICA8YSBocmVmPSJ2aWV3YWxidW1zLnBocCI+VmlldyBBbGwgQWxidW1zPC9hPjwvdGQ+CgoJCSAgPC90cj4KCjwvdGFibGU+Cjxicj4KPGRpdiBhbGlnbj0iY2VudGVyIj4KPHNjcmlwdCBzcmM9Imh0dHA6Ly9hZHMtYnkubWFkYWRzbWVkaWEuY29tL3RhZ3MvNjkwLzUzOC9hc3luYy83Mjh4OTAuanMiIHR5cGU9InRleHQvamF2YXNjcmlwdCI+PC9zY3JpcHQ+CjwvZGl2PgoKICAgICAgICA8L2Rpdj4KCjxicj4KCgkJCQoJPC90ZD48L3RyPgoKCTx0cj4KCgkJPHRkIHZhbGlnbj10b3Agc3R5bGU9InBhZGRpbmctdG9wOjU7Ij4KCgkJCTx0YWJsZSBjZWxscGFkZGluZz0yIGNlbGxzcGFjaW5nPTAgd2lkdGg9MTAwJSBhbGlnbj1jZW50ZXI+CgoJCQkJPHRyPgoKCQkJCTx0ZCB3aWR0aD0yNSUgdmFsaWduPXRvcCBhbGlnbj1jZW50ZXI+CgoKCgkJCQkJPHRhYmxlIGNlbGxwYWRkaW5nPTEgY2VsbHNwYWNpbmc9MCB3aWR0aD0xMDAlIGFsaWduPWNlbnRlcj4KCgkJCQkJCTx0cj48dGQ+CgoJCQkJCQk8dGFibGUgd2lkdGg9MTAwJSBiZ2NvbG9yPSIjRkZGRkZGIiBjZWxscGFkZGluZz0yIGNlbGxzcGFjaW5nPTIgY2xhc3M9Ym9yZGVyPgoKCTx0cj48dGQgY2xhc3M9dGl0bGVfY2xhc3MgYWxpZ249Y2VudGVyPkJyb3dzZSBHZW5yZXM8L3RkPjwvdHI+Cgk8dHI+PHRkIGFsaWduPSJsZWZ0IiBjZWxscGFkZGluZz0xMiBjZWxsc3BhY2luZz0xMj4JCgogIDxkaXYgaWQ9Im1lbnUzIj4KICAgICAgICAgICAgICAgICAgICAgICAgPHVsPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0gQ1NTIFRhYnMgLS0+CjxsaT48YSBocmVmPSJodHRwOi8vd3d3LmluZGlhbXAzLmNvbS9tdXNpYy9nZW5yZV9hbGJ1bXMucGhwP2lkPTMmYXJ0aXN0PTMiPkluZGlhbiBNb3ZpZXM8L2E+PC9saT4KPGxpPjxhIGhyZWY9Imh0dHA6Ly93d3cuaW5kaWFtcDMuY29tL211c2ljL2dlbnJlX2FsYnVtcy5waHA/aWQ9NCZhcnRpc3Q9NCI+SW5kaWFuIFBPUCBBbGJ1bXM8L2E+PC9saT4KPGxpPjxhIGhyZWY9Imh0dHA6Ly93d3cuaW5kaWFtcDMuY29tL211c2ljL2dlbnJlX2FsYnVtcy5waHA/aWQ9NiZhcnRpc3Q9NiI+SW5kaWFuIEFydGlzdHM8L2E+PC9saT4KPGxpPjxhIGhyZWY9Imh0dHA6Ly93d3cuaW5kaWFtcDMuY29tL211c2ljL2dlbnJlX2FsYnVtcy5waHA/aWQ9NSZhcnRpc3Q9NSI+T2xkIElzIEdvbGQ8L2E+PC9saT4KPGxpPjxhIGhyZWY9Imh0dHA6Ly93d3cuaW5kaWFtcDMuY29tL211c2ljL2dlbnJlX2FsYnVtcy5waHA/aWQ9NyZhcnRpc3Q9NyI+UHVuamFiaSBCaGFuZ3JhIFNvbmdzPC9hPjwvbGk+CjxsaT48YSBocmVmPSJodHRwOi8vd3d3LmluZGlhbXAzLmNvbS9tdXNpYy9nZW5yZV9hbGJ1bXMucGhwP2lkPTgmYXJ0aXN0PTgiPkluZGlhbiBHaGF6YWxzPC9hPjwvbGk+CjxsaT48YSBocmVmPSJodHRwOi8vd3d3LmluZGlhbXAzLmNvbS9tdXNpYy9nZW5yZV9hbGJ1bXMucGhwP2lkPTkmYXJ0aXN0PTkiPlBha2lzdGFuaSBQT1AgQWxidW1zPC9hPjwvbGk+CjxsaT48YSBocmVmPSJodHRwOi8vd3d3LmluZGlhbXAzLmNvbS9tdXNpYy9nZW5yZV9hbGJ1bXMucGhwP2lkPTEwJmFydGlzdD0xMCI+SW5zdHJ1bWVudGFsczwvYT48L2xpPgo8bGk+PGEgaHJlZj0iaHR0cDovL3d3dy5pbmRpYW1wMy5jb20vbXVzaWMvZ2VucmVfYWxidW1zLnBocD9pZD0xMSZhcnRpc3Q9MTEiPldlZGRpbmcgU29uZ3M8L2E+PC9saT4KPGxpPjxhIGhyZWY9Imh0dHA6Ly93d3cuaW5kaWFtcDMuY29tL211c2ljL2dlbnJlX2FsYnVtcy5waHA/aWQ9MTImYXJ0aXN0PTEyIj5RYXdhbGllczwvYT48L2xpPgo8bGk+PGEgaHJlZj0iaHR0cDovL3d3dy5pbmRpYW1wMy5jb20vbXVzaWMvZ2VucmVfYWxidW1zLnBocD9pZD0xMyZhcnRpc3Q9MTMiPlRhbWlsIFNvbmdzPC9hPjwvbGk+CjxsaT48YSBocmVmPSJodHRwOi8vd3d3LmluZGlhbXAzLmNvbS9tdXNpYy9nZW5yZV9hbGJ1bXMucGhwP2lkPTE0JmFydGlzdD0xNCI+QWZnaGFuaSBTb25nczwvYT48L2xpPgo8bGk+PGEgaHJlZj0iaHR0cDovL3d3dy5pbmRpYW1wMy5jb20vbXVzaWMvZ2VucmVfYWxidW1zLnBocD9pZD0xNSZhcnRpc3Q9MTUiPlBha2lzdGFuaSBNb3ZpZXM8L2E+PC9saT4KCiAgICAgICAgICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgICA8L2Rpdj4KCgoKCTwvdGQ+PC90cj4KCjwvdGFibGU+CQkJCTwvdGQ+CgoJCQk8L3RyPgoKCQkJPC90YWJsZT4KCgkJCQkJCSAKPHRhYmxlIGJnY29sb3I9IiNGRkZGRkYiIHdpZHRoPTEwMCUgY2VsbHBhZGRpbmc9MiBjZWxsc3BhY2luZz0yIGNsYXNzPWJvcmRlcj4KCTx0cj48dGQgY2xhc3M9dGl0bGVfY2xhc3NfYyBhbGlnbj1jZW50ZXI+IE15IEFjY291bnQgPC90ZD48L3RyPgoJPHRyPjx0ZCBhbGlnbj0ibGVmdCIgY2VsbHBhZGRpbmc9MTIgY2VsbHNwYWNpbmc9MTI+CQkJCQkJCQkJCQkJPGZvcm0gYWN0aW9uPSJwcm9jZXNzLnBocCIgbWV0aG9kPSJQT1NUIiB0YXJnZXQ9Il90b3AiPgoJCQkJCQkJCQkJCQkJCQkJCQlVc2VybmFtZTo8L3RkPjx0cj48dGQ+CgkJCQkJCTxpbnB1dCB0eXBlPSJ0ZXh0IiBuYW1lPSJ1c2VyIiBtYXhsZW5ndGg9IjIwIiBzaXplPScxNScgY2xhc3M9ImlucHV0Ym94IiB2YWx1ZT0iIj48L3RkPjx0cj48dGQ+CgkJCQkJCVBhc3N3b3JkOjwvdGQ+PHRyPjx0ZD4KCQkJCQkJPGlucHV0IHR5cGU9InBhc3N3b3JkIiBuYW1lPSJwYXNzIiBtYXhsZW5ndGg9IjIwIiBzaXplPScxNScgY2xhc3M9ImlucHV0Ym94IiB2YWx1ZT0iIj48L3RkPjx0cj48dGQ+CgkJCQkJCTxpbnB1dCB0eXBlPSJjaGVja2JveCIgbmFtZT0icmVtZW1iZXIiIGNoZWNrZWQ+ICAKCQkJCQkJPGZvbnQgc2l6ZT0iMiI+CgkJCQkJCVJlbWVtYmVyIG1lPC90ZD48dHI+PHRkPgoJCQkJCQk8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJzdWJsb2dpbiIgdmFsdWU9IjEiPgoJCQkJCQk8RGl2IGFsaWduPXJpZ2h0PjxpbnB1dCBjbGFzcz0iaW5wdXRib3giIGNsYXNzPSJmb3JtYnV0dG9uIiB0eXBlPSJzdWJtaXQiIHZhbHVlPSJMb2dpbiI+PC9kaXY+PGJyPgoJCQkJCQlbIDxhIGhyZWY9ImZvcmdvdHBhc3MucGhwIiB0YXJnZXQ9Il90b3AiPkZvcmdvdCBQYXNzd29yZD88L2E+IF08YnI+CgkJCQkJCVsgPGEgaHJlZj0icmVnaXN0ZXIucGhwIiB0YXJnZXQ9Il90b3AiPlNpZ24tVXAhPC9hPiBdPC9iPgoJCQkJCQk8L2ZvbnQ+CgkJCQkJPC9mb3JtPgoJCQkJCTwvdGQ+PC90cj4KCQkJCQk8L3RkPjwvdHI+CgoJCQoJCjwvdGFibGU+IAoJCQkJCSAgCgogICAgIAoKCQkJCgoJICAgICAKCgkJIDx0YWJsZSBiZ2NvbG9yPSIjRkZGRkZGIiB3aWR0aD0xMDAlIGNlbGxwYWRkaW5nPTIgY2VsbHNwYWNpbmc9MiBjbGFzcz1ib3JkZXI+CgoJPHRyPjx0ZCBjbGFzcz10aXRsZV9jbGFzcyBhbGlnbj1jZW50ZXI+QWR2ZXJ0aXNlbWVudDwvdGQ+PC90cj4KCgkJPC90cj4KCgkJPHRyPgoKCQk8dGQ+CgoKICAgICAgICA8L3RkPgoKCTwvdHI+Cgo8L3RhYmxlPiAKCgkJCQkJPHNwYW4+IDx0ZCB2YWxpZ249InRvcCIgYmdjb2xvcj0iI0ZGRkZGRiIgd2lkdGg9IjEwMCUiPiA8ZGl2IGNsYXNzIm1haW4iPgoKICAgICAgICA8dGFibGUgd2lkdGg9IjEwMCUiICBib3JkZXI9IjAiIGNlbGxzcGFjaW5nPSIwIiBjZWxscGFkZGluZz0iMCI+CgogICAgICAgIDx0cj4KCgkJPC9zcGFuPgoKCQk8L2Rpdj48dGQgdmFsaWduPSd0b3AnIGJnY29sb3I9JyNGN0Y3RjcnIHN0eWxlPSdib3JkZXItdG9wOiAwcHggc29saWQgI0ZGRkZGRjsnPiAKICAgICAgICAgICAgICAgICAgICAgIAkJCTx0YWJsZSBjZWxscGFkZGluZz0nMCcgY2VsbHNwYWNpbmc9JzAnIGNsYXNzPSdtb2R1bGV0YWJsZSc+CgkJCQkJCQk8dHI+CgkJCQkJPHRoIHZhbGlnbj0ndG9wJz4KCQkJCQkJCQkJCU5ld2VzdCBBbGJ1bXMgYXQgSW5kaWFNcDMuQ29tCQkJCQk8L3RoPgoJCQkJPC90cj4KCQkJCQkJCTx0cj4KCQkJCTx0ZD48dGl0bGU+SW5kaWFNcDMuQ29tIC0gRG93bmxvYWQgJiBwbGF5IG9ubGluZSBmcmVlIGluZGlhbiBoaW5kaSBtcDMgbXVzaWMgc29uZ3Mgb2YgbGF0ZXN0ICYgb2xkIGJvbGx5d29vZCBtb3ZpZXM8L3RpdGxlPjxkaXYgaWQ9J2NvbnRlbnQnPgo8dGFibGUgY2xhc3M9J21vZHVsZXRhYmxlJz48dHI+PHRkPjxhIGNsYXNzPXRleHQgaHJlZj0naW5kZXgucGhwP2FjdGlvbj1hbGJ1bSZpZD05NTE1Jz48aW1nIHNyYz0nYXVkaW8vSW5kaWFuIE1vdmllcy9JbmRpYW4gTW92aWVzIEhpbmRpIE1wMyBTb25ncy9PbmNlIFVwb24gQSBUaW1lIE11bWJhYWkgRG9iYXJhICgyMDEzKS9PbmNlLVVwb24tQS1UaW1lLU11bWJhYWktRG9iYXJhLTIwMTMtZG93bmxvYWQtbXAzLXNvbmdzIC5qcGcnIHdpZHRoPScxMDAnIGhlaWdodD0nOTknIGNsYXNzPSJib3JkZXJpbWFnZSIgb25Nb3VzZW92ZXI9ImJvcmRlcml0KHRoaXMsJ2JsYWNrJykiIG9uTW91c2VvdXQ9ImJvcmRlcml0KHRoaXMsJ2JsYWNrJykiIGFsaWduPSdsZWZ0JyBoc3BhY2U9JzUnIHZzcGFjZT0nMyc+PC9hPgo8Yj48YSBjbGFzcz10ZXh0IGhyZWY9J2luZGV4LnBocD9hY3Rpb249YWxidW0maWQ9OTUxNSc+SW5kaWFuIE1vdmllcyBIaW5kaSBNcDMgU29uZ3MgLSBPbmNlIFVwb24gQSBUaW1lIE11bWJhYWkgRG9iYXJhICgyMDEzKTwvYT48L2I+IDxicj48YnI+PGJyPkRvd25sb2FkOiA8Zm9udCBzaXplPScyJz48YSBocmVmPSJodHRwOi8vaW5kaWFtcDNkb3dubG9hZC5jb20vaW5kaWFuX21vdmllcy8yMDEzL09uY2VfVXBvbl9BX1RpbWVfTXVtYmFhaV9Eb2JhcmFfKDIwMTMpX0luZGlhTXAzLkNvbS56aXAiPkRvd25sb2FkIEZ1bGwgQWxidW08L2E+PC9mb250Pjxicj4gPGJyPiA8L3RkPjwvdHI+PC90YWJsZT48aHIgc2l6ZT0nMScgd2lkdGg9JzEwMCUnIGNvbG9yPScjZmZmZmZmJz48dGFibGUgY2xhc3M9J21vZHVsZXRhYmxlJz48dHI+PHRkPjxhIGNsYXNzPXRleHQgaHJlZj0naW5kZXgucGhwP2FjdGlvbj1hbGJ1bSZpZD05NTExJz48aW1nIHNyYz0nYXVkaW8vSW5kaWFuIE1vdmllcy9JbmRpYW4gTW92aWVzIEhpbmRpIE1wMyBTb25ncy9MdXYgVSBTb25peW8gKDIwMTMpL0x1di11LXNvbml5by0yMDEzLWRvd25sb2FkLW1wMy1zb25ncy5qcGcnIHdpZHRoPScxMDAnIGhlaWdodD0nOTknIGNsYXNzPSJib3JkZXJpbWFnZSIgb25Nb3VzZW92ZXI9ImJvcmRlcml0KHRoaXMsJ2JsYWNrJykiIG9uTW91c2VvdXQ9ImJvcmRlcml0KHRoaXMsJ2JsYWNrJykiIGFsaWduPSdsZWZ0JyBoc3BhY2U9JzUnIHZzcGFjZT0nMyc+PC9hPgo8Yj48YSBjbGFzcz10ZXh0IGhyZWY9J2luZGV4LnBocD9hY3Rpb249YWxidW0maWQ9OTUxMSc+SW5kaWFuIE1vdmllcyBIaW5kaSBNcDMgU29uZ3MgLSBMdXYgVSBTb25peW8gKDIwMTMpPC9hPjwvYj4gPGJyPjxicj48YnI+RG93bmxvYWQ6IDxmb250IHNpemU9JzInPjxhIGhyZWY9Imh0dHA6Ly9pbmRpYW1wM2Rvd25sb2FkLmNvbS9pbmRpYW5fbW92aWVzLzIwMTMvTHV2X1VfU29uaXlvXygyMDEzKV9JbmRpYU1wMy5Db20uemlwIj5Eb3dubG9hZCBGdWxsIEFsYnVtPC9hPjwvZm9udD48YnI+IDxicj4gPC90ZD48L3RyPjwvdGFibGU+PGhyIHNpemU9JzEnIHdpZHRoPScxMDAlJyBjb2xvcj0nI2ZmZmZmZic+PHRhYmxlIGNsYXNzPSdtb2R1bGV0YWJsZSc+PHRyPjx0ZD48YSBjbGFzcz10ZXh0IGhyZWY9J2luZGV4LnBocD9hY3Rpb249YWxidW0maWQ9OTUxMic+PGltZyBzcmM9J2F1ZGlvL0luZGlhbiBNb3ZpZXMvSW5kaWFuIE1vdmllcyBIaW5kaSBNcDMgU29uZ3MvQmFqYXRleSBSYWhvICgyMDEzKS9CYWphdGV5LVJhaG8tMjAxMy1kb3dubG9hZC1tcDMtc29uZ3MuanBnJyB3aWR0aD0nMTAwJyBoZWlnaHQ9Jzk5JyBjbGFzcz0iYm9yZGVyaW1hZ2UiIG9uTW91c2VvdmVyPSJib3JkZXJpdCh0aGlzLCdibGFjaycpIiBvbk1vdXNlb3V0PSJib3JkZXJpdCh0aGlzLCdibGFjaycpIiBhbGlnbj0nbGVmdCcgaHNwYWNlPSc1JyB2c3BhY2U9JzMnPjwvYT4KPGI+PGEgY2xhc3M9dGV4dCBocmVmPSdpbmRleC5waHA/YWN0aW9uPWFsYnVtJmlkPTk1MTInPkluZGlhbiBNb3ZpZXMgSGluZGkgTXAzIFNvbmdzIC0gQmFqYXRleSBSYWhvICgyMDEzKTwvYT48L2I+IDxicj48YnI+PGJyPkRvd25sb2FkOiA8Zm9udCBzaXplPScyJz48YSBocmVmPSJodHRwOi8vaW5kaWFtcDNkb3dubG9hZC5jb20vaW5kaWFuX21vdmllcy8yMDEzL0JhamF0ZXlfUmFob18oMjAxMylfSW5kaWFNcDMuQ29tLnppcCI+RG93bmxvYWQgRnVsbCBBbGJ1bTwvYT48L2ZvbnQ+PGJyPiA8YnI+IDwvdGQ+PC90cj48L3RhYmxlPjxociBzaXplPScxJyB3aWR0aD0nMTAwJScgY29sb3I9JyNmZmZmZmYnPjx0YWJsZSBjbGFzcz0nbW9kdWxldGFibGUnPjx0cj48dGQ+PGEgY2xhc3M9dGV4dCBocmVmPSdpbmRleC5waHA/YWN0aW9uPWFsYnVtJmlkPTk1MTMnPjxpbWcgc3JjPSdhdWRpby9JbmRpYW4gTW92aWVzL0luZGlhbiBNb3ZpZXMgSGluZGkgTXAzIFNvbmdzL1JhYmJhIE1haW4gS3lhIEthcm9vbiAoMjAxMykvUmFiYmEtTWFpbi1LeWEtS2Fyb29uLTIwMTMtZG93bmxvYWQtbXAzLXNvbmdzLmpwZycgd2lkdGg9JzEwMCcgaGVpZ2h0PSc5OScgY2xhc3M9ImJvcmRlcmltYWdlIiBvbk1vdXNlb3Zlcj0iYm9yZGVyaXQodGhpcywnYmxhY2snKSIgb25Nb3VzZW91dD0iYm9yZGVyaXQodGhpcywnYmxhY2snKSIgYWxpZ249J2xlZnQnIGhzcGFjZT0nNScgdnNwYWNlPSczJz48L2E+CjxiPjxhIGNsYXNzPXRleHQgaHJlZj0naW5kZXgucGhwP2FjdGlvbj1hbGJ1bSZpZD05NTEzJz5JbmRpYW4gTW92aWVzIEhpbmRpIE1wMyBTb25ncyAtIFJhYmJhIE1haW4gS3lhIEthcm9vbiAoMjAxMyk8L2E+PC9iPiA8YnI+PGJyPjxicj5Eb3dubG9hZDogPGZvbnQgc2l6ZT0nMic+PGEgaHJlZj0iaHR0cDovL2luZGlhbXAzZG93bmxvYWQuY29tL2luZGlhbl9tb3ZpZXMvMjAxMy9SYWJiYV9NYWluX0t5YV9LYXJvb25fKDIwMTMpX0luZGlhTXAzLkNvbS56aXAiPkRvd25sb2FkIEZ1bGwgQWxidW08L2E+PC9mb250Pjxicj4gPGJyPiA8L3RkPjwvdHI+PC90YWJsZT48aHIgc2l6ZT0nMScgd2lkdGg9JzEwMCUnIGNvbG9yPScjZmZmZmZmJz48dGFibGUgY2xhc3M9J21vZHVsZXRhYmxlJz48dHI+PHRkPjxhIGNsYXNzPXRleHQgaHJlZj0naW5kZXgucGhwP2FjdGlvbj1hbGJ1bSZpZD05NTE2Jz48aW1nIHNyYz0nYXVkaW8vSW5kaWFuIE1vdmllcy9JbmRpYW4gTW92aWVzIEhpbmRpIE1wMyBTb25ncy9OYXNoYSAoMjAxMykvTmFzaGEtMjAxMy1kb3dubG9hZC1tcDMtc29uZ3MuanBnJyB3aWR0aD0nMTAwJyBoZWlnaHQ9Jzk5JyBjbGFzcz0iYm9yZGVyaW1hZ2UiIG9uTW91c2VvdmVyPSJib3JkZXJpdCh0aGlzLCdibGFjaycpIiBvbk1vdXNlb3V0PSJib3JkZXJpdCh0aGlzLCdibGFjaycpIiBhbGlnbj0nbGVmdCcgaHNwYWNlPSc1JyB2c3BhY2U9JzMnPjwvYT4KPGI+PGEgY2xhc3M9dGV4dCBocmVmPSdpbmRleC5waHA/YWN0aW9uPWFsYnVtJmlkPTk1MTYnPkluZGlhbiBNb3ZpZXMgSGluZGkgTXAzIFNvbmdzIC0gTmFzaGEgKDIwMTMpPC9hPjwvYj4gPGJyPjxicj48YnI+RG93bmxvYWQ6IDxmb250IHNpemU9JzInPjxhIGhyZWY9Imh0dHA6Ly9pbmRpYW1wM2Rvd25sb2FkLmNvbS9pbmRpYW5fbW92aWVzLzIwMTMvTmFzaGFfKDIwMTMpX0luZGlhTXAzLkNvbS56aXAiPkRvd25sb2FkIEZ1bGwgQWxidW08L2E+PC9mb250Pjxicj4gPGJyPiA8L3RkPjwvdHI+PC90YWJsZT48aHIgc2l6ZT0nMScgd2lkdGg9JzEwMCUnIGNvbG9yPScjZmZmZmZmJz48dGFibGUgY2xhc3M9J21vZHVsZXRhYmxlJz48dHI+PHRkPjxhIGNsYXNzPXRleHQgaHJlZj0naW5kZXgucGhwP2FjdGlvbj1hbGJ1bSZpZD05NTEwJz48aW1nIHNyYz0nYXVkaW8vSW5kaWFuIE1vdmllcy9JbmRpYW4gTW92aWVzIEhpbmRpIE1wMyBTb25ncy9DaGVubmFpIEV4cHJlc3MgKDIwMTMpL0NoZW5uYWktRXhwcmVzcy0yMDEzLWRvd25sb2FkLW1wMy1zb25ncy5qcGcnIHdpZHRoPScxMDAnIGhlaWdodD0nOTknIGNsYXNzPSJib3JkZXJpbWFnZSIgb25Nb3VzZW92ZXI9ImJvcmRlcml0KHRoaXMsJ2JsYWNrJykiIG9uTW91c2VvdXQ9ImJvcmRlcml0KHRoaXMsJ2JsYWNrJykiIGFsaWduPSdsZWZ0JyBoc3BhY2U9JzUnIHZzcGFjZT0nMyc+PC9hPgo8Yj48YSBjbGFzcz10ZXh0IGhyZWY9J2luZGV4LnBocD9hY3Rpb249YWxidW0maWQ9OTUxMCc+SW5kaWFuIE1vdmllcyBIaW5kaSBNcDMgU29uZ3MgLSBDaGVubmFpIEV4cHJlc3MgKDIwMTMpPC9hPjwvYj4gPGJyPjxicj48YnI+RG93bmxvYWQ6IDxmb250IHNpemU9JzInPjxhIGhyZWY9Imh0dHA6Ly9pbmRpYW1wM2Rvd25sb2FkLmNvbS9pbmRpYW5fbW92aWVzLzIwMTMvQ2hlbm5haV9FeHByZXNzXygyMDEzKV9JbmRpYU1wMy5Db20uemlwIj5Eb3dubG9hZCBGdWxsIEFsYnVtPC9hPjwvZm9udD48YnI+IDxicj4gPC90ZD48L3RyPjwvdGFibGU+PGhyIHNpemU9JzEnIHdpZHRoPScxMDAlJyBjb2xvcj0nI2ZmZmZmZic+PHRhYmxlIGNsYXNzPSdtb2R1bGV0YWJsZSc+PHRyPjx0ZD48YSBjbGFzcz10ZXh0IGhyZWY9J2luZGV4LnBocD9hY3Rpb249YWxidW0maWQ9OTUwOSc+PGltZyBzcmM9J2F1ZGlvL0luZGlhbiBNb3ZpZXMvSW5kaWFuIE1vdmllcyBIaW5kaSBNcDMgU29uZ3MvQm95c3MgVG9oIEJveXNzIEhhaW4gKDIwMTMpL0JveXNzLVRvaC1Cb3lzcy1IYWluLTIwMTMtZG93bmxvYWQtbXAzLXNvbmdzLmpwZycgd2lkdGg9JzEwMCcgaGVpZ2h0PSc5OScgY2xhc3M9ImJvcmRlcmltYWdlIiBvbk1vdXNlb3Zlcj0iYm9yZGVyaXQodGhpcywnYmxhY2snKSIgb25Nb3VzZW91dD0iYm9yZGVyaXQodGhpcywnYmxhY2snKSIgYWxpZ249J2xlZnQnIGhzcGFjZT0nNScgdnNwYWNlPSczJz48L2E+CjxiPjxhIGNsYXNzPXRleHQgaHJlZj0naW5kZXgucGhwP2FjdGlvbj1hbGJ1bSZpZD05NTA5Jz5JbmRpYW4gTW92aWVzIEhpbmRpIE1wMyBTb25ncyAtIEJveXNzIFRvaCBCb3lzcyBIYWluICgyMDEzKTwvYT48L2I+IDxicj48YnI+PGJyPkRvd25sb2FkOiA8Zm9udCBzaXplPScyJz48YSBocmVmPSJodHRwOi8vaW5kaWFtcDNkb3dubG9hZC5jb20vaW5kaWFuX21vdmllcy8yMDEzL0JveXNzX1RvaF9Cb3lzc19IYWluXygyMDEzKV9JbmRpYU1wMy5Db20uemlwIj5Eb3dubG9hZCBGdWxsIEFsYnVtPC9hPjwvZm9udD48YnI+IDxicj4gPC90ZD48L3RyPjwvdGFibGU+PGhyIHNpemU9JzEnIHdpZHRoPScxMDAlJyBjb2xvcj0nI2ZmZmZmZic+PHRhYmxlIGNsYXNzPSdtb2R1bGV0YWJsZSc+PHRyPjx0ZD48YSBjbGFzcz10ZXh0IGhyZWY9J2luZGV4LnBocD9hY3Rpb249YWxidW0maWQ9OTUwOCc+PGltZyBzcmM9J2F1ZGlvL0luZGlhbiBNb3ZpZXMvSW5kaWFuIE1vdmllcyBIaW5kaSBNcDMgU29uZ3MvRC1EYXkgKDIwMTMpL0QtRGF5LWRvd25sb2FkLW1wMy1zb25ncy5qcGcnIHdpZHRoPScxMDAnIGhlaWdodD0nOTknIGNsYXNzPSJib3JkZXJpbWFnZSIgb25Nb3VzZW92ZXI9ImJvcmRlcml0KHRoaXMsJ2JsYWNrJykiIG9uTW91c2VvdXQ9ImJvcmRlcml0KHRoaXMsJ2JsYWNrJykiIGFsaWduPSdsZWZ0JyBoc3BhY2U9JzUnIHZzcGFjZT0nMyc+PC9hPgo8Yj48YSBjbGFzcz10ZXh0IGhyZWY9J2luZGV4LnBocD9hY3Rpb249YWxidW0maWQ9OTUwOCc+SW5kaWFuIE1vdmllcyBIaW5kaSBNcDMgU29uZ3MgLSBELURheSAoMjAxMyk8L2E+PC9iPiA8YnI+PGJyPjxicj5Eb3dubG9hZDogPGZvbnQgc2l6ZT0nMic+PGEgaHJlZj0iaHR0cDovL2luZGlhbXAzZG93bmxvYWQuY29tL2luZGlhbl9tb3ZpZXMvMjAxMy9ELURheV8oMjAxMylfSW5kaWFNcDMuQ29tLnppcCI+RG93bmxvYWQgRnVsbCBBbGJ1bTwvYT48L2ZvbnQ+PGJyPiA8YnI+IDwvdGQ+PC90cj48L3RhYmxlPjxociBzaXplPScxJyB3aWR0aD0nMTAwJScgY29sb3I9JyNmZmZmZmYnPjx0YWJsZSBjbGFzcz0nbW9kdWxldGFibGUnPjx0cj48dGQ+PGEgY2xhc3M9dGV4dCBocmVmPSdpbmRleC5waHA/YWN0aW9uPWFsYnVtJmlkPTk1MDcnPjxpbWcgc3JjPSdhdWRpby9JbmRpYW4gTW92aWVzL0luZGlhbiBNb3ZpZXMgSGluZGkgTXAzIFNvbmdzL1NpeHRlZW4gKDIwMTMpL1NpeHRlZW4tMjAxMy1kb3dubG9hZC1tcDMtc29uZ3MuanBnJyB3aWR0aD0nMTAwJyBoZWlnaHQ9Jzk5JyBjbGFzcz0iYm9yZGVyaW1hZ2UiIG9uTW91c2VvdmVyPSJib3JkZXJpdCh0aGlzLCdibGFjaycpIiBvbk1vdXNlb3V0PSJib3JkZXJpdCh0aGlzLCdibGFjaycpIiBhbGlnbj0nbGVmdCcgaHNwYWNlPSc1JyB2c3BhY2U9JzMnPjwvYT4KPGI+PGEgY2xhc3M9dGV4dCBocmVmPSdpbmRleC5waHA/YWN0aW9uPWFsYnVtJmlkPTk1MDcnPkluZGlhbiBNb3ZpZXMgSGluZGkgTXAzIFNvbmdzIC0gU2l4dGVlbiAoMjAxMyk8L2E+PC9iPiA8YnI+PGJyPjxicj5Eb3dubG9hZDogPGZvbnQgc2l6ZT0nMic+PGEgaHJlZj0iaHR0cDovL2luZGlhbXAzZG93bmxvYWQuY29tL2luZGlhbl9tb3ZpZXMvMjAxMy9TaXh0ZWVuXygyMDEzKV9JbmRpYU1wMy5Db20uemlwIj5Eb3dubG9hZCBGdWxsIEFsYnVtPC9hPjwvZm9udD48YnI+IDxicj4gPC90ZD48L3RyPjwvdGFibGU+PGhyIHNpemU9JzEnIHdpZHRoPScxMDAlJyBjb2xvcj0nI2ZmZmZmZic+PHRhYmxlIGNsYXNzPSdtb2R1bGV0YWJsZSc+PHRyPjx0ZD48YSBjbGFzcz10ZXh0IGhyZWY9J2luZGV4LnBocD9hY3Rpb249YWxidW0maWQ9OTUwMyc+PGltZyBzcmM9J2F1ZGlvL0luZGlhbiBNb3ZpZXMvSW5kaWFuIE1vdmllcyBIaW5kaSBNcDMgU29uZ3MvSXNzYXEgKDIwMTMpL0lzc2FxLSgyMDEzKS1kb3dubG9hZC1tcDMtc29uZ3MuanBnJyB3aWR0aD0nMTAwJyBoZWlnaHQ9Jzk5JyBjbGFzcz0iYm9yZGVyaW1hZ2UiIG9uTW91c2VvdmVyPSJib3JkZXJpdCh0aGlzLCdibGFjaycpIiBvbk1vdXNlb3V0PSJib3JkZXJpdCh0aGlzLCdibGFjaycpIiBhbGlnbj0nbGVmdCcgaHNwYWNlPSc1JyB2c3BhY2U9JzMnPjwvYT4KPGI+PGEgY2xhc3M9dGV4dCBocmVmPSdpbmRleC5waHA/YWN0aW9uPWFsYnVtJmlkPTk1MDMnPkluZGlhbiBNb3ZpZXMgSGluZGkgTXAzIFNvbmdzIC0gSXNzYXEgKDIwMTMpPC9hPjwvYj4gPGJyPjxicj48YnI+RG93bmxvYWQ6IDxmb250IHNpemU9JzInPjxhIGhyZWY9Imh0dHA6Ly9pbmRpYW1wM2Rvd25sb2FkLmNvbS9pbmRpYW5fbW92aWVzLzIwMTMvSXNzYXFfKDIwMTMpX0luZGlhTXAzLkNvbS56aXAiPkRvd25sb2FkIEZ1bGwgQWxidW08L2E+PC9mb250Pjxicj4gPGJyPiA8L3RkPjwvdHI+PC90YWJsZT48aHIgc2l6ZT0nMScgd2lkdGg9JzEwMCUnIGNvbG9yPScjZmZmZmZmJz48dGFibGUgY2xhc3M9J21vZHVsZXRhYmxlJz48dHI+PHRkPjxhIGNsYXNzPXRleHQgaHJlZj0naW5kZXgucGhwP2FjdGlvbj1hbGJ1bSZpZD05NTA2Jz48aW1nIHNyYz0nYXVkaW8vSW5kaWFuIE1vdmllcy9JbmRpYW4gTW92aWVzIEhpbmRpIE1wMyBTb25ncy9FbmVtbXkgKDIwMTMpL0VuZW1teS0yMDEzLWRvd25sb2FkLW1wMy1zb25ncy5qcGcnIHdpZHRoPScxMDAnIGhlaWdodD0nOTknIGNsYXNzPSJib3JkZXJpbWFnZSIgb25Nb3VzZW92ZXI9ImJvcmRlcml0KHRoaXMsJ2JsYWNrJykiIG9uTW91c2VvdXQ9ImJvcmRlcml0KHRoaXMsJ2JsYWNrJykiIGFsaWduPSdsZWZ0JyBoc3BhY2U9JzUnIHZzcGFjZT0nMyc+PC9hPgo8Yj48YSBjbGFzcz10ZXh0IGhyZWY9J2luZGV4LnBocD9hY3Rpb249YWxidW0maWQ9OTUwNic+SW5kaWFuIE1vdmllcyBIaW5kaSBNcDMgU29uZ3MgLSBFbmVtbXkgKDIwMTMpPC9hPjwvYj4gPGJyPjxicj48YnI+RG93bmxvYWQ6IDxmb250IHNpemU9JzInPjxhIGhyZWY9Imh0dHA6Ly9pbmRpYW1wM2Rvd25sb2FkLmNvbS9pbmRpYW5fbW92aWVzLzIwMTMvRW5lbW15XygyMDEzKV9JbmRpYU1wMy5Db20uemlwIj5Eb3dubG9hZCBGdWxsIEFsYnVtPC9hPjwvZm9udD48YnI+IDxicj4gPC90ZD48L3RyPjwvdGFibGU+PGhyIHNpemU9JzEnIHdpZHRoPScxMDAlJyBjb2xvcj0nI2ZmZmZmZic+PHRhYmxlIGNsYXNzPSdtb2R1bGV0YWJsZSc+PHRyPjx0ZD48YSBjbGFzcz10ZXh0IGhyZWY9J2luZGV4LnBocD9hY3Rpb249YWxidW0maWQ9OTUwNCc+PGltZyBzcmM9J2F1ZGlvL0luZGlhbiBNb3ZpZXMvSW5kaWFuIE1vdmllcyBIaW5kaSBNcDMgU29uZ3MvUG9saWNlZ2lyaSAoMjAxMykvUG9saWNlZ2lyaS0oMjAxMyktZG93bmxvYWQtbXAzLXNvbmdzLmpwZycgd2lkdGg9JzEwMCcgaGVpZ2h0PSc5OScgY2xhc3M9ImJvcmRlcmltYWdlIiBvbk1vdXNlb3Zlcj0iYm9yZGVyaXQodGhpcywnYmxhY2snKSIgb25Nb3VzZW91dD0iYm9yZGVyaXQodGhpcywnYmxhY2snKSIgYWxpZ249J2xlZnQnIGhzcGFjZT0nNScgdnNwYWNlPSczJz48L2E+CjxiPjxhIGNsYXNzPXRleHQgaHJlZj0naW5kZXgucGhwP2FjdGlvbj1hbGJ1bSZpZD05NTA0Jz5JbmRpYW4gTW92aWVzIEhpbmRpIE1wMyBTb25ncyAtIFBvbGljZWdpcmkgKDIwMTMpPC9hPjwvYj4gPGJyPjxicj48YnI+RG93bmxvYWQ6IDxmb250IHNpemU9JzInPjxhIGhyZWY9Imh0dHA6Ly9pbmRpYW1wM2Rvd25sb2FkLmNvbS9pbmRpYW5fbW92aWVzLzIwMTMvUG9saWNlZ2lyaV8oMjAxMylfSW5kaWFNcDMuQ29tLnppcCI+RG93bmxvYWQgRnVsbCBBbGJ1bTwvYT48L2ZvbnQ+PGJyPiA8YnI+IDwvdGQ+PC90cj48L3RhYmxlPjxociBzaXplPScxJyB3aWR0aD0nMTAwJScgY29sb3I9JyNmZmZmZmYnPjwvdGQ+PC90cj48L3RhYmxlPjwvdGQ+PC90cj48L3RhYmxlPiAKPC90ZD4KCQkJCTx0ZCB2YWxpZ249dG9wIHdpZHRoPTYwJSBhbGlnbj1jZW50ZXI+CgoJCQkJCgkJCQk8L3RkPgoJCQk8L3RhYmxlPgo8ZGl2IGFsaWduPSJjZW50ZXIiPgo8dGFibGUgd2lkdGg9Ijc1MCIgYm9yZGVyPSIwIiBjZWxsc3BhY2luZz0iMCIgY2VsbHBhZGRpbmc9IjAiPgogIDx0cj4KICAgICAgICA8dGQ+PGRpdiBhbGlnbj0iY2VudGVyIj48c2NyaXB0IHNyYz0iaHR0cDovL2Fkc2VydmVyLmFkcmVhY3Rvci5jb20vanMvbGliY29kZTFfbm9hamF4LmpzIiB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPjwvc2NyaXB0Pgo8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CmlmIChkb2N1bWVudC5hdnBfcmVhZHkpIHsgYXZwX3pvbmUoeyBiYXNlOiAnYWRzZXJ2ZXIuYWRyZWFjdG9yLmNvbScsIHR5cGU6ICdiYW5uZXInLCB6aWQ6IDYsIHBpZDogNDQxIH0pOyB9Cjwvc2NyaXB0PjwvZGl2PjwvdGQ+CiAgICA8dGQ+PGRpdiBhbGlnbj0iY2VudGVyIj48c2NyaXB0IHNyYz0iaHR0cDovL2Fkcy1ieS5tYWRhZHNtZWRpYS5jb20vdGFncy82OTAvNTM4L2FzeW5jLzMwMHgyNTAuanMiIHR5cGU9InRleHQvamF2YXNjcmlwdCI+PC9zY3JpcHQ+PC9kaXY+PC90ZD48L3RkPgogIDwvdHI+CjwvdGFibGU+CjwvZGl2PgoKCjx0YWJsZSBiZ2NvbG9yPSIjRkZGRkZGIiBjZWxscGFkZGluZz0yIGNlbGxzcGFjaW5nPTIgd2lkdGg9MTAwJSBjbGFzcz1ib3JkZXI+Cgk8dHI+PHRkIGFsaWduPWNlbnRlciBjbGFzcz10aXRsZV9jbGFzc19jPlJhbmRvbSBBbGJ1bXM8L3RkPjwvdHI+Cgk8dHI+PHRkPiAKPGRpdiBhbGlnbj0iY2VudGVyIj4KCSA8ZGl2IGlkPSduZXdhcnRmcmFtZSc+PGRpdiBpZD0nbmV3YXJ0ZnInPjxhIGhyZWY9J2luZGV4LnBocD9hY3Rpb249YWxidW0maWQ9MzA1NSc+PGltZyBzcmM9Jy4vY292ZXJzL25vdGF2YWlsYWJsZS5naWYnIHdpZHRoPSc4NicgaGVpZ2h0PSc4NicgYm9yZGVyPScwJy8+PC9hPjwvYnI+PC9icj48c3BhbiBjbGFzcz0nZm9udF9mb290ZXJfYXJ0aXN0Jz48Yj48YSBocmVmPSdpbmRleC5waHA/YWN0aW9uPWFsYnVtJmlkPTMwNTUnPk5vIFNtb2tpbmcgKDIwMDcpPC9hPjwvYj48YnI+PC9mb250PjxiciAvPjwvZGl2PjwvZGl2PiAgPGRpdiBpZD0nbmV3YXJ0ZnJhbWUnPjxkaXYgaWQ9J25ld2FydGZyJz48YSBocmVmPSdpbmRleC5waHA/YWN0aW9uPWFsYnVtJmlkPTYwOSc+PGltZyBzcmM9Jy4vY292ZXJzL25vdGF2YWlsYWJsZS5naWYnIHdpZHRoPSc4NicgaGVpZ2h0PSc4NicgYm9yZGVyPScwJy8+PC9hPjwvYnI+PC9icj48c3BhbiBjbGFzcz0nZm9udF9mb290ZXJfYXJ0aXN0Jz48Yj48YSBocmVmPSdpbmRleC5waHA/YWN0aW9uPWFsYnVtJmlkPTYwOSc+QmhlZWdpIFJhYXQgKDE5NjUpPC9hPjwvYj48YnI+PC9mb250PjxiciAvPjwvZGl2PjwvZGl2PiAgPGRpdiBpZD0nbmV3YXJ0ZnJhbWUnPjxkaXYgaWQ9J25ld2FydGZyJz48YSBocmVmPSdpbmRleC5waHA/YWN0aW9uPWFsYnVtJmlkPTUxMjcnPjxpbWcgc3JjPScuL2NvdmVycy9ub3RhdmFpbGFibGUuZ2lmJyB3aWR0aD0nODYnIGhlaWdodD0nODYnIGJvcmRlcj0nMCcvPjwvYT48L2JyPjwvYnI+PHNwYW4gY2xhc3M9J2ZvbnRfZm9vdGVyX2FydGlzdCc+PGI+PGEgaHJlZj0naW5kZXgucGhwP2FjdGlvbj1hbGJ1bSZpZD01MTI3Jz5TdWhhYWcgUmFhdCAoMTk2OCk8L2E+PC9iPjxicj48L2ZvbnQ+PGJyIC8+PC9kaXY+PC9kaXY+ICA8ZGl2IGlkPSduZXdhcnRmcmFtZSc+PGRpdiBpZD0nbmV3YXJ0ZnInPjxhIGhyZWY9J2luZGV4LnBocD9hY3Rpb249YWxidW0maWQ9NTA0Mic+PGltZyBzcmM9Jy4vY292ZXJzL25vdGF2YWlsYWJsZS5naWYnIHdpZHRoPSc4NicgaGVpZ2h0PSc4NicgYm9yZGVyPScwJy8+PC9hPjwvYnI+PC9icj48c3BhbiBjbGFzcz0nZm9udF9mb290ZXJfYXJ0aXN0Jz48Yj48YSBocmVmPSdpbmRleC5waHA/YWN0aW9uPWFsYnVtJmlkPTUwNDInPlNoZXJhIFNoYW1zaGVyYSAoMTk4OSk8L2E+PC9iPjxicj48L2ZvbnQ+PGJyIC8+PC9kaXY+PC9kaXY+ICA8ZGl2IGlkPSduZXdhcnRmcmFtZSc+PGRpdiBpZD0nbmV3YXJ0ZnInPjxhIGhyZWY9J2luZGV4LnBocD9hY3Rpb249YWxidW0maWQ9ODc2MCc+PGltZyBzcmM9Jy4vY292ZXJzL25vdGF2YWlsYWJsZS5naWYnIHdpZHRoPSc4NicgaGVpZ2h0PSc4NicgYm9yZGVyPScwJy8+PC9hPjwvYnI+PC9icj48c3BhbiBjbGFzcz0nZm9udF9mb290ZXJfYXJ0aXN0Jz48Yj48YSBocmVmPSdpbmRleC5waHA/YWN0aW9uPWFsYnVtJmlkPTg3NjAnPkZhd2FkIFJhbWl6IChUdXJhIEtob3dhaGFtICggTGl2ZSBTb25ncyApKTwvYT48L2I+PGJyPjwvZm9udD48YnIgLz48L2Rpdj48L2Rpdj4gIDxkaXYgaWQ9J25ld2FydGZyYW1lJz48ZGl2IGlkPSduZXdhcnRmcic+PGEgaHJlZj0naW5kZXgucGhwP2FjdGlvbj1hbGJ1bSZpZD00NzcnPjxpbWcgc3JjPScuL2NvdmVycy9ub3RhdmFpbGFibGUuZ2lmJyB3aWR0aD0nODYnIGhlaWdodD0nODYnIGJvcmRlcj0nMCcvPjwvYT48L2JyPjwvYnI+PHNwYW4gY2xhc3M9J2ZvbnRfZm9vdGVyX2FydGlzdCc+PGI+PGEgaHJlZj0naW5kZXgucGhwP2FjdGlvbj1hbGJ1bSZpZD00NzcnPkFhcCBLaSBZYWFkZW48L2E+PC9iPjxicj48L2ZvbnQ+PGJyIC8+PC9kaXY+PC9kaXY+ICAKICA8L2Rpdj4gICAgICAgCSAKCSA8L3RkPjwvdHI+CjwvdGFibGU+CgoJCTwvdGQ+Cgk8L3RyPgoJPHRyPjx0ZCB3aWR0aD0iOTglIj4KCgkKPC90ZD48L3RyPgoJPHRyPgoJCTx0ZCB3aWR0aD0iMTAwJSI+Cgo8dGFibGUgd2lkdGg9IjEwMCUiIGJvcmRlcj0iMCIgY2VsbFBhZGRpbmc9IjUiIGNlbGxTcGFjaW5nPSIxIiBiZ0NvbG9yPSIjRkZGRkZGIiBpZD0idGFibGUyMDUiPgoJCQkJCQkJCQk8dHI+CgoJCQkJCQkJCQkJPHRkIGFsaWduPSJtaWRkbGUiIGJnQ29sb3I9IiNGRkZGRkYiIGNsYXNzID0icXVvdGVmb290ZXIiIHN0eWxlPSJmb250LXNpemU6IDhwdDsgZm9udC1mYW1pbHk6IFZlcmRhbmE7IHRleHQtZGVjb3JhdGlvbjogbm9uZTsgY29sb3I6ICMwMDAwMDAiIHdpZHRoPSI5MyUiPgoJCQkJCQkJCQkKPHAgY2xhc3M9InN0eWxlMyI+PHNwYW4gY2xhc3M9InN0eWxlNiI+cG9wdWxhciB0YWdzOiA8Yj4gPGEgaHJlZj0iaHR0cDovL3d3dy5pbmRpYW1wMy5jb20vbXVzaWMvaW5kZXgucGhwP2FjdGlvbj1hbGJ1bSZpZD05MjI2Ij4gcGxheWVycyBtb3ZpZSBzb25nczwvYT4sPC9iPiA8Yj4gPGEgaHJlZj0iaHR0cDovL3d3dy5pbmRpYW1wMy5jb20vbXVzaWMvZ2VucmVfYWxidW1zLnBocD9pZD05JmFydGlzdD05Ij4gcmFoYXQgZmF0ZWggYWxpIGtoYW4gc29uZ3M8L2E+LCBkb3dubG9hZCBmcmVlIG11c2ljLCBoaW5kaSBtcDMgbXVzaWMsIDxhIGhyZWY9Imh0dHA6Ly93d3cuaW5kaWFtcDMuY29tL211c2ljL2luZGV4LnBocD9hY3Rpb249YWxidW0maWQ9MTA4MiI+ZG93bmxvYWQgZGVzaSBib3l6IHNvbmdzPC9hPiwmbmJzcDs8YSBocmVmPSJodHRwOi8vd3d3LmluZGlhbXAzLmNvbS9tdXNpYy9pbmRleC5waHA/YWN0aW9uPWFsYnVtJmlkPTkyMjEiPmRvbiAyIG1wMyBzb25nczwvYT4sIGluZGlhbiBtcDMgcmlwcywgPGEgaHJlZj0iaHR0cDovL3d3dy5pbmRpYW1wMy5jb20vbXVzaWMvaW5kZXgucGhwP2FjdGlvbj1hbGJ1bSZpZD05MjIxIj5kb24gMiAzMjBrYnBzIG1wMyBzb25nczwvYT4sIGRvd25sb2FkIGNkIHJpcCwgMzIwIGticHMgbXAzIGRvd25sb2FkLCA8YSBocmVmPSJodHRwOi8vd3d3LmluZGlhbXAzLmNvbS9tdXNpYy9pbmRleC5waHA/YWN0aW9uPWFsYnVtJmlkPTkyMjIiPiBsYWRpZXMgVi9TIHJpY2t5IGJhaGwgbXAzIG11c2ljPC9hPiwgZnJlZSBmbGFjIG11c2ljLCBtcDMgbXVzaWMgb2YgYWF6YWFuLCA8YSBocmVmPSJodHRwOi8vd3d3LmluZGlhbXAzLmNvbS9tdXNpYy9pbmRleC5waHA/YWN0aW9uPWFsYnVtJmlkPTI4MjAiPmhpbmRpIHNvbmdzIGRvd25sb2FkIG9mIHJvY2tzdGFyPC9hPiwgPGEgaHJlZj0iaHR0cDovL3d3dy5pbmRpYW1wMy5jb20vbXVzaWMvZ2VucmVfYWxidW1zLnBocD9pZD0zJmFydGlzdD0zIj5kb3dubG9hZCBsYXRlc3QgYm9sbHl3b29kIHNvbmdzPC9hPiwgPGEgaHJlZj0iaHR0cDovL3d3dy5pbmRpYW1wMy5jb20vbXVzaWMvaW5kZXgucGhwP2FjdGlvbj1hbGJ1bSZpZD0xOTQ4Ij5saXN0ZW4gPC9hPjxhIGhyZWY9Imh0dHA6Ly93d3cuaW5kaWFtcDMuY29tL211c2ljL2luZGV4LnBocD9hY3Rpb249YWxidW0maWQ9MjgyMCI+ZnJlZSBzYWRhIGhhcSBlaXRoZXkgcmFraCBtcDMgc29uZ3M8L2E+LCBsYXRlc3QgaW5kaWFuIHNvbmdzLCBib2xseXdvb2QgbXVzaWMgZG93bmxvYWQsIDxhIHRhcmdldD0iX2JsYW5rIiBocmVmPSJodHRwOi8vd3d3LmluZGlhbXAzLmNvbS9tdXNpYy9pbmRleC5waHA/YWN0aW9uPWFsYnVtJmlkPTkyNDEiPiBUZXJlIE5hYWwgTG92ZSBIbyBHaXlhIDIwMTIgbXAzIHNvbmdzPC9hPiwgPGEgaHJlZj0iaHR0cDovL3d3dy5pbmRpYW1wMy5jb20vbXVzaWMvaW5kZXgucGhwP2FjdGlvbj1hbGJ1bSZpZD05MjA4Ij5ib2wgbXAzIHNvbmdzPC9hPiwgPGEgIGhyZWY9Imh0dHA6Ly9pbmRpYW1wMy5jb20vbXVzaWMvaW5kZXgucGhwP2FjdGlvbj1hbGJ1bSZpZD05MjMwIj5kb3dubG9hZCBhZ25lZXBhdGggMjAxMSBtcDMgc29uZ3M8L2E+LCZuYnNwOyBwYWtpc3RhbmkgbXVzaWMsIDxhIGhyZWY9Imh0dHA6Ly93d3cuaW5kaWFtcDMuY29tL211c2ljL2luZGV4LnBocD9hY3Rpb249YWxidW0maWQ9OTI0MCI+IEdhbGkgR2FsaSBDaG9yIEhhaSAoMjAxMikgbXAzIG11c2ljIGRvd25sb2FkPC9hPiwgPGEgaHJlZj0iaHR0cDovL3d3dy5pbmRpYW1wMy5jb20vbXVzaWMvaW5kZXgucGhwP2FjdGlvbj1hbGJ1bSZpZD0yODIwIj5kb3dubG9hZCByb2Nrc3RhciBzb25nczwvYT4sIDxhIGhyZWY9Imh0dHA6Ly93d3cuaW5kaWFtcDMuY29tL211c2ljL2luZGV4LnBocD9hY3Rpb249YWxidW0maWQ9OTIyMiI+IGxhZGllcyB2cyByaWNreSBiYWhsIE1wMyBTb25nczwvYT4sIDxhIGhyZWY9Imh0dHA6Ly93d3cuaW5kaWFtcDMuY29tL211c2ljL2luZGV4LnBocD9hY3Rpb249YWxidW0maWQ9OTIyMiI+RG93bmxvYWQgbGFkaWVzIHZzIHJpY2t5IGJhaGwgc29uZ3M8L2E+LCA8YSBocmVmPSJodHRwOi8vd3d3LmluZGlhbXAzLmNvbS9tdXNpYy9pbmRleC5waHA/YWN0aW9uPWFsYnVtJmlkPTI4MjAiPiByb2Nrc3RhciBtcDMgc29uZ3MgZG93bmxvYWQ8L2E+LCA8YSBocmVmPSJodHRwOi8vd3d3LmluZGlhbXAzLmNvbS9tdXNpYy9pbmRleC5waHA/YWN0aW9uPWFsYnVtJmlkPTkyMjYiPmRvd25sb2FkIHBsYXllcnMgbXAzIHNvbmdzPC9hPiwgZG93bmxvYWQgbXAzIHRvcnJlbnRzPC9iPjwvc3Bhbj48L3A+CgkJCQkJCQkJCSAgICA8cD4mbmJzcDs8L3A+PC90ZD4KCiAgPC90cj4KPC90YWJsZT4KCgoJPHRhYmxlIGNsYXNzPWZvb3Rlcl9iZyB3aWR0aD0iMTAwJSIgY2VsbHBhZGRpbmc9NCBjZWxsc3BhY2luZz0wPgoKPGRpdiBhbGlnbj0iY2VudGVyIj4KPHNjcmlwdCBzcmM9Imh0dHA6Ly9hZHNlcnZlci5hZHJlYWN0b3IuY29tL2pzL2xpYmNvZGUxX25vYWpheC5qcyIgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij48L3NjcmlwdD4KPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgppZiAoZG9jdW1lbnQuYXZwX3JlYWR5KSB7IGF2cF96b25lKHsgYmFzZTogJ2Fkc2VydmVyLmFkcmVhY3Rvci5jb20nLCB0eXBlOiAnYmFubmVyJywgemlkOiA5LCBwaWQ6IDQ0MSB9KTsgfQo8L3NjcmlwdD4KPC9kaXY+Cgo8YnI+CQkJCTx0cj48dGQgYWxpZ249ImNlbnRlciI+PGEgaHJlZj0iaHR0cDovL3d3dy5pbmRpYW1wMy5jb20iIHRhcmdldD0iX2JsYW5rIj5JbmRpYU1wMy5jb208L2E+IEFsbCByaWdodHMgcmVzZXJ2ZWQ8YnI+CkJ5IHVzaW5nIHRoaXMgd2Vic2l0ZSB5b3UgbXVzdCBhZ3JlZSB3aXRoIG91ciBbIDxhIGhyZWY9Imh0dHA6Ly9pbmRpYW1wMy5jb20vbXVzaWMvdGVybXMuaHRtIj5UZXJtcyBvZiBVc2U8L2E+IF0gLSA8YSBocmVmPSJodHRwOi8vaW5kaWFtcDMuY29tL3ByaXZhY3lfcG9saWN5Lmh0bSI+UHJpdmFjeSBQb2xpY3k8L2E+PC90ZD48L3RyPgoJCQk8L3RhYmxlPgkKCgkJPC90ZD4KCTwvdHI+CjwvdGFibGU+CjwvZGl2PjwvZGl2Pgo8L2h0bWw+ICAKIAo=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgoKIDxoZWFkPgoKICA8dGl0bGU+Q1NTIFRlc3Q6IDphZnRlciBnZW5lcmF0ZWQgY29udGVudCAtIGRpc3BsYXkgdGFibGUtY29sdW1uLWdyb3VwPC90aXRsZT4KCiAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJHw6lyYXJkIFRhbGJvdCIgaHJlZj0iaHR0cDovL3d3dy5ndGFsYm90Lm9yZy9Ccm93c2VyQnVnc1NlY3Rpb24vY3NzMjF0ZXN0c3VpdGUvIj4KICA8bGluayByZWw9ImhlbHAiIGhyZWY9Imh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL2dlbmVyYXRlLmh0bWwjYmVmb3JlLWFmdGVyLWNvbnRlbnQiPgogIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjdGFibGUtZGlzcGxheSI+CiAgPG1ldGEgY29udGVudD0iIiBuYW1lPSJmbGFncyI+CiAgPG1ldGEgY29udGVudD0iR2VuZXJhdGVkIGNvbnRlbnQgY2FuIGhhdmUgdGhlaXIgb3duIGRpc3BsYXkgdmFsdWUgZXhwbGljaXRseSBzZXQgaW4gd2hpY2ggY2FzZSB0aGV5IGJlaGF2ZSBhcyBpZiB0aGV5IHdlcmUgcmVhbCBlbGVtZW50cyBpbnNlcnRlZCBqdXN0IGluc2lkZSB0aGVpciBhc3NvY2lhdGVkIGVsZW1lbnQuIEVsZW1lbnRzIHdpdGggJ2Rpc3BsYXknIHNldCB0byAndGFibGUtY29sdW1uJyBvciAndGFibGUtY29sdW1uLWdyb3VwJyBhcmUgbm90IHJlbmRlcmVkIChleGFjdGx5IGFzIGlmIHRoZXkgaGFkICdkaXNwbGF5OiBub25lJykuIiBuYW1lPSJhc3NlcnQiPgoKICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgogIGRpdjphZnRlcgogIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiByZWQ7CiAgY29sb3I6IHllbGxvdzsKICBjb250ZW50OiAiLlwwRCBGQUlMIjsKICBkaXNwbGF5OiB0YWJsZS1jb2x1bW4tZ3JvdXA7CiAgZm9udC1zaXplOiAyZW07CiAgfQogIDwvc3R5bGU+CgogPC9oZWFkPgoKIDxib2R5PgoKICA8cD5UZXN0IHBhc3NlcyBpZiB0aGVyZSBpcyA8c3Ryb25nPm9uZSAiRmlsbGVyIHRleHQiPC9zdHJvbmc+IGFuZCBubyByZWQuPC9wPgoKICA8ZGl2PkZpbGxlciB0ZXh0PC9kaXY+CgogPC9ib2R5Pgo8L2h0bWw+",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgoKIDxoZWFkPgoKICA8dGl0bGU+Q1NTIFRlc3Q6IDphZnRlciBnZW5lcmF0ZWQgY29udGVudCAtIGRpc3BsYXkgdGFibGUtY29sdW1uPC90aXRsZT4KCiAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJHw6lyYXJkIFRhbGJvdCIgaHJlZj0iaHR0cDovL3d3dy5ndGFsYm90Lm9yZy9Ccm93c2VyQnVnc1NlY3Rpb24vY3NzMjF0ZXN0c3VpdGUvIj4KICA8bGluayByZWw9ImhlbHAiIGhyZWY9Imh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL2dlbmVyYXRlLmh0bWwjYmVmb3JlLWFmdGVyLWNvbnRlbnQiPgogIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjdGFibGUtZGlzcGxheSI+CiAgPG1ldGEgY29udGVudD0iIiBuYW1lPSJmbGFncyI+CiAgPG1ldGEgY29udGVudD0iR2VuZXJhdGVkIGNvbnRlbnQgY2FuIGhhdmUgdGhlaXIgb3duIGRpc3BsYXkgdmFsdWUgZXhwbGljaXRseSBzZXQgaW4gd2hpY2ggY2FzZSB0aGV5IGJlaGF2ZSBhcyBpZiB0aGV5IHdlcmUgcmVhbCBlbGVtZW50cyBpbnNlcnRlZCBqdXN0IGluc2lkZSB0aGVpciBhc3NvY2lhdGVkIGVsZW1lbnQuIEVsZW1lbnRzIHdpdGggJ2Rpc3BsYXknIHNldCB0byAndGFibGUtY29sdW1uJyBvciAndGFibGUtY29sdW1uLWdyb3VwJyBhcmUgbm90IHJlbmRlcmVkIChleGFjdGx5IGFzIGlmIHRoZXkgaGFkICdkaXNwbGF5OiBub25lJykuIiBuYW1lPSJhc3NlcnQiPgoKICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgogIGRpdjphZnRlcgogIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiByZWQ7CiAgY29sb3I6IHllbGxvdzsKICBjb250ZW50OiAiLlwwRCBGQUlMIjsKICBkaXNwbGF5OiB0YWJsZS1jb2x1bW47CiAgZm9udC1zaXplOiAyZW07CiAgfQogIDwvc3R5bGU+CgogPC9oZWFkPgoKIDxib2R5PgoKICA8cD5UZXN0IHBhc3NlcyBpZiB0aGVyZSBpcyA8c3Ryb25nPm9uZSAiRmlsbGVyIHRleHQiPC9zdHJvbmc+IGFuZCBubyByZWQuPC9wPgoKICA8ZGl2PkZpbGxlciB0ZXh0PC9kaXY+CgogPC9ib2R5Pgo8L2h0bWw+",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgoKIDxoZWFkPgoKICA8dGl0bGU+Q1NTIFRlc3Q6IEJhY2tncm91bmQgLSBiYWNrZ3JvdW5kIG9uIHJvb3QgcHJvcGFnYXRlcyB0byBjYW52YXM8L3RpdGxlPgoKICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9IkfDqXJhcmQgVGFsYm90IiBocmVmPSJodHRwOi8vd3d3Lmd0YWxib3Qub3JnL0Jyb3dzZXJCdWdzU2VjdGlvbi9jc3MyMXRlc3RzdWl0ZS8iPgogIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvY29sb3JzLmh0bWwjYmFja2dyb3VuZCI+CiAgPGxpbmsgcmVsPSJoZWxwIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCN0YWJsZS1kaXNwbGF5Ij4KICA8bWV0YSBjb250ZW50PSIiIG5hbWU9ImZsYWdzIj4KICA8bWV0YSBjb250ZW50PSJCYWNrZ3JvdW5kIHNldCBvbiByb290IGVsZW1lbnQgc2hvdWxkIGNvdmVyIHRoZSBjYW52YXMiIG5hbWU9ImFzc2VydCI+CgogIDxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+CiAgaHRtbAogIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiBibHVlOwogIGRpc3BsYXk6IHRhYmxlOwogIHdpZHRoOiA1MDBweDsKICB9CgogIGJvZHkKICB7CiAgYmFja2dyb3VuZC1jb2xvcjogbGltZTsKICBtYXJnaW46IDEwMHB4OwogIH0KICA8L3N0eWxlPgoKIDwvaGVhZD4KCiA8Ym9keT4KCiAgPHA+VGhlIHdob2xlIGFyZWEgb2YgdGhpcyBwYWdlIHNob3VsZCBiZSBibHVlIGFuZCBvbmx5IHRoaXMgdGV4dCBzaG91bGQgYmUgaW4gYSBicmlnaHQgZ3JlZW4gYm94LjwvcD4KCiA8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBDU1MgdGFibGUgZGlzcGxheSB0eXBlczwvdGl0bGU+CiAgICAgICAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJNaWNyb3NvZnQiIGhyZWY9Imh0dHA6Ly93d3cubWljcm9zb2Z0LmNvbS8iPgogICAgICAgIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjdGFibGUtZGlzcGxheSI+CiAgICAgICAgPG1ldGEgbmFtZT0iZmxhZ3MiIGNvbnRlbnQ9IiI+CiAgICAgICAgPG1ldGEgbmFtZT0iYXNzZXJ0IiBjb250ZW50PSJDU1MgZGlzcGxheSB0YWJsZSB0eXBlcyBhcmUgc3VwcG9ydGVkLiI+CiAgICAgICAgPHN0eWxlIHR5cGU9InRleHQvY3NzIj4KICAgICAgICAgICAgLnRhYmxlCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGRpc3BsYXk6IHRhYmxlOwogICAgICAgICAgICAgICAgYm9yZGVyOiAxcHggc29saWQgZ3JheTsKICAgICAgICAgICAgfQogICAgICAgICAgICAuY2FwdGlvbgogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBkaXNwbGF5OiB0YWJsZS1jYXB0aW9uOwogICAgICAgICAgICAgICAgYmFja2dyb3VuZDogYmxhY2s7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgLmNvbGdyb3VwCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGRpc3BsYXk6IHRhYmxlLWNvbHVtbi1ncm91cDsKICAgICAgICAgICAgfQogICAgICAgICAgICAuY29sCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGRpc3BsYXk6IHRhYmxlLWNvbHVtbjsKICAgICAgICAgICAgfQogICAgICAgICAgICAudGhlYWQKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgZGlzcGxheTogdGFibGUtaGVhZGVyLWdyb3VwOwogICAgICAgICAgICB9CiAgICAgICAgICAgIC50Zm9vdAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBkaXNwbGF5OiB0YWJsZS1mb290ZXItZ3JvdXA7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgLnRib2R5CiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGRpc3BsYXk6IHRhYmxlLXJvdy1ncm91cDsKICAgICAgICAgICAgfQogICAgICAgICAgICAudHIKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgZGlzcGxheTogdGFibGUtcm93OwogICAgICAgICAgICB9CiAgICAgICAgICAgIC50ZAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiBibGFjazsKICAgICAgICAgICAgICAgIGJvcmRlcjogMXB4IHNvbGlkIGdyYXk7CiAgICAgICAgICAgICAgICBkaXNwbGF5OiB0YWJsZS1jZWxsOwogICAgICAgICAgICB9CiAgICAgICAgPC9zdHlsZT4KICAgIDwvaGVhZD4KICAgIDxib2R5PgogICAgICAgIDxwPlRlc3QgcGFzc2VzIGlmIHRoZXJlIGlzIGEgc29saWQgYmFyIG9uIHRvcCBvZiBhIHRocmVlLWJ5LXRocmVlIGdyaWQgb2YgYm94ZXMgYmVsb3cuPC9wPgogICAgICAgIDxkaXYgY2xhc3M9InRhYmxlIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2FwdGlvbiI+WDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2xncm91cCI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wiPjwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sIj48L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbGdyb3VwIj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbCI+PC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0aGVhZCI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ciI+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idGQiPlhYWFhYPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idGQiPlhYWFhYPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idGQiPlhYWFhYPC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InRmb290Ij4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRyIj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZCI+WFhYWFg8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZCI+WFhYWFg8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZCI+WFhYWFg8L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0idGJvZHkiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idHIiPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRkIj5YWFhYWDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRkIj5YWFhYWDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRkIj5YWFhYWDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgPC9ib2R5Pgo8L2h0bWw+",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBIVE1MIHRhYmxlIHdpdGggZXZlcnkgdGFibGUgZWxlbWVudDwvdGl0bGU+CiAgICAgICAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJNaWNyb3NvZnQiIGhyZWY9Imh0dHA6Ly93d3cubWljcm9zb2Z0LmNvbS8iPgogICAgICAgIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjdGFibGUtZGlzcGxheSI+CiAgICAgICAgPGxpbmsgcmVsPSJoZWxwIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9SRUMtaHRtbDQwL3N0cnVjdC90YWJsZXMuaHRtbCNoLTExLjIiPgogICAgICAgIDxtZXRhIG5hbWU9ImZsYWdzIiBjb250ZW50PSJIVE1Mb25seSI+CiAgICAgICAgPG1ldGEgbmFtZT0iYXNzZXJ0IiBjb250ZW50PSJIVE1MIHRhYmxlIGVsZW1lbnRzIGFyZSBzdXBwb3J0ZWQuIj4KICAgICAgICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgogICAgICAgICAgICBjYXB0aW9uLCB0ZCwgdGgKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYmFja2dyb3VuZDogYmxhY2s7CiAgICAgICAgICAgIH0KICAgICAgICA8L3N0eWxlPgogICAgPC9oZWFkPgogICAgPGJvZHk+CiAgICAgICAgPHA+VGVzdCBwYXNzZXMgaWYgdGhlcmUgaXMgYSBzb2xpZCBiYXIgb24gdG9wIG9mIGEgdGhyZWUtYnktdGhyZWUgZ3JpZCBvZiBib3hlcyBiZWxvdy48L3A+CiAgICAgICAgPHRhYmxlIGJvcmRlcj0iMSI+CiAgICAgICAgICAgIDxjYXB0aW9uPlg8L2NhcHRpb24+CiAgICAgICAgICAgIDxjb2xncm91cD4KICAgICAgICAgICAgICAgIDxjb2w+CiAgICAgICAgICAgICAgICA8Y29sPgogICAgICAgICAgICA8L2NvbGdyb3VwPgogICAgICAgICAgICA8Y29sZ3JvdXA+CiAgICAgICAgICAgICAgICA8Y29sPgogICAgICAgICAgICA8L2NvbGdyb3VwPgogICAgICAgICAgICA8dGhlYWQ+CiAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgICAgPHRoPlhYWFhYPC90aD4KICAgICAgICAgICAgICAgICAgICA8dGg+WFhYWFg8L3RoPgogICAgICAgICAgICAgICAgICAgIDx0aD5YWFhYWDwvdGg+CiAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICA8L3RoZWFkPgogICAgICAgICAgICA8dGZvb3Q+CiAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgICAgPHRkPlhYWFhYPC90ZD4KICAgICAgICAgICAgICAgICAgICA8dGQ+WFhYWFg8L3RkPgogICAgICAgICAgICAgICAgICAgIDx0ZD5YWFhYWDwvdGQ+CiAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICA8L3Rmb290PgogICAgICAgICAgICA8dGJvZHk+CiAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgICAgPHRkPlhYWFhYPC90ZD4KICAgICAgICAgICAgICAgICAgICA8dGQ+WFhYWFg8L3RkPgogICAgICAgICAgICAgICAgICAgIDx0ZD5YWFhYWDwvdGQ+CiAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICA8L3Rib2R5PgogICAgICAgIDwvdGFibGU+CiAgICA8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgoKIDxoZWFkPgoKICA8dGl0bGU+Q1NTIFRlc3Q6IDpiZWZvcmUgZ2VuZXJhdGVkIGNvbnRlbnQgLSBkaXNwbGF5IHRhYmxlLWNvbHVtbi1ncm91cDwvdGl0bGU+CgogIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iR8OpcmFyZCBUYWxib3QiIGhyZWY9Imh0dHA6Ly93d3cuZ3RhbGJvdC5vcmcvQnJvd3NlckJ1Z3NTZWN0aW9uL2NzczIxdGVzdHN1aXRlLyI+CiAgPGxpbmsgcmVsPSJoZWxwIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS9nZW5lcmF0ZS5odG1sI2JlZm9yZS1hZnRlci1jb250ZW50Ij4KICA8bGluayByZWw9ImhlbHAiIGhyZWY9Imh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL3RhYmxlcy5odG1sI3RhYmxlLWRpc3BsYXkiPgogIDxtZXRhIGNvbnRlbnQ9IiIgbmFtZT0iZmxhZ3MiPgogIDxtZXRhIGNvbnRlbnQ9IkdlbmVyYXRlZCBjb250ZW50IGNhbiBoYXZlIHRoZWlyIG93biBkaXNwbGF5IHZhbHVlIGV4cGxpY2l0bHkgc2V0IGluIHdoaWNoIGNhc2UgdGhleSBiZWhhdmUgYXMgaWYgdGhleSB3ZXJlIHJlYWwgZWxlbWVudHMgaW5zZXJ0ZWQganVzdCBpbnNpZGUgdGhlaXIgYXNzb2NpYXRlZCBlbGVtZW50LiBFbGVtZW50cyB3aXRoICdkaXNwbGF5JyBzZXQgdG8gJ3RhYmxlLWNvbHVtbicgb3IgJ3RhYmxlLWNvbHVtbi1ncm91cCcgYXJlIG5vdCByZW5kZXJlZCAoZXhhY3RseSBhcyBpZiB0aGV5IGhhZCAnZGlzcGxheTogbm9uZScpLiIgbmFtZT0iYXNzZXJ0Ij4KCiAgPHN0eWxlIHR5cGU9InRleHQvY3NzIj4KICBkaXY6YmVmb3JlCiAgewogIGJhY2tncm91bmQtY29sb3I6IHJlZDsKICBjb2xvcjogeWVsbG93OwogIGNvbnRlbnQ6ICIuXDBEIEZBSUwiOwogIGRpc3BsYXk6IHRhYmxlLWNvbHVtbi1ncm91cDsKICBmb250LXNpemU6IDJlbTsKICB9CiAgPC9zdHlsZT4KCiA8L2hlYWQ+CgogPGJvZHk+CgogIDxwPlRlc3QgcGFzc2VzIGlmIHRoZXJlIGlzIDxzdHJvbmc+b25lICJGaWxsZXIgdGV4dCI8L3N0cm9uZz4gYW5kIG5vIHJlZC48L3A+CgogIDxkaXY+RmlsbGVyIHRleHQ8L2Rpdj4KCiA8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgoKIDxoZWFkPgoKICA8dGl0bGU+Q1NTIFRlc3Q6IDpiZWZvcmUgZ2VuZXJhdGVkIGNvbnRlbnQgLSBkaXNwbGF5IHRhYmxlLWNvbHVtbjwvdGl0bGU+CgogIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iR8OpcmFyZCBUYWxib3QiIGhyZWY9Imh0dHA6Ly93d3cuZ3RhbGJvdC5vcmcvQnJvd3NlckJ1Z3NTZWN0aW9uL2NzczIxdGVzdHN1aXRlLyI+CiAgPGxpbmsgcmVsPSJoZWxwIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS9nZW5lcmF0ZS5odG1sI2JlZm9yZS1hZnRlci1jb250ZW50Ij4KICA8bGluayByZWw9ImhlbHAiIGhyZWY9Imh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL3RhYmxlcy5odG1sI3RhYmxlLWRpc3BsYXkiPgogIDxtZXRhIGNvbnRlbnQ9IiIgbmFtZT0iZmxhZ3MiPgogIDxtZXRhIGNvbnRlbnQ9IkdlbmVyYXRlZCBjb250ZW50IGNhbiBoYXZlIHRoZWlyIG93biBkaXNwbGF5IHZhbHVlIGV4cGxpY2l0bHkgc2V0IGluIHdoaWNoIGNhc2UgdGhleSBiZWhhdmUgYXMgaWYgdGhleSB3ZXJlIHJlYWwgZWxlbWVudHMgaW5zZXJ0ZWQganVzdCBpbnNpZGUgdGhlaXIgYXNzb2NpYXRlZCBlbGVtZW50LiBFbGVtZW50cyB3aXRoICdkaXNwbGF5JyBzZXQgdG8gJ3RhYmxlLWNvbHVtbicgb3IgJ3RhYmxlLWNvbHVtbi1ncm91cCcgYXJlIG5vdCByZW5kZXJlZCAoZXhhY3RseSBhcyBpZiB0aGV5IGhhZCAnZGlzcGxheTogbm9uZScpLiIgbmFtZT0iYXNzZXJ0Ij4KCiAgPHN0eWxlIHR5cGU9InRleHQvY3NzIj4KICBkaXY6YmVmb3JlCiAgewogIGJhY2tncm91bmQtY29sb3I6IHJlZDsKICBjb2xvcjogeWVsbG93OwogIGNvbnRlbnQ6ICIuXDBEIEZBSUwiOwogIGRpc3BsYXk6IHRhYmxlLWNvbHVtbjsKICBmb250LXNpemU6IDJlbTsKICB9CiAgPC9zdHlsZT4KCiA8L2hlYWQ+CgogPGJvZHk+CgogIDxwPlRlc3QgcGFzc2VzIGlmIHRoZXJlIGlzIDxzdHJvbmc+b25lICJGaWxsZXIgdGV4dCI8L3N0cm9uZz4gYW5kIG5vIHJlZC48L3A+CgogIDxkaXY+RmlsbGVyIHRleHQ8L2Rpdj4KCiA8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogIDxoZWFkPgogICAgPHRpdGxlPkNTUyBUZXN0OiBkaXJlY3Rpb246IHJ0bCBvbiB0YWJsZTwvdGl0bGU+CiAgICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9IkVpcmEgTW9uc3RhZCwgT3BlcmEgU29mdHdhcmUgQVNBIiBocmVmPSJtYWlsdG86cHVibGljLXRlc3RzdWl0ZXNAb3BlcmEuY29tIj4KICAgIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjdGFibGUtbGF5b3V0Ij4KICAgIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdmlzdXJlbi5odG1sI2RpcmVjdGlvbiI+CiAgICA8bWV0YSBuYW1lPSJmbGFncyIgY29udGVudD0iIj4KICAgIDxtZXRhIG5hbWU9ImFzc2VydCIgY29udGVudD0iZGlyZWN0aW9uOnJ0bCBvbiB0YWJsZSBzaG91bGQgcmV2ZXJzZSBvcmRlciBvZiB0YWJsZSBjZWxscyI+CiAgICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgogICAgICB0YWJsZSB7Ym9yZGVyLXNwYWNpbmc6IDA7IG1hcmdpbi1ib3R0b206IDFlbTt9CiAgICAgIHRhYmxlLnRlc3Qge2RpcmVjdGlvbjpydGw7fQogICAgICB0ZC5hIHtiYWNrZ3JvdW5kLWNvbG9yOiBuYXZ5OyBjb2xvcjogbmF2eTt9CiAgICAgIHRkLmIge2JhY2tncm91bmQtY29sb3I6IG1hZ2VudGE7IGNvbG9yOiBtYWdlbnRhO30KICAgICAgdGQuYyB7YmFja2dyb3VuZC1jb2xvcjogY3lhbjsgY29sb3I6IGN5YW47fQogICAgPC9zdHlsZT4KICA8L2hlYWQ+CiAgPGJvZHk+CgogICAgPHA+WW91IHNob3VsZCBzZWUgdHdvIGlkZW50aWNhbCBjb2xvcmVkIGJhbmRzIGJlbG93OjwvcD4KCiAgICA8dGFibGUgY2xhc3M9InRlc3QiPgogICAgICA8dHI+Cgk8dGQgY2xhc3M9ImEiPnh4eHh4eDwvdGQ+Cgk8dGQgY2xhc3M9ImIiPnh4eHh4eDwvdGQ+Cgk8dGQgY2xhc3M9ImMiPnh4eHh4eDwvdGQ+CiAgICAgIDwvdHI+CiAgICA8L3RhYmxlPgoKICAgIDx0YWJsZT4KICAgICAgPHRyPgoJPHRkIGNsYXNzPSJjIj54eHh4eHg8L3RkPgoJPHRkIGNsYXNzPSJiIj54eHh4eHg8L3RkPgoJPHRkIGNsYXNzPSJhIj54eHh4eHg8L3RkPgogICAgICA8L3RyPgogICAgPC90YWJsZT4KICA8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXItY29sbGFwc2UgYW5kICdkaXNwbGF5OiB0YWJsZS1jb2x1bW4nIGVsZW1lbnRzPC90aXRsZT4KICAgICAgICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9Ik1pY3Jvc29mdCIgaHJlZj0iaHR0cDovL3d3dy5taWNyb3NvZnQuY29tLyI+CiAgICAgICAgPGxpbmsgcmVsPSJoZWxwIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCNwcm9wZGVmLWJvcmRlci1jb2xsYXBzZSI+CiAgICAgICAgPGxpbmsgcmVsPSJoZWxwIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCNib3JkZXJzIj4KICAgICAgICA8bWV0YSBuYW1lPSJmbGFncyIgY29udGVudD0iIj4KICAgICAgICA8bWV0YSBuYW1lPSJhc3NlcnQiIGNvbnRlbnQ9IkJvcmRlci1jb2xsYXBzZSBkb2VzIG5vdCBhcHBseSB0byAnZGlzcGxheTogdGFibGUtY29sdW1uJyBlbGVtZW50cy4iPgogICAgICAgIDxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+CiAgICAgICAgICAgICN0YWJsZQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBkaXNwbGF5OiB0YWJsZTsKICAgICAgICAgICAgfQogICAgICAgICAgICAjdGVzdAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOwogICAgICAgICAgICAgICAgZGlzcGxheTogdGFibGUtY29sdW1uOwogICAgICAgICAgICB9CiAgICAgICAgICAgIC50cgogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBkaXNwbGF5OiB0YWJsZS1yb3c7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI3RvcCwgI2JvdHRvbQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBkaXNwbGF5OiB0YWJsZS1jZWxsOwogICAgICAgICAgICAgICAgaGVpZ2h0OiAxMDBweDsKICAgICAgICAgICAgICAgIHdpZHRoOiAxMDBweDsKICAgICAgICAgICAgfQogICAgICAgICAgICAjdG9wCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1ib3R0b206IDEwcHggc29saWQgYmx1ZTsKICAgICAgICAgICAgfQogICAgICAgICAgICAjYm90dG9tCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci10b3A6IDEwcHggZG90dGVkIG9yYW5nZTsKICAgICAgICAgICAgfQogICAgICAgIDwvc3R5bGU+CiAgICA8L2hlYWQ+CiAgICA8Ym9keT4KICAgICAgICA8cD5UZXN0IHBhc3NlcyBpZiBiZWxvdyB0aGVyZSBpcyBhIGhvcml6b250YWwgc29saWQgYmx1ZSBsaW5lIGFib3ZlIGEgZG90dGVkIG9yYW5nZSBsaW5lLjwvcD4KICAgICAgICA8ZGl2IGlkPSJ0YWJsZSI+CiAgICAgICAgICAgIDxkaXYgaWQ9InRlc3QiPjwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ciI+CiAgICAgICAgICAgICAgICA8ZGl2IGlkPSJ0b3AiPjwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0idHIiPgogICAgICAgICAgICAgICAgPGRpdiBpZD0iYm90dG9tIj48L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICA8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXItY29sbGFwc2UgYW5kICdkaXNwbGF5OiB0YWJsZS1jZWxsJyBlbGVtZW50czwvdGl0bGU+CiAgICAgICAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJNaWNyb3NvZnQiIGhyZWY9Imh0dHA6Ly93d3cubWljcm9zb2Z0LmNvbS8iPgogICAgICAgIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjcHJvcGRlZi1ib3JkZXItY29sbGFwc2UiPgogICAgICAgIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjYm9yZGVycyI+CiAgICAgICAgPG1ldGEgbmFtZT0iZmxhZ3MiIGNvbnRlbnQ9IiI+CiAgICAgICAgPG1ldGEgbmFtZT0iYXNzZXJ0IiBjb250ZW50PSJCb3JkZXItY29sbGFwc2UgZG9lcyBub3QgYXBwbHkgdG8gJ2Rpc3BsYXk6IHRhYmxlLWNlbGwnIGVsZW1lbnRzLiI+CiAgICAgICAgPHN0eWxlIHR5cGU9InRleHQvY3NzIj4KICAgICAgICAgICAgI3RhYmxlCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGRpc3BsYXk6IHRhYmxlOwogICAgICAgICAgICB9CiAgICAgICAgICAgICN0cgogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBkaXNwbGF5OiB0YWJsZS1yb3c7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgLnRlc3QKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsKICAgICAgICAgICAgICAgIGRpc3BsYXk6IHRhYmxlLWNlbGw7CiAgICAgICAgICAgICAgICBoZWlnaHQ6IDEwMHB4OwogICAgICAgICAgICAgICAgd2lkdGg6IDEwMHB4OwogICAgICAgICAgICB9CiAgICAgICAgICAgICNsZWZ0CiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1yaWdodDogMTBweCBzb2xpZCBibHVlOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNyaWdodAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItbGVmdDogMTBweCBkb3R0ZWQgb3JhbmdlOwogICAgICAgICAgICB9CiAgICAgICAgPC9zdHlsZT4KICAgIDwvaGVhZD4KICAgIDxib2R5PgogICAgICAgIDxwPlRlc3QgcGFzc2VzIGlmIGJlbG93IHRoZXJlIGlzIGEgdmVydGljYWwgc29saWQgYmx1ZSBsaW5lLCBhbmQgdG8gaXRzIHJpZ2h0IHNpZGUsIGEgZG90dGVkIG9yYW5nZSBsaW5lLjwvcD4KICAgICAgICA8ZGl2IGlkPSJ0YWJsZSI+CiAgICAgICAgICAgIDxkaXYgaWQ9InRyIj4KICAgICAgICAgICAgICAgIDxkaXYgaWQ9ImxlZnQiIGNsYXNzPSJ0ZXN0Ij48L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgaWQ9InJpZ2h0IiBjbGFzcz0idGVzdCI+PC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgPC9ib2R5Pgo8L2h0bWw+",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXItY29sbGFwc2UgYW5kICdkaXNwbGF5OiB0YWJsZS1jYXB0aW9uJyBlbGVtZW50czwvdGl0bGU+CiAgICAgICAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJNaWNyb3NvZnQiIGhyZWY9Imh0dHA6Ly93d3cubWljcm9zb2Z0LmNvbS8iPgogICAgICAgIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjcHJvcGRlZi1ib3JkZXItY29sbGFwc2UiPgogICAgICAgIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjYm9yZGVycyI+CiAgICAgICAgPG1ldGEgbmFtZT0iZmxhZ3MiIGNvbnRlbnQ9IiI+CiAgICAgICAgPG1ldGEgbmFtZT0iYXNzZXJ0IiBjb250ZW50PSJCb3JkZXItY29sbGFwc2UgZG9lcyBub3QgYXBwbHkgdG8gJ2Rpc3BsYXk6IHRhYmxlLWNhcHRpb24nIGVsZW1lbnRzLiI+CiAgICAgICAgPHN0eWxlIHR5cGU9InRleHQvY3NzIj4KICAgICAgICAgICAgI3RhYmxlCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGRpc3BsYXk6IHRhYmxlOwogICAgICAgICAgICAgICAgaGVpZ2h0OiAxMDBweDsKICAgICAgICAgICAgICAgIHdpZHRoOiAxMDBweDsKICAgICAgICAgICAgfQogICAgICAgICAgICAudGVzdAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOwogICAgICAgICAgICAgICAgZGlzcGxheTogdGFibGUtY2FwdGlvbjsKICAgICAgICAgICAgICAgIGhlaWdodDogMTAwcHg7CiAgICAgICAgICAgICAgICB3aWR0aDogMTAwcHg7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI3RvcAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItYm90dG9tOiAxMHB4IHNvbGlkIGJsdWU7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI3RyCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgZGlzcGxheTogdGFibGUtcm93OwogICAgICAgICAgICB9CiAgICAgICAgICAgICNib3R0b20KICAgICAgICAgICAgewogICAgICAgICAgICAgICAgZGlzcGxheTogdGFibGUtY2VsbDsKICAgICAgICAgICAgICAgIGJvcmRlci10b3A6IDEwcHggZG90dGVkIG9yYW5nZTsKICAgICAgICAgICAgfQogICAgICAgIDwvc3R5bGU+CiAgICA8L2hlYWQ+CiAgICA8Ym9keT4KICAgICAgICA8cD5UZXN0IHBhc3NlcyBpZiBiZWxvdyB0aGVyZSBpcyBhIGhvcml6b250YWwgc29saWQgYmx1ZSBsaW5lIGFib3ZlIGEgZG90dGVkIG9yYW5nZSBsaW5lLjwvcD4KICAgICAgICA8ZGl2IGlkPSJ0YWJsZSI+CiAgICAgICAgICAgIDxkaXYgaWQ9InRvcCIgY2xhc3M9InRlc3QiPjwvZGl2PgogICAgICAgICAgICA8ZGl2IGlkPSJ0ciI+CiAgICAgICAgICAgICAgICA8ZGl2IGlkPSJib3R0b20iPjwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgIDwvYm9keT4KPC9odG1sPg==",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXItY29sbGFwc2UgYW5kICdkaXNwbGF5OiBub25lJyBlbGVtZW50czwvdGl0bGU+CiAgICAgICAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJNaWNyb3NvZnQiIGhyZWY9Imh0dHA6Ly93d3cubWljcm9zb2Z0LmNvbS8iPgogICAgICAgIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjcHJvcGRlZi1ib3JkZXItY29sbGFwc2UiPgogICAgICAgIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjYm9yZGVycyI+CiAgICAgICAgPG1ldGEgbmFtZT0iZmxhZ3MiIGNvbnRlbnQ9IiI+CiAgICAgICAgPG1ldGEgbmFtZT0iYXNzZXJ0IiBjb250ZW50PSJCb3JkZXItY29sbGFwc2UgZG9lcyBub3QgYXBwbHkgdG8gJ2Rpc3BsYXk6IG5vbmUnIGVsZW1lbnRzLiI+CiAgICAgICAgPHN0eWxlIHR5cGU9InRleHQvY3NzIj4KICAgICAgICAgICAgZGl2CiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlcjogMTBweCBzb2xpZCByZWQ7CiAgICAgICAgICAgICAgICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOwogICAgICAgICAgICAgICAgZGlzcGxheTogbm9uZTsKICAgICAgICAgICAgICAgIGhlaWdodDogMTAwcHg7CiAgICAgICAgICAgICAgICB3aWR0aDogMTAwcHg7CiAgICAgICAgICAgIH0KICAgICAgICA8L3N0eWxlPgogICAgPC9oZWFkPgogICAgPGJvZHk+CiAgICAgICAgPHA+VGVzdCBwYXNzZXMgaWYgdGhlcmUgaXMgbm8gcmVkIHZpc2libGUgb24gdGhlIHBhZ2UuPC9wPgogICAgICAgIDxkaXY+PC9kaXY+CiAgICAgICAgPGRpdj48L2Rpdj4KICAgIDwvYm9keT4KPC9odG1sPg==",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXItY29sbGFwc2UgYW5kICdkaXNwbGF5OiBpbmhlcml0JyBlbGVtZW50czwvdGl0bGU+CiAgICAgICAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJNaWNyb3NvZnQiIGhyZWY9Imh0dHA6Ly93d3cubWljcm9zb2Z0LmNvbS8iPgogICAgICAgIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjcHJvcGRlZi1ib3JkZXItY29sbGFwc2UiPgogICAgICAgIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjYm9yZGVycyI+CiAgICAgICAgPG1ldGEgbmFtZT0iZmxhZ3MiIGNvbnRlbnQ9IiI+CiAgICAgICAgPG1ldGEgbmFtZT0iYXNzZXJ0IiBjb250ZW50PSJCb3JkZXItY29sbGFwc2UgZG9lcyBub3QgYXBwbHkgdG8gJ2Rpc3BsYXk6IGluaGVyaXQnIGVsZW1lbnRzIHdoaWNoIGRvIG5vdCBpbmhlcml0IHRoZSB2YWx1ZSBvZiAndGFibGUnIG9yICdpbmxpbmUtdGFibGUnLiI+CiAgICAgICAgPHN0eWxlIHR5cGU9InRleHQvY3NzIj4KICAgICAgICAgICAgI2NvbnRhaW5lcgogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBkaXNwbGF5OiBibG9jazsKICAgICAgICAgICAgfQogICAgICAgICAgICAudGVzdAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOwogICAgICAgICAgICAgICAgZGlzcGxheTogaW5oZXJpdDsKICAgICAgICAgICAgICAgIGhlaWdodDogMTAwcHg7CiAgICAgICAgICAgICAgICB3aWR0aDogMTAwcHg7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI3RvcAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItYm90dG9tOiAxMHB4IHNvbGlkIGJsdWU7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2JvdHRvbQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItdG9wOiAxMHB4IGRvdHRlZCBvcmFuZ2U7CiAgICAgICAgICAgIH0KICAgICAgICA8L3N0eWxlPgogICAgPC9oZWFkPgogICAgPGJvZHk+CiAgICAgICAgPHA+VGVzdCBwYXNzZXMgaWYgYmVsb3cgdGhlcmUgaXMgYSBob3Jpem9udGFsIHNvbGlkIGJsdWUgbGluZSBhYm92ZSBhIGRvdHRlZCBvcmFuZ2UgbGluZS48L3A+CiAgICAgICAgPGRpdiBpZD0iY29udGFpbmVyIj4KICAgICAgICAgICAgPGRpdiBpZD0idG9wIiBjbGFzcz0idGVzdCI+PC9kaXY+CiAgICAgICAgICAgIDxkaXYgaWQ9ImJvdHRvbSIgY2xhc3M9InRlc3QiPjwvZGl2PgogICAgICAgIDwvZGl2PgogICAgPC9ib2R5Pgo8L2h0bWw+",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXItY29sbGFwc2UgaXMgaW5oZXJpdGVkIGJ5IGRlZmF1bHQ8L3RpdGxlPgogICAgICAgIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iTWljcm9zb2Z0IiBocmVmPSJodHRwOi8vd3d3Lm1pY3Jvc29mdC5jb20vIj4KICAgICAgICA8bGluayByZWw9ImhlbHAiIGhyZWY9Imh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL3RhYmxlcy5odG1sI3Byb3BkZWYtYm9yZGVyLWNvbGxhcHNlIj4KICAgICAgICA8bGluayByZWw9ImhlbHAiIGhyZWY9Imh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL3RhYmxlcy5odG1sI2JvcmRlcnMiPgogICAgICAgIDxtZXRhIG5hbWU9ImZsYWdzIiBjb250ZW50PSIiPgogICAgICAgIDxtZXRhIG5hbWU9ImFzc2VydCIgY29udGVudD0iQm9yZGVyLWNvbGxhcHNlIGlzIGluaGVyaXRlZCBieSBkZWZhdWx0LiI+CiAgICAgICAgPHN0eWxlIHR5cGU9InRleHQvY3NzIj4KICAgICAgICAgICAgI2NvbnRhaW5lcgogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOwogICAgICAgICAgICB9CiAgICAgICAgICAgICN0YWJsZQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiByZWQ7CiAgICAgICAgICAgICAgICBib3JkZXItc3BhY2luZzogMTBweDsKICAgICAgICAgICAgICAgIGJvcmRlci1zdHlsZTogbm9uZTsKICAgICAgICAgICAgICAgIGRpc3BsYXk6IHRhYmxlOwogICAgICAgICAgICB9CiAgICAgICAgICAgIC5yb3cKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgZGlzcGxheTogdGFibGUtcm93OwogICAgICAgICAgICB9CiAgICAgICAgICAgIC5jZWxsCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IGJsYWNrOwogICAgICAgICAgICAgICAgYm9yZGVyOiAzcHggc29saWQgYmxhY2s7CiAgICAgICAgICAgICAgICBkaXNwbGF5OiB0YWJsZS1jZWxsOwogICAgICAgICAgICB9CiAgICAgICAgPC9zdHlsZT4KICAgIDwvaGVhZD4KICAgIDxib2R5PgogICAgICAgIDxwPlRlc3QgcGFzc2VzIGlmIHRoZXJlIGlzIGEgc2luZ2xlIGJveCBiZWxvdyBhbmQgdGhlcmUgaXMgbm8gcmVkIHZpc2libGUgb24gdGhlIHBhZ2UuPC9wPgogICAgICAgIDxkaXYgaWQ9ImNvbnRhaW5lciI+CiAgICAgICAgICAgIDxkaXYgaWQ9InRhYmxlIj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJvdyI+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2VsbCI+WFhYWFg8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjZWxsIj5YWFhYWDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJyb3ciPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNlbGwiPlhYWFhYPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2VsbCI+WFhYWFg8L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgIDwvYm9keT4KPC9odG1sPg==",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBJbml0aWFsIHZhbHVlIG9mIGJvcmRlci1jb2xsYXBzZTwvdGl0bGU+CiAgICAgICAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJNaWNyb3NvZnQiIGhyZWY9Imh0dHA6Ly93d3cubWljcm9zb2Z0LmNvbS8iPgogICAgICAgIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjcHJvcGRlZi1ib3JkZXItY29sbGFwc2UiPgogICAgICAgIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjYm9yZGVycyI+CiAgICAgICAgPG1ldGEgbmFtZT0iZmxhZ3MiIGNvbnRlbnQ9IiI+CiAgICAgICAgPG1ldGEgbmFtZT0iYXNzZXJ0IiBjb250ZW50PSJUaGUgaW5pdGlhbCB2YWx1ZSBvZiBib3JkZXItY29sbGFwc2UgaXMgJ3NlcGFyYXRlJy4iPgogICAgICAgIDxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+CiAgICAgICAgICAgIHRhYmxlCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1zcGFjaW5nOiAzcHg7CiAgICAgICAgICAgICAgICBib3JkZXItc3R5bGU6IG5vbmU7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgdGQKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYmFja2dyb3VuZDogYmxhY2s7CiAgICAgICAgICAgICAgICBib3JkZXI6IDNweCBzb2xpZCBibGFjazsKICAgICAgICAgICAgfQogICAgICAgIDwvc3R5bGU+CiAgICA8L2hlYWQ+CiAgICA8Ym9keT4KICAgICAgICA8cD5UZXN0IHBhc3NlcyBpZiB0aGVyZSBhcmUgZm91ciBib3hlcyBiZWxvdy48L3A+CiAgICAgICAgPHRhYmxlPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQ+WFhYWFg8L3RkPgogICAgICAgICAgICAgICAgPHRkPlhYWFhYPC90ZD4KICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkPlhYWFhYPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5YWFhYWDwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgPC90YWJsZT4KICAgIDwvYm9keT4KPC9odG1sPg==",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAoYnkgYm9yZGVyIHN0eWxlKTogJ2RvdWJsZScgdnMuICdzb2xpZCcgLSBib3JkZXIgd2l0aCBoaWdoZXN0IHByaW9yaXR5IGJvcmRlciBzdHlsZSBzaG91bGQgZG9taW5hdGU8L3RpdGxlPgogICAgICAgIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iTWljcm9zb2Z0IiBocmVmPSJodHRwOi8vd3d3Lm1pY3Jvc29mdC5jb20vIj4KICAgICAgICA8bGluayByZWw9ImhlbHAiIGhyZWY9Imh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL3RhYmxlcy5odG1sI2JvcmRlci1jb25mbGljdC1yZXNvbHV0aW9uIj4KICAgICAgICA8bWV0YSBuYW1lPSJmbGFncyIgY29udGVudD0iIj4KICAgICAgICA8bWV0YSBuYW1lPSJhc3NlcnQiIGNvbnRlbnQ9IlRoZSAnZG91YmxlJyBib3JkZXIgaXMgdGhlIGRvbWluYW50IGJvcmRlciB3aGVuIGl0IGlzIGNvbGxhcHNlZCB3aXRoIGEgJ3NvbGlkJyBib3JkZXIgb2YgdGhlIHNhbWUgc2l6ZS4iPgogICAgICAgIDxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+CiAgICAgICAgICAgICN0YWJsZTEKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMjBweDsKICAgICAgICAgICAgfQogICAgICAgICAgICB0YWJsZQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHRkCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlcjogNXB4IGRvdWJsZSBsaW1lOwogICAgICAgICAgICAgICAgaGVpZ2h0OiAzZW07CiAgICAgICAgICAgICAgICB3aWR0aDogM2VtOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZW50ZXIKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyOiA1cHggc29saWQgcmVkOwogICAgICAgICAgICB9CiAgICAgICAgPC9zdHlsZT4KICAgIDwvaGVhZD4KICAgIDxib2R5PgogICAgICAgIDxwPlRlc3QgcGFzc2VzIGlmIHRoZSBjZW50ZXIgYm94IGluIHRoZSB0YWJsZSBiZWxvdyBoYXMgYSBib3JkZXIgc2ltaWxhciB0byB0aGlzOjwvcD4KICAgICAgICA8dGFibGUgaWQ9InRhYmxlMSI+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD48L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgIDwvdGFibGU+CiAgICAgICAgPHRhYmxlPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQ+ZG91YmxlPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5kb3VibGU8L3RkPgogICAgICAgICAgICAgICAgPHRkPmRvdWJsZTwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD5kb3VibGU8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZW50ZXIiPnNvbGlkPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5kb3VibGU8L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQ+ZG91YmxlPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5kb3VibGU8L3RkPgogICAgICAgICAgICAgICAgPHRkPmRvdWJsZTwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgPC90YWJsZT4KICAgIDwvYm9keT4KPC9odG1sPg==",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAoYnkgYm9yZGVyIHN0eWxlKTogJ291dHNldCcgdnMuICdkb3R0ZWQnIC0gYm9yZGVyIHdpdGggaGlnaGVzdCBwcmlvcml0eSBib3JkZXIgc3R5bGUgc2hvdWxkIGRvbWluYXRlPC90aXRsZT4KICAgICAgICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9Ik1pY3Jvc29mdCIgaHJlZj0iaHR0cDovL3d3dy5taWNyb3NvZnQuY29tLyI+CiAgICAgICAgPGxpbmsgcmVsPSJoZWxwIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCNib3JkZXItY29uZmxpY3QtcmVzb2x1dGlvbiI+CiAgICAgICAgPG1ldGEgbmFtZT0iZmxhZ3MiIGNvbnRlbnQ9IiI+CiAgICAgICAgPG1ldGEgbmFtZT0iYXNzZXJ0IiBjb250ZW50PSJUaGUgJ2RvdHRlZCcgYm9yZGVyIGlzIHRoZSBkb21pbmFudCBib3JkZXIgd2hlbiBpdCBpcyBjb2xsYXBzZWQgd2l0aCBhbiAnb3V0c2V0JyBib3JkZXIgb2YgdGhlIHNhbWUgc2l6ZS4iPgogICAgICAgIDxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+CiAgICAgICAgICAgICN0YWJsZTEKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMjBweDsKICAgICAgICAgICAgfQogICAgICAgICAgICB0YWJsZQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHRkCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlcjogNXB4IG91dHNldCBsaW1lOwogICAgICAgICAgICAgICAgaGVpZ2h0OiAzZW07CiAgICAgICAgICAgICAgICB3aWR0aDogM2VtOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZW50ZXIsICN0YWJsZTEgdGQKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyOiA1cHggZG90dGVkIGxpbWU7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI3RvcAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItdG9wOiA1cHggb3V0c2V0IHJlZDsKICAgICAgICAgICAgfQogICAgICAgICAgICAjbGVmdAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItbGVmdDogNXB4IG91dHNldCByZWQ7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2JvdHRvbQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItYm90dG9tOiA1cHggb3V0c2V0IHJlZDsKICAgICAgICAgICAgfQogICAgICAgICAgICAjcmlnaHQKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLXJpZ2h0OiA1cHggb3V0c2V0IHJlZDsKICAgICAgICAgICAgfQogICAgICAgIDwvc3R5bGU+CiAgICA8L2hlYWQ+CiAgICA8Ym9keT4KICAgICAgICA8cD5UZXN0IHBhc3NlcyBpZiB0aGUgY2VudGVyIGJveCBpbiB0aGUgdGFibGUgYmVsb3cgaGFzIGEgYm9yZGVyIHNpbWlsYXIgdG8gdGhpczo8L3A+CiAgICAgICAgPHRhYmxlIGlkPSJ0YWJsZTEiPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQ+PC90ZD4KICAgICAgICAgICAgPC90cj4KICAgICAgICA8L3RhYmxlPgogICAgICAgIDx0YWJsZT4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkPm91dHNldDwvdGQ+CiAgICAgICAgICAgICAgICA8dGQgaWQ9ImJvdHRvbSI+b3V0c2V0PC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5vdXRzZXQ8L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQgaWQ9InJpZ2h0Ij5vdXRzZXQ8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZW50ZXIiPmRvdHRlZDwvdGQ+CiAgICAgICAgICAgICAgICA8dGQgaWQ9ImxlZnQiPm91dHNldDwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD5vdXRzZXQ8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJ0b3AiPm91dHNldDwvdGQ+CiAgICAgICAgICAgICAgICA8dGQ+b3V0c2V0PC90ZD4KICAgICAgICAgICAgPC90cj4KICAgICAgICA8L3RhYmxlPgogICAgPC9ib2R5Pgo8L2h0bWw+",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogPGhlYWQ+CiAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAod2lkdGgpIC0gaGlkZGVuL25vbmU8L3RpdGxlPgogIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iTGFjaGxhbiBIdW50IiBocmVmPSJodHRwOi8vbGFjaHkuaWQuYXUvYWJvdXQvY29udGFjdCI+CiAgPHN0eWxlIHR5cGU9InRleHQvY3NzIj4KICAgdGFibGUgeyBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOyB9CiAgIHRkIHsgIGJvcmRlcjogNXB4IG5vbmUgcmVkOyBoZWlnaHQ6IDNlbTsgfQogICAuYzUgeyBib3JkZXItd2lkdGg6IDEwcHg7IGJvcmRlci1zdHlsZTogaGlkZGVuOyB9CiAgPC9zdHlsZT4KICA8bGluayB0aXRsZT0iMTcuNi4yLjEgQm9yZGVyIGNvbmZsaWN0IHJlc29sdXRpb24iIGhyZWY9Imh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL3RhYmxlcy5odG1sI2JvcmRlci1jb25mbGljdC1yZXNvbHV0aW9uIiByZWw9ImhlbHAiPgogPC9oZWFkPgogPGJvZHk+CiAgPHA+VGhlcmUgc2hvdWxkIGJlIG5vIHJlZCBib3JkZXJzIG9uIHRoZSB0YWJsZSBiZWxvdzwvcD4KICA8dGFibGU+CiAgIDx0cj4KICAgIDx0ZCBjbGFzcz0iYzEiPm5vbmU8L3RkPjx0ZCBjbGFzcz0iYzIiPm5vbmU8L3RkPjx0ZCBjbGFzcz0iYzMiPm5vbmU8L3RkPgogICA8L3RyPgogICA8dHI+CiAgICA8dGQgY2xhc3M9ImM0Ij5ub25lPC90ZD48dGQgY2xhc3M9ImM1Ij5oaWRkZW48L3RkPjx0ZCBjbGFzcz0iYzYiPm5vbmU8L3RkPgogICA8L3RyPgogICA8dHI+CiAgICA8dGQgY2xhc3M9ImM3Ij5ub25lPC90ZD48dGQgY2xhc3M9ImM4Ij5ub25lPC90ZD48dGQgY2xhc3M9ImM5Ij5ub25lPC90ZD4KICAgPC90cj4KICA8L3RhYmxlPgogPC9ib2R5Pgo8L2h0bWw+",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogPGhlYWQ+CiAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAod2lkdGgpIC0gcmlkZ2Uvc29saWQ8L3RpdGxlPgogIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iTGFjaGxhbiBIdW50IiBocmVmPSJodHRwOi8vbGFjaHkuaWQuYXUvYWJvdXQvY29udGFjdCI+CiAgPHN0eWxlIHR5cGU9InRleHQvY3NzIj4KICAgdGFibGUgeyBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOyB9CiAgIHRkIHsgIGJvcmRlcjogNXB4IHNvbGlkIGxpbWU7IGhlaWdodDogM2VtOyB9CiAgIC5jNSB7IGJvcmRlci13aWR0aDogMTBweDsgYm9yZGVyLXN0eWxlOiByaWRnZTsgfQogICAuYzIgeyBib3JkZXItYm90dG9tLWNvbG9yOiByZWQ7IH0KICAgLmM2IHsgYm9yZGVyLWxlZnQtY29sb3I6IHJlZDsgfQogICAuYzggeyBib3JkZXItdG9wLWNvbG9yOiByZWQ7IH0KICAgLmM0IHsgYm9yZGVyLXJpZ2h0LWNvbG9yOiByZWQ7IH0KICA8L3N0eWxlPgogIDxsaW5rIHRpdGxlPSIxNy42LjIuMSBCb3JkZXIgY29uZmxpY3QgcmVzb2x1dGlvbiIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjYm9yZGVyLWNvbmZsaWN0LXJlc29sdXRpb24iIHJlbD0iaGVscCI+CiA8L2hlYWQ+CiA8Ym9keT4KICA8cD5UaGVyZSBzaG91bGQgYmUgbm8gcmVkIGJvcmRlcnMgb24gdGhlIHRhYmxlIGJlbG93PC9wPgogIDx0YWJsZT4KICAgPHRyPgogICAgPHRkIGNsYXNzPSJjMSI+c29saWQ8L3RkPjx0ZCBjbGFzcz0iYzIiPnNvbGlkPC90ZD48dGQgY2xhc3M9ImMzIj5zb2xpZDwvdGQ+CiAgIDwvdHI+CiAgIDx0cj4KICAgIDx0ZCBjbGFzcz0iYzQiPnNvbGlkPC90ZD48dGQgY2xhc3M9ImM1Ij5yaWRnZTwvdGQ+PHRkIGNsYXNzPSJjNiI+c29saWQ8L3RkPgogICA8L3RyPgogICA8dHI+CiAgICA8dGQgY2xhc3M9ImM3Ij5zb2xpZDwvdGQ+PHRkIGNsYXNzPSJjOCI+c29saWQ8L3RkPjx0ZCBjbGFzcz0iYzkiPnNvbGlkPC90ZD4KICAgPC90cj4KICA8L3RhYmxlPgogPC9ib2R5Pgo8L2h0bWw+",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogPGhlYWQ+CiAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAod2lkdGgpIC0gcmlkZ2UvZG90dGVkPC90aXRsZT4KICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9IkxhY2hsYW4gSHVudCIgaHJlZj0iaHR0cDovL2xhY2h5LmlkLmF1L2Fib3V0L2NvbnRhY3QiPgogIDxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+CiAgIHRhYmxlIHsgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsgfQogICB0ZCB7ICBib3JkZXI6IDVweCBkb3R0ZWQgbGltZTsgaGVpZ2h0OiAzZW07IH0KICAgLmM1IHsgYm9yZGVyLXdpZHRoOiAxMHB4OyBib3JkZXItc3R5bGU6IHJpZGdlOyB9CiAgIC5jMiB7IGJvcmRlci1ib3R0b20tY29sb3I6IHJlZDsgfQogICAuYzYgeyBib3JkZXItbGVmdC1jb2xvcjogcmVkOyB9CiAgIC5jOCB7IGJvcmRlci10b3AtY29sb3I6IHJlZDsgfQogICAuYzQgeyBib3JkZXItcmlnaHQtY29sb3I6IHJlZDsgfQogIDwvc3R5bGU+CiAgPGxpbmsgdGl0bGU9IjE3LjYuMi4xIEJvcmRlciBjb25mbGljdCByZXNvbHV0aW9uIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCNib3JkZXItY29uZmxpY3QtcmVzb2x1dGlvbiIgcmVsPSJoZWxwIj4KIDwvaGVhZD4KIDxib2R5PgogIDxwPlRoZXJlIHNob3VsZCBiZSBubyByZWQgYm9yZGVycyBvbiB0aGUgdGFibGUgYmVsb3c8L3A+CiAgPHRhYmxlPgogICA8dHI+CiAgICA8dGQgY2xhc3M9ImMxIj5kb3R0ZWQ8L3RkPjx0ZCBjbGFzcz0iYzIiPmRvdHRlZDwvdGQ+PHRkIGNsYXNzPSJjMyI+ZG90dGVkPC90ZD4KICAgPC90cj4KICAgPHRyPgogICAgPHRkIGNsYXNzPSJjNCI+ZG90dGVkPC90ZD48dGQgY2xhc3M9ImM1Ij5yaWRnZTwvdGQ+PHRkIGNsYXNzPSJjNiI+ZG90dGVkPC90ZD4KICAgPC90cj4KICAgPHRyPgogICAgPHRkIGNsYXNzPSJjNyI+ZG90dGVkPC90ZD48dGQgY2xhc3M9ImM4Ij5kb3R0ZWQ8L3RkPjx0ZCBjbGFzcz0iYzkiPmRvdHRlZDwvdGQ+CiAgIDwvdHI+CiAgPC90YWJsZT4KIDwvYm9keT4KPC9odG1sPg==",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogPGhlYWQ+CiAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAod2lkdGgpIC0gcmlkZ2UvcmlkZ2U8L3RpdGxlPgogIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iTGFjaGxhbiBIdW50IiBocmVmPSJodHRwOi8vbGFjaHkuaWQuYXUvYWJvdXQvY29udGFjdCI+CiAgPHN0eWxlIHR5cGU9InRleHQvY3NzIj4KICAgdGFibGUgeyBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOyB9CiAgIHRkIHsgIGJvcmRlcjogNXB4IHJpZGdlIGxpbWU7IGhlaWdodDogM2VtOyB9CiAgIC5jNSB7IGJvcmRlci13aWR0aDogMTBweDsgfQogICAuYzIgeyBib3JkZXItYm90dG9tLWNvbG9yOiByZWQ7IH0KICAgLmM2IHsgYm9yZGVyLWxlZnQtY29sb3I6IHJlZDsgfQogICAuYzggeyBib3JkZXItdG9wLWNvbG9yOiByZWQ7IH0KICAgLmM0IHsgYm9yZGVyLXJpZ2h0LWNvbG9yOiByZWQ7IH0KICA8L3N0eWxlPgogIDxsaW5rIHRpdGxlPSIxNy42LjIuMSBCb3JkZXIgY29uZmxpY3QgcmVzb2x1dGlvbiIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjYm9yZGVyLWNvbmZsaWN0LXJlc29sdXRpb24iIHJlbD0iaGVscCI+CiA8L2hlYWQ+CiA8Ym9keT4KICA8cD5UaGVyZSBzaG91bGQgYmUgbm8gcmVkIGJvcmRlcnMgb24gdGhlIHRhYmxlIGJlbG93PC9wPgogIDx0YWJsZT4KICAgPHRyPgogICAgPHRkIGNsYXNzPSJjMSI+cmlkZ2U8L3RkPjx0ZCBjbGFzcz0iYzIiPnJpZGdlPC90ZD48dGQgY2xhc3M9ImMzIj5yaWRnZTwvdGQ+CiAgIDwvdHI+CiAgIDx0cj4KICAgIDx0ZCBjbGFzcz0iYzQiPnJpZGdlPC90ZD48dGQgY2xhc3M9ImM1Ij5yaWRnZTwvdGQ+PHRkIGNsYXNzPSJjNiI+cmlkZ2U8L3RkPgogICA8L3RyPgogICA8dHI+CiAgICA8dGQgY2xhc3M9ImM3Ij5yaWRnZTwvdGQ+PHRkIGNsYXNzPSJjOCI+cmlkZ2U8L3RkPjx0ZCBjbGFzcz0iYzkiPnJpZGdlPC90ZD4KICAgPC90cj4KICA8L3RhYmxlPgogPC9ib2R5Pgo8L2h0bWw+",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogPGhlYWQ+CiAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAod2lkdGgpIC0gcmlkZ2Uvb3V0c2V0PC90aXRsZT4KICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9IkxhY2hsYW4gSHVudCIgaHJlZj0iaHR0cDovL2xhY2h5LmlkLmF1L2Fib3V0L2NvbnRhY3QiPgogIDxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+CiAgIHRhYmxlIHsgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsgfQogICB0ZCB7ICBib3JkZXI6IDVweCBvdXRzZXQgbGltZTsgaGVpZ2h0OiAzZW07IH0KICAgLmM1IHsgYm9yZGVyLXdpZHRoOiAxMHB4OyBib3JkZXItc3R5bGU6IHJpZGdlOyB9CiAgIC5jMiB7IGJvcmRlci1ib3R0b20tY29sb3I6IHJlZDsgfQogICAuYzYgeyBib3JkZXItbGVmdC1jb2xvcjogcmVkOyB9CiAgIC5jOCB7IGJvcmRlci10b3AtY29sb3I6IHJlZDsgfQogICAuYzQgeyBib3JkZXItcmlnaHQtY29sb3I6IHJlZDsgfQogIDwvc3R5bGU+CiAgPGxpbmsgdGl0bGU9IjE3LjYuMi4xIEJvcmRlciBjb25mbGljdCByZXNvbHV0aW9uIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCNib3JkZXItY29uZmxpY3QtcmVzb2x1dGlvbiIgcmVsPSJoZWxwIj4KIDwvaGVhZD4KIDxib2R5PgogIDxwPlRoZXJlIHNob3VsZCBiZSBubyByZWQgYm9yZGVycyBvbiB0aGUgdGFibGUgYmVsb3c8L3A+CiAgPHRhYmxlPgogICA8dHI+CiAgICA8dGQgY2xhc3M9ImMxIj5vdXRzZXQ8L3RkPjx0ZCBjbGFzcz0iYzIiPm91dHNldDwvdGQ+PHRkIGNsYXNzPSJjMyI+b3V0c2V0PC90ZD4KICAgPC90cj4KICAgPHRyPgogICAgPHRkIGNsYXNzPSJjNCI+b3V0c2V0PC90ZD48dGQgY2xhc3M9ImM1Ij5yaWRnZTwvdGQ+PHRkIGNsYXNzPSJjNiI+b3V0c2V0PC90ZD4KICAgPC90cj4KICAgPHRyPgogICAgPHRkIGNsYXNzPSJjNyI+b3V0c2V0PC90ZD48dGQgY2xhc3M9ImM4Ij5vdXRzZXQ8L3RkPjx0ZCBjbGFzcz0iYzkiPm91dHNldDwvdGQ+CiAgIDwvdHI+CiAgPC90YWJsZT4KIDwvYm9keT4KPC9odG1sPg==",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogPGhlYWQ+CiAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAod2lkdGgpIC0gcmlkZ2UvZ3Jvb3ZlPC90aXRsZT4KICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9IkxhY2hsYW4gSHVudCIgaHJlZj0iaHR0cDovL2xhY2h5LmlkLmF1L2Fib3V0L2NvbnRhY3QiPgogIDxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+CiAgIHRhYmxlIHsgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsgfQogICB0ZCB7ICBib3JkZXI6IDVweCBncm9vdmUgbGltZTsgaGVpZ2h0OiAzZW07IH0KICAgLmM1IHsgYm9yZGVyLXdpZHRoOiAxMHB4OyBib3JkZXItc3R5bGU6IHJpZGdlOyB9CiAgIC5jMiB7IGJvcmRlci1ib3R0b20tY29sb3I6IHJlZDsgfQogICAuYzYgeyBib3JkZXItbGVmdC1jb2xvcjogcmVkOyB9CiAgIC5jOCB7IGJvcmRlci10b3AtY29sb3I6IHJlZDsgfQogICAuYzQgeyBib3JkZXItcmlnaHQtY29sb3I6IHJlZDsgfQogIDwvc3R5bGU+CiAgPGxpbmsgdGl0bGU9IjE3LjYuMi4xIEJvcmRlciBjb25mbGljdCByZXNvbHV0aW9uIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCNib3JkZXItY29uZmxpY3QtcmVzb2x1dGlvbiIgcmVsPSJoZWxwIj4KIDwvaGVhZD4KIDxib2R5PgogIDxwPlRoZXJlIHNob3VsZCBiZSBubyByZWQgYm9yZGVycyBvbiB0aGUgdGFibGUgYmVsb3c8L3A+CiAgPHRhYmxlPgogICA8dHI+CiAgICA8dGQgY2xhc3M9ImMxIj5ncm9vdmU8L3RkPjx0ZCBjbGFzcz0iYzIiPmdyb292ZTwvdGQ+PHRkIGNsYXNzPSJjMyI+Z3Jvb3ZlPC90ZD4KICAgPC90cj4KICAgPHRyPgogICAgPHRkIGNsYXNzPSJjNCI+Z3Jvb3ZlPC90ZD48dGQgY2xhc3M9ImM1Ij5yaWRnZTwvdGQ+PHRkIGNsYXNzPSJjNiI+Z3Jvb3ZlPC90ZD4KICAgPC90cj4KICAgPHRyPgogICAgPHRkIGNsYXNzPSJjNyI+Z3Jvb3ZlPC90ZD48dGQgY2xhc3M9ImM4Ij5ncm9vdmU8L3RkPjx0ZCBjbGFzcz0iYzkiPmdyb292ZTwvdGQ+CiAgIDwvdHI+CiAgPC90YWJsZT4KIDwvYm9keT4KPC9odG1sPg==",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogPGhlYWQ+CiAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAod2lkdGgpIC0gcmlkZ2UvaW5zZXQ8L3RpdGxlPgogIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iTGFjaGxhbiBIdW50IiBocmVmPSJodHRwOi8vbGFjaHkuaWQuYXUvYWJvdXQvY29udGFjdCI+CiAgPHN0eWxlIHR5cGU9InRleHQvY3NzIj4KICAgdGFibGUgeyBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOyB9CiAgIHRkIHsgIGJvcmRlcjogNXB4IGluc2V0IGxpbWU7IGhlaWdodDogM2VtOyB9CiAgIC5jNSB7IGJvcmRlci13aWR0aDogMTBweDsgYm9yZGVyLXN0eWxlOiByaWRnZTsgfQogICAuYzIgeyBib3JkZXItYm90dG9tLWNvbG9yOiByZWQ7IH0KICAgLmM2IHsgYm9yZGVyLWxlZnQtY29sb3I6IHJlZDsgfQogICAuYzggeyBib3JkZXItdG9wLWNvbG9yOiByZWQ7IH0KICAgLmM0IHsgYm9yZGVyLXJpZ2h0LWNvbG9yOiByZWQ7IH0KICA8L3N0eWxlPgogIDxsaW5rIHRpdGxlPSIxNy42LjIuMSBCb3JkZXIgY29uZmxpY3QgcmVzb2x1dGlvbiIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjYm9yZGVyLWNvbmZsaWN0LXJlc29sdXRpb24iIHJlbD0iaGVscCI+CiA8L2hlYWQ+CiA8Ym9keT4KICA8cD5UaGVyZSBzaG91bGQgYmUgbm8gcmVkIGJvcmRlcnMgb24gdGhlIHRhYmxlIGJlbG93PC9wPgogIDx0YWJsZT4KICAgPHRyPgogICAgPHRkIGNsYXNzPSJjMSI+aW5zZXQ8L3RkPjx0ZCBjbGFzcz0iYzIiPmluc2V0PC90ZD48dGQgY2xhc3M9ImMzIj5pbnNldDwvdGQ+CiAgIDwvdHI+CiAgIDx0cj4KICAgIDx0ZCBjbGFzcz0iYzQiPmluc2V0PC90ZD48dGQgY2xhc3M9ImM1Ij5yaWRnZTwvdGQ+PHRkIGNsYXNzPSJjNiI+aW5zZXQ8L3RkPgogICA8L3RyPgogICA8dHI+CiAgICA8dGQgY2xhc3M9ImM3Ij5pbnNldDwvdGQ+PHRkIGNsYXNzPSJjOCI+aW5zZXQ8L3RkPjx0ZCBjbGFzcz0iYzkiPmluc2V0PC90ZD4KICAgPC90cj4KICA8L3RhYmxlPgogPC9ib2R5Pgo8L2h0bWw+",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogPGhlYWQ+CiAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAod2lkdGgpIC0gcmlkZ2Uvbm9uZTwvdGl0bGU+CiAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJMYWNobGFuIEh1bnQiIGhyZWY9Imh0dHA6Ly9sYWNoeS5pZC5hdS9hYm91dC9jb250YWN0Ij4KICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgogICB0YWJsZSB7IGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7IH0KICAgdGQgeyAgYm9yZGVyOiA1cHggbm9uZSByZWQ7IGhlaWdodDogM2VtOyB9CiAgIC5jNSB7IGJvcmRlcjogMTBweCByaWRnZSBsaW1lOyB9CiAgPC9zdHlsZT4KICA8bGluayB0aXRsZT0iMTcuNi4yLjEgQm9yZGVyIGNvbmZsaWN0IHJlc29sdXRpb24iIGhyZWY9Imh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL3RhYmxlcy5odG1sI2JvcmRlci1jb25mbGljdC1yZXNvbHV0aW9uIiByZWw9ImhlbHAiPgogPC9oZWFkPgogPGJvZHk+CiAgPHA+VGhlcmUgc2hvdWxkIGJlIG5vIHJlZCBib3JkZXJzIG9uIHRoZSB0YWJsZSBiZWxvdzwvcD4KICA8dGFibGU+CiAgIDx0cj4KICAgIDx0ZCBjbGFzcz0iYzEiPm5vbmU8L3RkPjx0ZCBjbGFzcz0iYzIiPm5vbmU8L3RkPjx0ZCBjbGFzcz0iYzMiPm5vbmU8L3RkPgogICA8L3RyPgogICA8dHI+CiAgICA8dGQgY2xhc3M9ImM0Ij5ub25lPC90ZD48dGQgY2xhc3M9ImM1Ij5yaWRnZTwvdGQ+PHRkIGNsYXNzPSJjNiI+bm9uZTwvdGQ+CiAgIDwvdHI+CiAgIDx0cj4KICAgIDx0ZCBjbGFzcz0iYzciPm5vbmU8L3RkPjx0ZCBjbGFzcz0iYzgiPm5vbmU8L3RkPjx0ZCBjbGFzcz0iYzkiPm5vbmU8L3RkPgogICA8L3RyPgogIDwvdGFibGU+CiA8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogPGhlYWQ+CiAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAod2lkdGgpIC0gb3V0c2V0L2hpZGRlbjwvdGl0bGU+CiAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJMYWNobGFuIEh1bnQiIGhyZWY9Imh0dHA6Ly9sYWNoeS5pZC5hdS9hYm91dC9jb250YWN0Ij4KICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgogICB0YWJsZSB7IGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7IH0KICAgdGQgeyAgYm9yZGVyOiA1cHggaGlkZGVuIHJlZDsgaGVpZ2h0OiAzZW07IH0KICAgLmM1IHsgYm9yZGVyLXdpZHRoOiAxMHB4OyBib3JkZXItc3R5bGU6IG91dHNldDsgfQogIDwvc3R5bGU+CiAgPGxpbmsgdGl0bGU9IjE3LjYuMi4xIEJvcmRlciBjb25mbGljdCByZXNvbHV0aW9uIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCNib3JkZXItY29uZmxpY3QtcmVzb2x1dGlvbiIgcmVsPSJoZWxwIj4KIDwvaGVhZD4KIDxib2R5PgogIDxwPlRoZXJlIHNob3VsZCBiZSBubyByZWQgYm9yZGVycyBvbiB0aGUgdGFibGUgYmVsb3c8L3A+CiAgPHRhYmxlPgogICA8dHI+CiAgICA8dGQgY2xhc3M9ImMxIj5oaWRkZW48L3RkPjx0ZCBjbGFzcz0iYzIiPmhpZGRlbjwvdGQ+PHRkIGNsYXNzPSJjMyI+aGlkZGVuPC90ZD4KICAgPC90cj4KICAgPHRyPgogICAgPHRkIGNsYXNzPSJjNCI+aGlkZGVuPC90ZD48dGQgY2xhc3M9ImM1Ij5vdXRzZXQ8L3RkPjx0ZCBjbGFzcz0iYzYiPmhpZGRlbjwvdGQ+CiAgIDwvdHI+CiAgIDx0cj4KICAgIDx0ZCBjbGFzcz0iYzciPmhpZGRlbjwvdGQ+PHRkIGNsYXNzPSJjOCI+aGlkZGVuPC90ZD48dGQgY2xhc3M9ImM5Ij5oaWRkZW48L3RkPgogICA8L3RyPgogIDwvdGFibGU+CiA8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogPGhlYWQ+CiAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAod2lkdGgpIC0gb3V0c2V0L2RvdWJsZTwvdGl0bGU+CiAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJMYWNobGFuIEh1bnQiIGhyZWY9Imh0dHA6Ly9sYWNoeS5pZC5hdS9hYm91dC9jb250YWN0Ij4KICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgogICB0YWJsZSB7IGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7IH0KICAgdGQgeyAgYm9yZGVyOiA1cHggZG91YmxlIGxpbWU7IGhlaWdodDogM2VtOyB9CiAgIC5jNSB7IGJvcmRlci13aWR0aDogMTBweDsgYm9yZGVyLXN0eWxlOiBvdXRzZXQ7IH0KICAgLmMyIHsgYm9yZGVyLWJvdHRvbS1jb2xvcjogcmVkOyB9CiAgIC5jNiB7IGJvcmRlci1sZWZ0LWNvbG9yOiByZWQ7IH0KICAgLmM4IHsgYm9yZGVyLXRvcC1jb2xvcjogcmVkOyB9CiAgIC5jNCB7IGJvcmRlci1yaWdodC1jb2xvcjogcmVkOyB9CiAgPC9zdHlsZT4KICA8bGluayB0aXRsZT0iMTcuNi4yLjEgQm9yZGVyIGNvbmZsaWN0IHJlc29sdXRpb24iIGhyZWY9Imh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL3RhYmxlcy5odG1sI2JvcmRlci1jb25mbGljdC1yZXNvbHV0aW9uIiByZWw9ImhlbHAiPgogPC9oZWFkPgogPGJvZHk+CiAgPHA+VGhlcmUgc2hvdWxkIGJlIG5vIHJlZCBib3JkZXJzIG9uIHRoZSB0YWJsZSBiZWxvdzwvcD4KICA8dGFibGU+CiAgIDx0cj4KICAgIDx0ZCBjbGFzcz0iYzEiPmRvdWJsZTwvdGQ+PHRkIGNsYXNzPSJjMiI+ZG91YmxlPC90ZD48dGQgY2xhc3M9ImMzIj5kb3VibGU8L3RkPgogICA8L3RyPgogICA8dHI+CiAgICA8dGQgY2xhc3M9ImM0Ij5kb3VibGU8L3RkPjx0ZCBjbGFzcz0iYzUiPm91dHNldDwvdGQ+PHRkIGNsYXNzPSJjNiI+ZG91YmxlPC90ZD4KICAgPC90cj4KICAgPHRyPgogICAgPHRkIGNsYXNzPSJjNyI+ZG91YmxlPC90ZD48dGQgY2xhc3M9ImM4Ij5kb3VibGU8L3RkPjx0ZCBjbGFzcz0iYzkiPmRvdWJsZTwvdGQ+CiAgIDwvdHI+CiAgPC90YWJsZT4KIDwvYm9keT4KPC9odG1sPg==",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogPGhlYWQ+CiAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAod2lkdGgpIC0gb3V0c2V0L3NvbGlkPC90aXRsZT4KICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9IkxhY2hsYW4gSHVudCIgaHJlZj0iaHR0cDovL2xhY2h5LmlkLmF1L2Fib3V0L2NvbnRhY3QiPgogIDxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+CiAgIHRhYmxlIHsgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsgfQogICB0ZCB7ICBib3JkZXI6IDVweCBzb2xpZCBsaW1lOyBoZWlnaHQ6IDNlbTsgfQogICAuYzUgeyBib3JkZXItd2lkdGg6IDEwcHg7IGJvcmRlci1zdHlsZTogb3V0c2V0OyB9CiAgIC5jMiB7IGJvcmRlci1ib3R0b20tY29sb3I6IHJlZDsgfQogICAuYzYgeyBib3JkZXItbGVmdC1jb2xvcjogcmVkOyB9CiAgIC5jOCB7IGJvcmRlci10b3AtY29sb3I6IHJlZDsgfQogICAuYzQgeyBib3JkZXItcmlnaHQtY29sb3I6IHJlZDsgfQogIDwvc3R5bGU+CiAgPGxpbmsgdGl0bGU9IjE3LjYuMi4xIEJvcmRlciBjb25mbGljdCByZXNvbHV0aW9uIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCNib3JkZXItY29uZmxpY3QtcmVzb2x1dGlvbiIgcmVsPSJoZWxwIj4KIDwvaGVhZD4KIDxib2R5PgogIDxwPlRoZXJlIHNob3VsZCBiZSBubyByZWQgYm9yZGVycyBvbiB0aGUgdGFibGUgYmVsb3c8L3A+CiAgPHRhYmxlPgogICA8dHI+CiAgICA8dGQgY2xhc3M9ImMxIj5zb2xpZDwvdGQ+PHRkIGNsYXNzPSJjMiI+c29saWQ8L3RkPjx0ZCBjbGFzcz0iYzMiPnNvbGlkPC90ZD4KICAgPC90cj4KICAgPHRyPgogICAgPHRkIGNsYXNzPSJjNCI+c29saWQ8L3RkPjx0ZCBjbGFzcz0iYzUiPm91dHNldDwvdGQ+PHRkIGNsYXNzPSJjNiI+c29saWQ8L3RkPgogICA8L3RyPgogICA8dHI+CiAgICA8dGQgY2xhc3M9ImM3Ij5zb2xpZDwvdGQ+PHRkIGNsYXNzPSJjOCI+c29saWQ8L3RkPjx0ZCBjbGFzcz0iYzkiPnNvbGlkPC90ZD4KICAgPC90cj4KICA8L3RhYmxlPgogPC9ib2R5Pgo8L2h0bWw+",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogPGhlYWQ+CiAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAod2lkdGgpIC0gb3V0c2V0L2Rhc2hlZDwvdGl0bGU+CiAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJMYWNobGFuIEh1bnQiIGhyZWY9Imh0dHA6Ly9sYWNoeS5pZC5hdS9hYm91dC9jb250YWN0Ij4KICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgogICB0YWJsZSB7IGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7IH0KICAgdGQgeyAgYm9yZGVyOiA1cHggZGFzaGVkIGxpbWU7IGhlaWdodDogM2VtOyB9CiAgIC5jNSB7IGJvcmRlci13aWR0aDogMTBweDsgYm9yZGVyLXN0eWxlOiBvdXRzZXQ7IH0KICAgLmMyIHsgYm9yZGVyLWJvdHRvbS1jb2xvcjogcmVkOyB9CiAgIC5jNiB7IGJvcmRlci1sZWZ0LWNvbG9yOiByZWQ7IH0KICAgLmM4IHsgYm9yZGVyLXRvcC1jb2xvcjogcmVkOyB9CiAgIC5jNCB7IGJvcmRlci1yaWdodC1jb2xvcjogcmVkOyB9CiAgPC9zdHlsZT4KICA8bGluayB0aXRsZT0iMTcuNi4yLjEgQm9yZGVyIGNvbmZsaWN0IHJlc29sdXRpb24iIGhyZWY9Imh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL3RhYmxlcy5odG1sI2JvcmRlci1jb25mbGljdC1yZXNvbHV0aW9uIiByZWw9ImhlbHAiPgogPC9oZWFkPgogPGJvZHk+CiAgPHA+VGhlcmUgc2hvdWxkIGJlIG5vIHJlZCBib3JkZXJzIG9uIHRoZSB0YWJsZSBiZWxvdzwvcD4KICA8dGFibGU+CiAgIDx0cj4KICAgIDx0ZCBjbGFzcz0iYzEiPmRhc2hlZDwvdGQ+PHRkIGNsYXNzPSJjMiI+ZGFzaGVkPC90ZD48dGQgY2xhc3M9ImMzIj5kYXNoZWQ8L3RkPgogICA8L3RyPgogICA8dHI+CiAgICA8dGQgY2xhc3M9ImM0Ij5kYXNoZWQ8L3RkPjx0ZCBjbGFzcz0iYzUiPm91dHNldDwvdGQ+PHRkIGNsYXNzPSJjNiI+ZGFzaGVkPC90ZD4KICAgPC90cj4KICAgPHRyPgogICAgPHRkIGNsYXNzPSJjNyI+ZGFzaGVkPC90ZD48dGQgY2xhc3M9ImM4Ij5kYXNoZWQ8L3RkPjx0ZCBjbGFzcz0iYzkiPmRhc2hlZDwvdGQ+CiAgIDwvdHI+CiAgPC90YWJsZT4KIDwvYm9keT4KPC9odG1sPg==",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogPGhlYWQ+CiAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAod2lkdGgpIC0gb3V0c2V0L2RvdHRlZDwvdGl0bGU+CiAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJMYWNobGFuIEh1bnQiIGhyZWY9Imh0dHA6Ly9sYWNoeS5pZC5hdS9hYm91dC9jb250YWN0Ij4KICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgogICB0YWJsZSB7IGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7IH0KICAgdGQgeyAgYm9yZGVyOiA1cHggZG90dGVkIGxpbWU7IGhlaWdodDogM2VtOyB9CiAgIC5jNSB7IGJvcmRlci13aWR0aDogMTBweDsgYm9yZGVyLXN0eWxlOiBvdXRzZXQ7IH0KICAgLmMyIHsgYm9yZGVyLWJvdHRvbS1jb2xvcjogcmVkOyB9CiAgIC5jNiB7IGJvcmRlci1sZWZ0LWNvbG9yOiByZWQ7IH0KICAgLmM4IHsgYm9yZGVyLXRvcC1jb2xvcjogcmVkOyB9CiAgIC5jNCB7IGJvcmRlci1yaWdodC1jb2xvcjogcmVkOyB9CiAgPC9zdHlsZT4KICA8bGluayB0aXRsZT0iMTcuNi4yLjEgQm9yZGVyIGNvbmZsaWN0IHJlc29sdXRpb24iIGhyZWY9Imh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL3RhYmxlcy5odG1sI2JvcmRlci1jb25mbGljdC1yZXNvbHV0aW9uIiByZWw9ImhlbHAiPgogPC9oZWFkPgogPGJvZHk+CiAgPHA+VGhlcmUgc2hvdWxkIGJlIG5vIHJlZCBib3JkZXJzIG9uIHRoZSB0YWJsZSBiZWxvdzwvcD4KICA8dGFibGU+CiAgIDx0cj4KICAgIDx0ZCBjbGFzcz0iYzEiPmRvdHRlZDwvdGQ+PHRkIGNsYXNzPSJjMiI+ZG90dGVkPC90ZD48dGQgY2xhc3M9ImMzIj5kb3R0ZWQ8L3RkPgogICA8L3RyPgogICA8dHI+CiAgICA8dGQgY2xhc3M9ImM0Ij5kb3R0ZWQ8L3RkPjx0ZCBjbGFzcz0iYzUiPm91dHNldDwvdGQ+PHRkIGNsYXNzPSJjNiI+ZG90dGVkPC90ZD4KICAgPC90cj4KICAgPHRyPgogICAgPHRkIGNsYXNzPSJjNyI+ZG90dGVkPC90ZD48dGQgY2xhc3M9ImM4Ij5kb3R0ZWQ8L3RkPjx0ZCBjbGFzcz0iYzkiPmRvdHRlZDwvdGQ+CiAgIDwvdHI+CiAgPC90YWJsZT4KIDwvYm9keT4KPC9odG1sPg==",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogPGhlYWQ+CiAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAod2lkdGgpIC0gb3V0c2V0L3JpZGdlPC90aXRsZT4KICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9IkxhY2hsYW4gSHVudCIgaHJlZj0iaHR0cDovL2xhY2h5LmlkLmF1L2Fib3V0L2NvbnRhY3QiPgogIDxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+CiAgIHRhYmxlIHsgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsgfQogICB0ZCB7ICBib3JkZXI6IDVweCByaWRnZSBsaW1lOyBoZWlnaHQ6IDNlbTsgfQogICAuYzUgeyBib3JkZXItd2lkdGg6IDEwcHg7IGJvcmRlci1zdHlsZTogb3V0c2V0OyB9CiAgIC5jMiB7IGJvcmRlci1ib3R0b20tY29sb3I6IHJlZDsgfQogICAuYzYgeyBib3JkZXItbGVmdC1jb2xvcjogcmVkOyB9CiAgIC5jOCB7IGJvcmRlci10b3AtY29sb3I6IHJlZDsgfQogICAuYzQgeyBib3JkZXItcmlnaHQtY29sb3I6IHJlZDsgfQogIDwvc3R5bGU+CiAgPGxpbmsgdGl0bGU9IjE3LjYuMi4xIEJvcmRlciBjb25mbGljdCByZXNvbHV0aW9uIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCNib3JkZXItY29uZmxpY3QtcmVzb2x1dGlvbiIgcmVsPSJoZWxwIj4KIDwvaGVhZD4KIDxib2R5PgogIDxwPlRoZXJlIHNob3VsZCBiZSBubyByZWQgYm9yZGVycyBvbiB0aGUgdGFibGUgYmVsb3c8L3A+CiAgPHRhYmxlPgogICA8dHI+CiAgICA8dGQgY2xhc3M9ImMxIj5yaWRnZTwvdGQ+PHRkIGNsYXNzPSJjMiI+cmlkZ2U8L3RkPjx0ZCBjbGFzcz0iYzMiPnJpZGdlPC90ZD4KICAgPC90cj4KICAgPHRyPgogICAgPHRkIGNsYXNzPSJjNCI+cmlkZ2U8L3RkPjx0ZCBjbGFzcz0iYzUiPm91dHNldDwvdGQ+PHRkIGNsYXNzPSJjNiI+cmlkZ2U8L3RkPgogICA8L3RyPgogICA8dHI+CiAgICA8dGQgY2xhc3M9ImM3Ij5yaWRnZTwvdGQ+PHRkIGNsYXNzPSJjOCI+cmlkZ2U8L3RkPjx0ZCBjbGFzcz0iYzkiPnJpZGdlPC90ZD4KICAgPC90cj4KICA8L3RhYmxlPgogPC9ib2R5Pgo8L2h0bWw+",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogPGhlYWQ+CiAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAod2lkdGgpIC0gb3V0c2V0L291dHNldDwvdGl0bGU+CiAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJMYWNobGFuIEh1bnQiIGhyZWY9Imh0dHA6Ly9sYWNoeS5pZC5hdS9hYm91dC9jb250YWN0Ij4KICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgogICB0YWJsZSB7IGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7IH0KICAgdGQgeyAgYm9yZGVyOiA1cHggb3V0c2V0IGxpbWU7IGhlaWdodDogM2VtOyB9CiAgIC5jNSB7IGJvcmRlci13aWR0aDogMTBweDsgfQogICAuYzIgeyBib3JkZXItYm90dG9tLWNvbG9yOiByZWQ7IH0KICAgLmM2IHsgYm9yZGVyLWxlZnQtY29sb3I6IHJlZDsgfQogICAuYzggeyBib3JkZXItdG9wLWNvbG9yOiByZWQ7IH0KICAgLmM0IHsgYm9yZGVyLXJpZ2h0LWNvbG9yOiByZWQ7IH0KICA8L3N0eWxlPgogIDxsaW5rIHRpdGxlPSIxNy42LjIuMSBCb3JkZXIgY29uZmxpY3QgcmVzb2x1dGlvbiIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjYm9yZGVyLWNvbmZsaWN0LXJlc29sdXRpb24iIHJlbD0iaGVscCI+CiA8L2hlYWQ+CiA8Ym9keT4KICA8cD5UaGVyZSBzaG91bGQgYmUgbm8gcmVkIGJvcmRlcnMgb24gdGhlIHRhYmxlIGJlbG93PC9wPgogIDx0YWJsZT4KICAgPHRyPgogICAgPHRkIGNsYXNzPSJjMSI+b3V0c2V0PC90ZD48dGQgY2xhc3M9ImMyIj5vdXRzZXQ8L3RkPjx0ZCBjbGFzcz0iYzMiPm91dHNldDwvdGQ+CiAgIDwvdHI+CiAgIDx0cj4KICAgIDx0ZCBjbGFzcz0iYzQiPm91dHNldDwvdGQ+PHRkIGNsYXNzPSJjNSI+b3V0c2V0PC90ZD48dGQgY2xhc3M9ImM2Ij5vdXRzZXQ8L3RkPgogICA8L3RyPgogICA8dHI+CiAgICA8dGQgY2xhc3M9ImM3Ij5vdXRzZXQ8L3RkPjx0ZCBjbGFzcz0iYzgiPm91dHNldDwvdGQ+PHRkIGNsYXNzPSJjOSI+b3V0c2V0PC90ZD4KICAgPC90cj4KICA8L3RhYmxlPgogPC9ib2R5Pgo8L2h0bWw+",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogPGhlYWQ+CiAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAod2lkdGgpIC0gb3V0c2V0L2dyb292ZTwvdGl0bGU+CiAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJMYWNobGFuIEh1bnQiIGhyZWY9Imh0dHA6Ly9sYWNoeS5pZC5hdS9hYm91dC9jb250YWN0Ij4KICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgogICB0YWJsZSB7IGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7IH0KICAgdGQgeyAgYm9yZGVyOiA1cHggZ3Jvb3ZlIGxpbWU7IGhlaWdodDogM2VtOyB9CiAgIC5jNSB7IGJvcmRlci13aWR0aDogMTBweDsgYm9yZGVyLXN0eWxlOiBvdXRzZXQ7IH0KICAgLmMyIHsgYm9yZGVyLWJvdHRvbS1jb2xvcjogcmVkOyB9CiAgIC5jNiB7IGJvcmRlci1sZWZ0LWNvbG9yOiByZWQ7IH0KICAgLmM4IHsgYm9yZGVyLXRvcC1jb2xvcjogcmVkOyB9CiAgIC5jNCB7IGJvcmRlci1yaWdodC1jb2xvcjogcmVkOyB9CiAgPC9zdHlsZT4KICA8bGluayB0aXRsZT0iMTcuNi4yLjEgQm9yZGVyIGNvbmZsaWN0IHJlc29sdXRpb24iIGhyZWY9Imh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL3RhYmxlcy5odG1sI2JvcmRlci1jb25mbGljdC1yZXNvbHV0aW9uIiByZWw9ImhlbHAiPgogPC9oZWFkPgogPGJvZHk+CiAgPHA+VGhlcmUgc2hvdWxkIGJlIG5vIHJlZCBib3JkZXJzIG9uIHRoZSB0YWJsZSBiZWxvdzwvcD4KICA8dGFibGU+CiAgIDx0cj4KICAgIDx0ZCBjbGFzcz0iYzEiPmdyb292ZTwvdGQ+PHRkIGNsYXNzPSJjMiI+Z3Jvb3ZlPC90ZD48dGQgY2xhc3M9ImMzIj5ncm9vdmU8L3RkPgogICA8L3RyPgogICA8dHI+CiAgICA8dGQgY2xhc3M9ImM0Ij5ncm9vdmU8L3RkPjx0ZCBjbGFzcz0iYzUiPm91dHNldDwvdGQ+PHRkIGNsYXNzPSJjNiI+Z3Jvb3ZlPC90ZD4KICAgPC90cj4KICAgPHRyPgogICAgPHRkIGNsYXNzPSJjNyI+Z3Jvb3ZlPC90ZD48dGQgY2xhc3M9ImM4Ij5ncm9vdmU8L3RkPjx0ZCBjbGFzcz0iYzkiPmdyb292ZTwvdGQ+CiAgIDwvdHI+CiAgPC90YWJsZT4KIDwvYm9keT4KPC9odG1sPg==",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogPGhlYWQ+CiAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAod2lkdGgpIC0gb3V0c2V0L2luc2V0PC90aXRsZT4KICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9IkxhY2hsYW4gSHVudCIgaHJlZj0iaHR0cDovL2xhY2h5LmlkLmF1L2Fib3V0L2NvbnRhY3QiPgogIDxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+CiAgIHRhYmxlIHsgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsgfQogICB0ZCB7ICBib3JkZXI6IDVweCBpbnNldCBsaW1lOyBoZWlnaHQ6IDNlbTsgfQogICAuYzUgeyBib3JkZXItd2lkdGg6IDEwcHg7IGJvcmRlci1zdHlsZTogb3V0c2V0OyB9CiAgIC5jMiB7IGJvcmRlci1ib3R0b20tY29sb3I6IHJlZDsgfQogICAuYzYgeyBib3JkZXItbGVmdC1jb2xvcjogcmVkOyB9CiAgIC5jOCB7IGJvcmRlci10b3AtY29sb3I6IHJlZDsgfQogICAuYzQgeyBib3JkZXItcmlnaHQtY29sb3I6IHJlZDsgfQogIDwvc3R5bGU+CiAgPGxpbmsgdGl0bGU9IjE3LjYuMi4xIEJvcmRlciBjb25mbGljdCByZXNvbHV0aW9uIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCNib3JkZXItY29uZmxpY3QtcmVzb2x1dGlvbiIgcmVsPSJoZWxwIj4KIDwvaGVhZD4KIDxib2R5PgogIDxwPlRoZXJlIHNob3VsZCBiZSBubyByZWQgYm9yZGVycyBvbiB0aGUgdGFibGUgYmVsb3c8L3A+CiAgPHRhYmxlPgogICA8dHI+CiAgICA8dGQgY2xhc3M9ImMxIj5pbnNldDwvdGQ+PHRkIGNsYXNzPSJjMiI+aW5zZXQ8L3RkPjx0ZCBjbGFzcz0iYzMiPmluc2V0PC90ZD4KICAgPC90cj4KICAgPHRyPgogICAgPHRkIGNsYXNzPSJjNCI+aW5zZXQ8L3RkPjx0ZCBjbGFzcz0iYzUiPm91dHNldDwvdGQ+PHRkIGNsYXNzPSJjNiI+aW5zZXQ8L3RkPgogICA8L3RyPgogICA8dHI+CiAgICA8dGQgY2xhc3M9ImM3Ij5pbnNldDwvdGQ+PHRkIGNsYXNzPSJjOCI+aW5zZXQ8L3RkPjx0ZCBjbGFzcz0iYzkiPmluc2V0PC90ZD4KICAgPC90cj4KICA8L3RhYmxlPgogPC9ib2R5Pgo8L2h0bWw+",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogPGhlYWQ+CiAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAod2lkdGgpIC0gb3V0c2V0L25vbmU8L3RpdGxlPgogIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iTGFjaGxhbiBIdW50IiBocmVmPSJodHRwOi8vbGFjaHkuaWQuYXUvYWJvdXQvY29udGFjdCI+CiAgPHN0eWxlIHR5cGU9InRleHQvY3NzIj4KICAgdGFibGUgeyBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOyB9CiAgIHRkIHsgIGJvcmRlcjogNXB4IG5vbmUgcmVkOyBoZWlnaHQ6IDNlbTsgfQogICAuYzUgeyBib3JkZXI6IDEwcHggb3V0c2V0IGxpbWU7IH0KICA8L3N0eWxlPgogIDxsaW5rIHRpdGxlPSIxNy42LjIuMSBCb3JkZXIgY29uZmxpY3QgcmVzb2x1dGlvbiIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjYm9yZGVyLWNvbmZsaWN0LXJlc29sdXRpb24iIHJlbD0iaGVscCI+CiA8L2hlYWQ+CiA8Ym9keT4KICA8cD5UaGVyZSBzaG91bGQgYmUgbm8gcmVkIGJvcmRlcnMgb24gdGhlIHRhYmxlIGJlbG93PC9wPgogIDx0YWJsZT4KICAgPHRyPgogICAgPHRkIGNsYXNzPSJjMSI+bm9uZTwvdGQ+PHRkIGNsYXNzPSJjMiI+bm9uZTwvdGQ+PHRkIGNsYXNzPSJjMyI+bm9uZTwvdGQ+CiAgIDwvdHI+CiAgIDx0cj4KICAgIDx0ZCBjbGFzcz0iYzQiPm5vbmU8L3RkPjx0ZCBjbGFzcz0iYzUiPm91dHNldDwvdGQ+PHRkIGNsYXNzPSJjNiI+bm9uZTwvdGQ+CiAgIDwvdHI+CiAgIDx0cj4KICAgIDx0ZCBjbGFzcz0iYzciPm5vbmU8L3RkPjx0ZCBjbGFzcz0iYzgiPm5vbmU8L3RkPjx0ZCBjbGFzcz0iYzkiPm5vbmU8L3RkPgogICA8L3RyPgogIDwvdGFibGU+CiA8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogPGhlYWQ+CiAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAod2lkdGgpIC0gZ3Jvb3ZlL2hpZGRlbjwvdGl0bGU+CiAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJMYWNobGFuIEh1bnQiIGhyZWY9Imh0dHA6Ly9sYWNoeS5pZC5hdS9hYm91dC9jb250YWN0Ij4KICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgogICB0YWJsZSB7IGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7IH0KICAgdGQgeyAgYm9yZGVyOiA1cHggaGlkZGVuIHJlZDsgaGVpZ2h0OiAzZW07IH0KICAgLmM1IHsgYm9yZGVyLXdpZHRoOiAxMHB4OyBib3JkZXItc3R5bGU6IGdyb292ZTsgfQogIDwvc3R5bGU+CiAgPGxpbmsgdGl0bGU9IjE3LjYuMi4xIEJvcmRlciBjb25mbGljdCByZXNvbHV0aW9uIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCNib3JkZXItY29uZmxpY3QtcmVzb2x1dGlvbiIgcmVsPSJoZWxwIj4KIDwvaGVhZD4KIDxib2R5PgogIDxwPlRoZXJlIHNob3VsZCBiZSBubyByZWQgYm9yZGVycyBvbiB0aGUgdGFibGUgYmVsb3c8L3A+CiAgPHRhYmxlPgogICA8dHI+CiAgICA8dGQgY2xhc3M9ImMxIj5oaWRkZW48L3RkPjx0ZCBjbGFzcz0iYzIiPmhpZGRlbjwvdGQ+PHRkIGNsYXNzPSJjMyI+aGlkZGVuPC90ZD4KICAgPC90cj4KICAgPHRyPgogICAgPHRkIGNsYXNzPSJjNCI+aGlkZGVuPC90ZD48dGQgY2xhc3M9ImM1Ij5ncm9vdmU8L3RkPjx0ZCBjbGFzcz0iYzYiPmhpZGRlbjwvdGQ+CiAgIDwvdHI+CiAgIDx0cj4KICAgIDx0ZCBjbGFzcz0iYzciPmhpZGRlbjwvdGQ+PHRkIGNsYXNzPSJjOCI+aGlkZGVuPC90ZD48dGQgY2xhc3M9ImM5Ij5oaWRkZW48L3RkPgogICA8L3RyPgogIDwvdGFibGU+CiA8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogPGhlYWQ+CiAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAod2lkdGgpIC0gZ3Jvb3ZlL2RvdWJsZTwvdGl0bGU+CiAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJMYWNobGFuIEh1bnQiIGhyZWY9Imh0dHA6Ly9sYWNoeS5pZC5hdS9hYm91dC9jb250YWN0Ij4KICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgogICB0YWJsZSB7IGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7IH0KICAgdGQgeyAgYm9yZGVyOiA1cHggZG91YmxlIGxpbWU7IGhlaWdodDogM2VtOyB9CiAgIC5jNSB7IGJvcmRlci13aWR0aDogMTBweDsgYm9yZGVyLXN0eWxlOiBncm9vdmU7IH0KICAgLmMyIHsgYm9yZGVyLWJvdHRvbS1jb2xvcjogcmVkOyB9CiAgIC5jNiB7IGJvcmRlci1sZWZ0LWNvbG9yOiByZWQ7IH0KICAgLmM4IHsgYm9yZGVyLXRvcC1jb2xvcjogcmVkOyB9CiAgIC5jNCB7IGJvcmRlci1yaWdodC1jb2xvcjogcmVkOyB9CiAgPC9zdHlsZT4KICA8bGluayB0aXRsZT0iMTcuNi4yLjEgQm9yZGVyIGNvbmZsaWN0IHJlc29sdXRpb24iIGhyZWY9Imh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL3RhYmxlcy5odG1sI2JvcmRlci1jb25mbGljdC1yZXNvbHV0aW9uIiByZWw9ImhlbHAiPgogPC9oZWFkPgogPGJvZHk+CiAgPHA+VGhlcmUgc2hvdWxkIGJlIG5vIHJlZCBib3JkZXJzIG9uIHRoZSB0YWJsZSBiZWxvdzwvcD4KICA8dGFibGU+CiAgIDx0cj4KICAgIDx0ZCBjbGFzcz0iYzEiPmRvdWJsZTwvdGQ+PHRkIGNsYXNzPSJjMiI+ZG91YmxlPC90ZD48dGQgY2xhc3M9ImMzIj5kb3VibGU8L3RkPgogICA8L3RyPgogICA8dHI+CiAgICA8dGQgY2xhc3M9ImM0Ij5kb3VibGU8L3RkPjx0ZCBjbGFzcz0iYzUiPmdyb292ZTwvdGQ+PHRkIGNsYXNzPSJjNiI+ZG91YmxlPC90ZD4KICAgPC90cj4KICAgPHRyPgogICAgPHRkIGNsYXNzPSJjNyI+ZG91YmxlPC90ZD48dGQgY2xhc3M9ImM4Ij5kb3VibGU8L3RkPjx0ZCBjbGFzcz0iYzkiPmRvdWJsZTwvdGQ+CiAgIDwvdHI+CiAgPC90YWJsZT4KIDwvYm9keT4KPC9odG1sPg==",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogPGhlYWQ+CiAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAod2lkdGgpIC0gZ3Jvb3ZlL3NvbGlkPC90aXRsZT4KICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9IkxhY2hsYW4gSHVudCIgaHJlZj0iaHR0cDovL2xhY2h5LmlkLmF1L2Fib3V0L2NvbnRhY3QiPgogIDxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+CiAgIHRhYmxlIHsgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsgfQogICB0ZCB7ICBib3JkZXI6IDVweCBzb2xpZCBsaW1lOyBoZWlnaHQ6IDNlbTsgfQogICAuYzUgeyBib3JkZXItd2lkdGg6IDEwcHg7IGJvcmRlci1zdHlsZTogZ3Jvb3ZlOyB9CiAgIC5jMiB7IGJvcmRlci1ib3R0b20tY29sb3I6IHJlZDsgfQogICAuYzYgeyBib3JkZXItbGVmdC1jb2xvcjogcmVkOyB9CiAgIC5jOCB7IGJvcmRlci10b3AtY29sb3I6IHJlZDsgfQogICAuYzQgeyBib3JkZXItcmlnaHQtY29sb3I6IHJlZDsgfQogIDwvc3R5bGU+CiAgPGxpbmsgdGl0bGU9IjE3LjYuMi4xIEJvcmRlciBjb25mbGljdCByZXNvbHV0aW9uIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCNib3JkZXItY29uZmxpY3QtcmVzb2x1dGlvbiIgcmVsPSJoZWxwIj4KIDwvaGVhZD4KIDxib2R5PgogIDxwPlRoZXJlIHNob3VsZCBiZSBubyByZWQgYm9yZGVycyBvbiB0aGUgdGFibGUgYmVsb3c8L3A+CiAgPHRhYmxlPgogICA8dHI+CiAgICA8dGQgY2xhc3M9ImMxIj5zb2xpZDwvdGQ+PHRkIGNsYXNzPSJjMiI+c29saWQ8L3RkPjx0ZCBjbGFzcz0iYzMiPnNvbGlkPC90ZD4KICAgPC90cj4KICAgPHRyPgogICAgPHRkIGNsYXNzPSJjNCI+c29saWQ8L3RkPjx0ZCBjbGFzcz0iYzUiPmdyb292ZTwvdGQ+PHRkIGNsYXNzPSJjNiI+c29saWQ8L3RkPgogICA8L3RyPgogICA8dHI+CiAgICA8dGQgY2xhc3M9ImM3Ij5zb2xpZDwvdGQ+PHRkIGNsYXNzPSJjOCI+c29saWQ8L3RkPjx0ZCBjbGFzcz0iYzkiPnNvbGlkPC90ZD4KICAgPC90cj4KICA8L3RhYmxlPgogPC9ib2R5Pgo8L2h0bWw+",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogPGhlYWQ+CiAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAod2lkdGgpIC0gZ3Jvb3ZlL2Rhc2hlZDwvdGl0bGU+CiAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJMYWNobGFuIEh1bnQiIGhyZWY9Imh0dHA6Ly9sYWNoeS5pZC5hdS9hYm91dC9jb250YWN0Ij4KICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgogICB0YWJsZSB7IGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7IH0KICAgdGQgeyAgYm9yZGVyOiA1cHggZGFzaGVkIGxpbWU7IGhlaWdodDogM2VtOyB9CiAgIC5jNSB7IGJvcmRlci13aWR0aDogMTBweDsgYm9yZGVyLXN0eWxlOiBncm9vdmU7IH0KICAgLmMyIHsgYm9yZGVyLWJvdHRvbS1jb2xvcjogcmVkOyB9CiAgIC5jNiB7IGJvcmRlci1sZWZ0LWNvbG9yOiByZWQ7IH0KICAgLmM4IHsgYm9yZGVyLXRvcC1jb2xvcjogcmVkOyB9CiAgIC5jNCB7IGJvcmRlci1yaWdodC1jb2xvcjogcmVkOyB9CiAgPC9zdHlsZT4KICA8bGluayB0aXRsZT0iMTcuNi4yLjEgQm9yZGVyIGNvbmZsaWN0IHJlc29sdXRpb24iIGhyZWY9Imh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL3RhYmxlcy5odG1sI2JvcmRlci1jb25mbGljdC1yZXNvbHV0aW9uIiByZWw9ImhlbHAiPgogPC9oZWFkPgogPGJvZHk+CiAgPHA+VGhlcmUgc2hvdWxkIGJlIG5vIHJlZCBib3JkZXJzIG9uIHRoZSB0YWJsZSBiZWxvdzwvcD4KICA8dGFibGU+CiAgIDx0cj4KICAgIDx0ZCBjbGFzcz0iYzEiPmRhc2hlZDwvdGQ+PHRkIGNsYXNzPSJjMiI+ZGFzaGVkPC90ZD48dGQgY2xhc3M9ImMzIj5kYXNoZWQ8L3RkPgogICA8L3RyPgogICA8dHI+CiAgICA8dGQgY2xhc3M9ImM0Ij5kYXNoZWQ8L3RkPjx0ZCBjbGFzcz0iYzUiPmdyb292ZTwvdGQ+PHRkIGNsYXNzPSJjNiI+ZGFzaGVkPC90ZD4KICAgPC90cj4KICAgPHRyPgogICAgPHRkIGNsYXNzPSJjNyI+ZGFzaGVkPC90ZD48dGQgY2xhc3M9ImM4Ij5kYXNoZWQ8L3RkPjx0ZCBjbGFzcz0iYzkiPmRhc2hlZDwvdGQ+CiAgIDwvdHI+CiAgPC90YWJsZT4KIDwvYm9keT4KPC9odG1sPg==",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogPGhlYWQ+CiAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAod2lkdGgpIC0gZ3Jvb3ZlL2RvdHRlZDwvdGl0bGU+CiAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJMYWNobGFuIEh1bnQiIGhyZWY9Imh0dHA6Ly9sYWNoeS5pZC5hdS9hYm91dC9jb250YWN0Ij4KICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgogICB0YWJsZSB7IGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7IH0KICAgdGQgeyAgYm9yZGVyOiA1cHggZG90dGVkIGxpbWU7IGhlaWdodDogM2VtOyB9CiAgIC5jNSB7IGJvcmRlci13aWR0aDogMTBweDsgYm9yZGVyLXN0eWxlOiBncm9vdmU7IH0KICAgLmMyIHsgYm9yZGVyLWJvdHRvbS1jb2xvcjogcmVkOyB9CiAgIC5jNiB7IGJvcmRlci1sZWZ0LWNvbG9yOiByZWQ7IH0KICAgLmM4IHsgYm9yZGVyLXRvcC1jb2xvcjogcmVkOyB9CiAgIC5jNCB7IGJvcmRlci1yaWdodC1jb2xvcjogcmVkOyB9CiAgPC9zdHlsZT4KICA8bGluayB0aXRsZT0iMTcuNi4yLjEgQm9yZGVyIGNvbmZsaWN0IHJlc29sdXRpb24iIGhyZWY9Imh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL3RhYmxlcy5odG1sI2JvcmRlci1jb25mbGljdC1yZXNvbHV0aW9uIiByZWw9ImhlbHAiPgogPC9oZWFkPgogPGJvZHk+CiAgPHA+VGhlcmUgc2hvdWxkIGJlIG5vIHJlZCBib3JkZXJzIG9uIHRoZSB0YWJsZSBiZWxvdzwvcD4KICA8dGFibGU+CiAgIDx0cj4KICAgIDx0ZCBjbGFzcz0iYzEiPmRvdHRlZDwvdGQ+PHRkIGNsYXNzPSJjMiI+ZG90dGVkPC90ZD48dGQgY2xhc3M9ImMzIj5kb3R0ZWQ8L3RkPgogICA8L3RyPgogICA8dHI+CiAgICA8dGQgY2xhc3M9ImM0Ij5kb3R0ZWQ8L3RkPjx0ZCBjbGFzcz0iYzUiPmdyb292ZTwvdGQ+PHRkIGNsYXNzPSJjNiI+ZG90dGVkPC90ZD4KICAgPC90cj4KICAgPHRyPgogICAgPHRkIGNsYXNzPSJjNyI+ZG90dGVkPC90ZD48dGQgY2xhc3M9ImM4Ij5kb3R0ZWQ8L3RkPjx0ZCBjbGFzcz0iYzkiPmRvdHRlZDwvdGQ+CiAgIDwvdHI+CiAgPC90YWJsZT4KIDwvYm9keT4KPC9odG1sPg==",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogPGhlYWQ+CiAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAod2lkdGgpIC0gZ3Jvb3ZlL3JpZGdlPC90aXRsZT4KICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9IkxhY2hsYW4gSHVudCIgaHJlZj0iaHR0cDovL2xhY2h5LmlkLmF1L2Fib3V0L2NvbnRhY3QiPgogIDxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+CiAgIHRhYmxlIHsgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsgfQogICB0ZCB7ICBib3JkZXI6IDVweCByaWRnZSBsaW1lOyBoZWlnaHQ6IDNlbTsgfQogICAuYzUgeyBib3JkZXItd2lkdGg6IDEwcHg7IGJvcmRlci1zdHlsZTogZ3Jvb3ZlOyB9CiAgIC5jMiB7IGJvcmRlci1ib3R0b20tY29sb3I6IHJlZDsgfQogICAuYzYgeyBib3JkZXItbGVmdC1jb2xvcjogcmVkOyB9CiAgIC5jOCB7IGJvcmRlci10b3AtY29sb3I6IHJlZDsgfQogICAuYzQgeyBib3JkZXItcmlnaHQtY29sb3I6IHJlZDsgfQogIDwvc3R5bGU+CiAgPGxpbmsgdGl0bGU9IjE3LjYuMi4xIEJvcmRlciBjb25mbGljdCByZXNvbHV0aW9uIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCNib3JkZXItY29uZmxpY3QtcmVzb2x1dGlvbiIgcmVsPSJoZWxwIj4KIDwvaGVhZD4KIDxib2R5PgogIDxwPlRoZXJlIHNob3VsZCBiZSBubyByZWQgYm9yZGVycyBvbiB0aGUgdGFibGUgYmVsb3c8L3A+CiAgPHRhYmxlPgogICA8dHI+CiAgICA8dGQgY2xhc3M9ImMxIj5yaWRnZTwvdGQ+PHRkIGNsYXNzPSJjMiI+cmlkZ2U8L3RkPjx0ZCBjbGFzcz0iYzMiPnJpZGdlPC90ZD4KICAgPC90cj4KICAgPHRyPgogICAgPHRkIGNsYXNzPSJjNCI+cmlkZ2U8L3RkPjx0ZCBjbGFzcz0iYzUiPmdyb292ZTwvdGQ+PHRkIGNsYXNzPSJjNiI+cmlkZ2U8L3RkPgogICA8L3RyPgogICA8dHI+CiAgICA8dGQgY2xhc3M9ImM3Ij5yaWRnZTwvdGQ+PHRkIGNsYXNzPSJjOCI+cmlkZ2U8L3RkPjx0ZCBjbGFzcz0iYzkiPnJpZGdlPC90ZD4KICAgPC90cj4KICA8L3RhYmxlPgogPC9ib2R5Pgo8L2h0bWw+",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogPGhlYWQ+CiAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAod2lkdGgpIC0gZ3Jvb3ZlL291dHNldDwvdGl0bGU+CiAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJMYWNobGFuIEh1bnQiIGhyZWY9Imh0dHA6Ly9sYWNoeS5pZC5hdS9hYm91dC9jb250YWN0Ij4KICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgogICB0YWJsZSB7IGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7IH0KICAgdGQgeyAgYm9yZGVyOiA1cHggb3V0c2V0IGxpbWU7IGhlaWdodDogM2VtOyB9CiAgIC5jNSB7IGJvcmRlci13aWR0aDogMTBweDsgYm9yZGVyLXN0eWxlOiBncm9vdmU7IH0KICAgLmMyIHsgYm9yZGVyLWJvdHRvbS1jb2xvcjogcmVkOyB9CiAgIC5jNiB7IGJvcmRlci1sZWZ0LWNvbG9yOiByZWQ7IH0KICAgLmM4IHsgYm9yZGVyLXRvcC1jb2xvcjogcmVkOyB9CiAgIC5jNCB7IGJvcmRlci1yaWdodC1jb2xvcjogcmVkOyB9CiAgPC9zdHlsZT4KICA8bGluayB0aXRsZT0iMTcuNi4yLjEgQm9yZGVyIGNvbmZsaWN0IHJlc29sdXRpb24iIGhyZWY9Imh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL3RhYmxlcy5odG1sI2JvcmRlci1jb25mbGljdC1yZXNvbHV0aW9uIiByZWw9ImhlbHAiPgogPC9oZWFkPgogPGJvZHk+CiAgPHA+VGhlcmUgc2hvdWxkIGJlIG5vIHJlZCBib3JkZXJzIG9uIHRoZSB0YWJsZSBiZWxvdzwvcD4KICA8dGFibGU+CiAgIDx0cj4KICAgIDx0ZCBjbGFzcz0iYzEiPm91dHNldDwvdGQ+PHRkIGNsYXNzPSJjMiI+b3V0c2V0PC90ZD48dGQgY2xhc3M9ImMzIj5vdXRzZXQ8L3RkPgogICA8L3RyPgogICA8dHI+CiAgICA8dGQgY2xhc3M9ImM0Ij5vdXRzZXQ8L3RkPjx0ZCBjbGFzcz0iYzUiPmdyb292ZTwvdGQ+PHRkIGNsYXNzPSJjNiI+b3V0c2V0PC90ZD4KICAgPC90cj4KICAgPHRyPgogICAgPHRkIGNsYXNzPSJjNyI+b3V0c2V0PC90ZD48dGQgY2xhc3M9ImM4Ij5vdXRzZXQ8L3RkPjx0ZCBjbGFzcz0iYzkiPm91dHNldDwvdGQ+CiAgIDwvdHI+CiAgPC90YWJsZT4KIDwvYm9keT4KPC9odG1sPg==",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogPGhlYWQ+CiAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAod2lkdGgpIC0gZ3Jvb3ZlL2dyb292ZTwvdGl0bGU+CiAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJMYWNobGFuIEh1bnQiIGhyZWY9Imh0dHA6Ly9sYWNoeS5pZC5hdS9hYm91dC9jb250YWN0Ij4KICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgogICB0YWJsZSB7IGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7IH0KICAgdGQgeyAgYm9yZGVyOiA1cHggZ3Jvb3ZlIGxpbWU7IGhlaWdodDogM2VtOyB9CiAgIC5jNSB7IGJvcmRlci13aWR0aDogMTBweDsgfQogICAuYzIgeyBib3JkZXItYm90dG9tLWNvbG9yOiByZWQ7IH0KICAgLmM2IHsgYm9yZGVyLWxlZnQtY29sb3I6IHJlZDsgfQogICAuYzggeyBib3JkZXItdG9wLWNvbG9yOiByZWQ7IH0KICAgLmM0IHsgYm9yZGVyLXJpZ2h0LWNvbG9yOiByZWQ7IH0KICA8L3N0eWxlPgogIDxsaW5rIHRpdGxlPSIxNy42LjIuMSBCb3JkZXIgY29uZmxpY3QgcmVzb2x1dGlvbiIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjYm9yZGVyLWNvbmZsaWN0LXJlc29sdXRpb24iIHJlbD0iaGVscCI+CiA8L2hlYWQ+CiA8Ym9keT4KICA8cD5UaGVyZSBzaG91bGQgYmUgbm8gcmVkIGJvcmRlcnMgb24gdGhlIHRhYmxlIGJlbG93PC9wPgogIDx0YWJsZT4KICAgPHRyPgogICAgPHRkIGNsYXNzPSJjMSI+Z3Jvb3ZlPC90ZD48dGQgY2xhc3M9ImMyIj5ncm9vdmU8L3RkPjx0ZCBjbGFzcz0iYzMiPmdyb292ZTwvdGQ+CiAgIDwvdHI+CiAgIDx0cj4KICAgIDx0ZCBjbGFzcz0iYzQiPmdyb292ZTwvdGQ+PHRkIGNsYXNzPSJjNSI+Z3Jvb3ZlPC90ZD48dGQgY2xhc3M9ImM2Ij5ncm9vdmU8L3RkPgogICA8L3RyPgogICA8dHI+CiAgICA8dGQgY2xhc3M9ImM3Ij5ncm9vdmU8L3RkPjx0ZCBjbGFzcz0iYzgiPmdyb292ZTwvdGQ+PHRkIGNsYXNzPSJjOSI+Z3Jvb3ZlPC90ZD4KICAgPC90cj4KICA8L3RhYmxlPgogPC9ib2R5Pgo8L2h0bWw+",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogPGhlYWQ+CiAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAod2lkdGgpIC0gZ3Jvb3ZlL2luc2V0PC90aXRsZT4KICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9IkxhY2hsYW4gSHVudCIgaHJlZj0iaHR0cDovL2xhY2h5LmlkLmF1L2Fib3V0L2NvbnRhY3QiPgogIDxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+CiAgIHRhYmxlIHsgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsgfQogICB0ZCB7ICBib3JkZXI6IDVweCBpbnNldCBsaW1lOyBoZWlnaHQ6IDNlbTsgfQogICAuYzUgeyBib3JkZXItd2lkdGg6IDEwcHg7IGJvcmRlci1zdHlsZTogZ3Jvb3ZlOyB9CiAgIC5jMiB7IGJvcmRlci1ib3R0b20tY29sb3I6IHJlZDsgfQogICAuYzYgeyBib3JkZXItbGVmdC1jb2xvcjogcmVkOyB9CiAgIC5jOCB7IGJvcmRlci10b3AtY29sb3I6IHJlZDsgfQogICAuYzQgeyBib3JkZXItcmlnaHQtY29sb3I6IHJlZDsgfQogIDwvc3R5bGU+CiAgPGxpbmsgdGl0bGU9IjE3LjYuMi4xIEJvcmRlciBjb25mbGljdCByZXNvbHV0aW9uIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCNib3JkZXItY29uZmxpY3QtcmVzb2x1dGlvbiIgcmVsPSJoZWxwIj4KIDwvaGVhZD4KIDxib2R5PgogIDxwPlRoZXJlIHNob3VsZCBiZSBubyByZWQgYm9yZGVycyBvbiB0aGUgdGFibGUgYmVsb3c8L3A+CiAgPHRhYmxlPgogICA8dHI+CiAgICA8dGQgY2xhc3M9ImMxIj5pbnNldDwvdGQ+PHRkIGNsYXNzPSJjMiI+aW5zZXQ8L3RkPjx0ZCBjbGFzcz0iYzMiPmluc2V0PC90ZD4KICAgPC90cj4KICAgPHRyPgogICAgPHRkIGNsYXNzPSJjNCI+aW5zZXQ8L3RkPjx0ZCBjbGFzcz0iYzUiPmdyb292ZTwvdGQ+PHRkIGNsYXNzPSJjNiI+aW5zZXQ8L3RkPgogICA8L3RyPgogICA8dHI+CiAgICA8dGQgY2xhc3M9ImM3Ij5pbnNldDwvdGQ+PHRkIGNsYXNzPSJjOCI+aW5zZXQ8L3RkPjx0ZCBjbGFzcz0iYzkiPmluc2V0PC90ZD4KICAgPC90cj4KICA8L3RhYmxlPgogPC9ib2R5Pgo8L2h0bWw+",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogPGhlYWQ+CiAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAod2lkdGgpIC0gZ3Jvb3ZlL25vbmU8L3RpdGxlPgogIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iTGFjaGxhbiBIdW50IiBocmVmPSJodHRwOi8vbGFjaHkuaWQuYXUvYWJvdXQvY29udGFjdCI+CiAgPHN0eWxlIHR5cGU9InRleHQvY3NzIj4KICAgdGFibGUgeyBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOyB9CiAgIHRkIHsgIGJvcmRlcjogNXB4IG5vbmUgcmVkOyBoZWlnaHQ6IDNlbTsgfQogICAuYzUgeyBib3JkZXI6IDEwcHggZ3Jvb3ZlIGxpbWU7IH0KICA8L3N0eWxlPgogIDxsaW5rIHRpdGxlPSIxNy42LjIuMSBCb3JkZXIgY29uZmxpY3QgcmVzb2x1dGlvbiIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjYm9yZGVyLWNvbmZsaWN0LXJlc29sdXRpb24iIHJlbD0iaGVscCI+CiA8L2hlYWQ+CiA8Ym9keT4KICA8cD5UaGVyZSBzaG91bGQgYmUgbm8gcmVkIGJvcmRlcnMgb24gdGhlIHRhYmxlIGJlbG93PC9wPgogIDx0YWJsZT4KICAgPHRyPgogICAgPHRkIGNsYXNzPSJjMSI+bm9uZTwvdGQ+PHRkIGNsYXNzPSJjMiI+bm9uZTwvdGQ+PHRkIGNsYXNzPSJjMyI+bm9uZTwvdGQ+CiAgIDwvdHI+CiAgIDx0cj4KICAgIDx0ZCBjbGFzcz0iYzQiPm5vbmU8L3RkPjx0ZCBjbGFzcz0iYzUiPmdyb292ZTwvdGQ+PHRkIGNsYXNzPSJjNiI+bm9uZTwvdGQ+CiAgIDwvdHI+CiAgIDx0cj4KICAgIDx0ZCBjbGFzcz0iYzciPm5vbmU8L3RkPjx0ZCBjbGFzcz0iYzgiPm5vbmU8L3RkPjx0ZCBjbGFzcz0iYzkiPm5vbmU8L3RkPgogICA8L3RyPgogIDwvdGFibGU+CiA8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogPGhlYWQ+CiAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAod2lkdGgpIC0gaW5zZXQvaGlkZGVuPC90aXRsZT4KICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9IkxhY2hsYW4gSHVudCIgaHJlZj0iaHR0cDovL2xhY2h5LmlkLmF1L2Fib3V0L2NvbnRhY3QiPgogIDxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+CiAgIHRhYmxlIHsgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsgfQogICB0ZCB7ICBib3JkZXI6IDVweCBoaWRkZW4gcmVkOyBoZWlnaHQ6IDNlbTsgfQogICAuYzUgeyBib3JkZXItd2lkdGg6IDEwcHg7IGJvcmRlci1zdHlsZTogaW5zZXQ7IH0KICA8L3N0eWxlPgogIDxsaW5rIHRpdGxlPSIxNy42LjIuMSBCb3JkZXIgY29uZmxpY3QgcmVzb2x1dGlvbiIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjYm9yZGVyLWNvbmZsaWN0LXJlc29sdXRpb24iIHJlbD0iaGVscCI+CiA8L2hlYWQ+CiA8Ym9keT4KICA8cD5UaGVyZSBzaG91bGQgYmUgbm8gcmVkIGJvcmRlcnMgb24gdGhlIHRhYmxlIGJlbG93PC9wPgogIDx0YWJsZT4KICAgPHRyPgogICAgPHRkIGNsYXNzPSJjMSI+aGlkZGVuPC90ZD48dGQgY2xhc3M9ImMyIj5oaWRkZW48L3RkPjx0ZCBjbGFzcz0iYzMiPmhpZGRlbjwvdGQ+CiAgIDwvdHI+CiAgIDx0cj4KICAgIDx0ZCBjbGFzcz0iYzQiPmhpZGRlbjwvdGQ+PHRkIGNsYXNzPSJjNSI+aW5zZXQ8L3RkPjx0ZCBjbGFzcz0iYzYiPmhpZGRlbjwvdGQ+CiAgIDwvdHI+CiAgIDx0cj4KICAgIDx0ZCBjbGFzcz0iYzciPmhpZGRlbjwvdGQ+PHRkIGNsYXNzPSJjOCI+aGlkZGVuPC90ZD48dGQgY2xhc3M9ImM5Ij5oaWRkZW48L3RkPgogICA8L3RyPgogIDwvdGFibGU+CiA8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogPGhlYWQ+CiAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAod2lkdGgpIC0gaW5zZXQvZG91YmxlPC90aXRsZT4KICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9IkxhY2hsYW4gSHVudCIgaHJlZj0iaHR0cDovL2xhY2h5LmlkLmF1L2Fib3V0L2NvbnRhY3QiPgogIDxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+CiAgIHRhYmxlIHsgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsgfQogICB0ZCB7ICBib3JkZXI6IDVweCBkb3VibGUgbGltZTsgaGVpZ2h0OiAzZW07IH0KICAgLmM1IHsgYm9yZGVyLXdpZHRoOiAxMHB4OyBib3JkZXItc3R5bGU6IGluc2V0OyB9CiAgIC5jMiB7IGJvcmRlci1ib3R0b20tY29sb3I6IHJlZDsgfQogICAuYzYgeyBib3JkZXItbGVmdC1jb2xvcjogcmVkOyB9CiAgIC5jOCB7IGJvcmRlci10b3AtY29sb3I6IHJlZDsgfQogICAuYzQgeyBib3JkZXItcmlnaHQtY29sb3I6IHJlZDsgfQogIDwvc3R5bGU+CiAgPGxpbmsgdGl0bGU9IjE3LjYuMi4xIEJvcmRlciBjb25mbGljdCByZXNvbHV0aW9uIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCNib3JkZXItY29uZmxpY3QtcmVzb2x1dGlvbiIgcmVsPSJoZWxwIj4KIDwvaGVhZD4KIDxib2R5PgogIDxwPlRoZXJlIHNob3VsZCBiZSBubyByZWQgYm9yZGVycyBvbiB0aGUgdGFibGUgYmVsb3c8L3A+CiAgPHRhYmxlPgogICA8dHI+CiAgICA8dGQgY2xhc3M9ImMxIj5kb3VibGU8L3RkPjx0ZCBjbGFzcz0iYzIiPmRvdWJsZTwvdGQ+PHRkIGNsYXNzPSJjMyI+ZG91YmxlPC90ZD4KICAgPC90cj4KICAgPHRyPgogICAgPHRkIGNsYXNzPSJjNCI+ZG91YmxlPC90ZD48dGQgY2xhc3M9ImM1Ij5pbnNldDwvdGQ+PHRkIGNsYXNzPSJjNiI+ZG91YmxlPC90ZD4KICAgPC90cj4KICAgPHRyPgogICAgPHRkIGNsYXNzPSJjNyI+ZG91YmxlPC90ZD48dGQgY2xhc3M9ImM4Ij5kb3VibGU8L3RkPjx0ZCBjbGFzcz0iYzkiPmRvdWJsZTwvdGQ+CiAgIDwvdHI+CiAgPC90YWJsZT4KIDwvYm9keT4KPC9odG1sPg==",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogPGhlYWQ+CiAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAod2lkdGgpIC0gaW5zZXQvc29saWQ8L3RpdGxlPgogIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iTGFjaGxhbiBIdW50IiBocmVmPSJodHRwOi8vbGFjaHkuaWQuYXUvYWJvdXQvY29udGFjdCI+CiAgPHN0eWxlIHR5cGU9InRleHQvY3NzIj4KICAgdGFibGUgeyBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOyB9CiAgIHRkIHsgIGJvcmRlcjogNXB4IHNvbGlkIGxpbWU7IGhlaWdodDogM2VtOyB9CiAgIC5jNSB7IGJvcmRlci13aWR0aDogMTBweDsgYm9yZGVyLXN0eWxlOiBpbnNldDsgfQogICAuYzIgeyBib3JkZXItYm90dG9tLWNvbG9yOiByZWQ7IH0KICAgLmM2IHsgYm9yZGVyLWxlZnQtY29sb3I6IHJlZDsgfQogICAuYzggeyBib3JkZXItdG9wLWNvbG9yOiByZWQ7IH0KICAgLmM0IHsgYm9yZGVyLXJpZ2h0LWNvbG9yOiByZWQ7IH0KICA8L3N0eWxlPgogIDxsaW5rIHRpdGxlPSIxNy42LjIuMSBCb3JkZXIgY29uZmxpY3QgcmVzb2x1dGlvbiIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjYm9yZGVyLWNvbmZsaWN0LXJlc29sdXRpb24iIHJlbD0iaGVscCI+CiA8L2hlYWQ+CiA8Ym9keT4KICA8cD5UaGVyZSBzaG91bGQgYmUgbm8gcmVkIGJvcmRlcnMgb24gdGhlIHRhYmxlIGJlbG93PC9wPgogIDx0YWJsZT4KICAgPHRyPgogICAgPHRkIGNsYXNzPSJjMSI+c29saWQ8L3RkPjx0ZCBjbGFzcz0iYzIiPnNvbGlkPC90ZD48dGQgY2xhc3M9ImMzIj5zb2xpZDwvdGQ+CiAgIDwvdHI+CiAgIDx0cj4KICAgIDx0ZCBjbGFzcz0iYzQiPnNvbGlkPC90ZD48dGQgY2xhc3M9ImM1Ij5pbnNldDwvdGQ+PHRkIGNsYXNzPSJjNiI+c29saWQ8L3RkPgogICA8L3RyPgogICA8dHI+CiAgICA8dGQgY2xhc3M9ImM3Ij5zb2xpZDwvdGQ+PHRkIGNsYXNzPSJjOCI+c29saWQ8L3RkPjx0ZCBjbGFzcz0iYzkiPnNvbGlkPC90ZD4KICAgPC90cj4KICA8L3RhYmxlPgogPC9ib2R5Pgo8L2h0bWw+",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogPGhlYWQ+CiAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAod2lkdGgpIC0gaW5zZXQvZGFzaGVkPC90aXRsZT4KICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9IkxhY2hsYW4gSHVudCIgaHJlZj0iaHR0cDovL2xhY2h5LmlkLmF1L2Fib3V0L2NvbnRhY3QiPgogIDxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+CiAgIHRhYmxlIHsgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsgfQogICB0ZCB7ICBib3JkZXI6IDVweCBkYXNoZWQgbGltZTsgaGVpZ2h0OiAzZW07IH0KICAgLmM1IHsgYm9yZGVyLXdpZHRoOiAxMHB4OyBib3JkZXItc3R5bGU6IGluc2V0OyB9CiAgIC5jMiB7IGJvcmRlci1ib3R0b20tY29sb3I6IHJlZDsgfQogICAuYzYgeyBib3JkZXItbGVmdC1jb2xvcjogcmVkOyB9CiAgIC5jOCB7IGJvcmRlci10b3AtY29sb3I6IHJlZDsgfQogICAuYzQgeyBib3JkZXItcmlnaHQtY29sb3I6IHJlZDsgfQogIDwvc3R5bGU+CiAgPGxpbmsgdGl0bGU9IjE3LjYuMi4xIEJvcmRlciBjb25mbGljdCByZXNvbHV0aW9uIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCNib3JkZXItY29uZmxpY3QtcmVzb2x1dGlvbiIgcmVsPSJoZWxwIj4KIDwvaGVhZD4KIDxib2R5PgogIDxwPlRoZXJlIHNob3VsZCBiZSBubyByZWQgYm9yZGVycyBvbiB0aGUgdGFibGUgYmVsb3c8L3A+CiAgPHRhYmxlPgogICA8dHI+CiAgICA8dGQgY2xhc3M9ImMxIj5kYXNoZWQ8L3RkPjx0ZCBjbGFzcz0iYzIiPmRhc2hlZDwvdGQ+PHRkIGNsYXNzPSJjMyI+ZGFzaGVkPC90ZD4KICAgPC90cj4KICAgPHRyPgogICAgPHRkIGNsYXNzPSJjNCI+ZGFzaGVkPC90ZD48dGQgY2xhc3M9ImM1Ij5pbnNldDwvdGQ+PHRkIGNsYXNzPSJjNiI+ZGFzaGVkPC90ZD4KICAgPC90cj4KICAgPHRyPgogICAgPHRkIGNsYXNzPSJjNyI+ZGFzaGVkPC90ZD48dGQgY2xhc3M9ImM4Ij5kYXNoZWQ8L3RkPjx0ZCBjbGFzcz0iYzkiPmRhc2hlZDwvdGQ+CiAgIDwvdHI+CiAgPC90YWJsZT4KIDwvYm9keT4KPC9odG1sPg==",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogPGhlYWQ+CiAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAod2lkdGgpIC0gaW5zZXQvZG90dGVkPC90aXRsZT4KICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9IkxhY2hsYW4gSHVudCIgaHJlZj0iaHR0cDovL2xhY2h5LmlkLmF1L2Fib3V0L2NvbnRhY3QiPgogIDxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+CiAgIHRhYmxlIHsgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsgfQogICB0ZCB7ICBib3JkZXI6IDVweCBkb3R0ZWQgbGltZTsgaGVpZ2h0OiAzZW07IH0KICAgLmM1IHsgYm9yZGVyLXdpZHRoOiAxMHB4OyBib3JkZXItc3R5bGU6IGluc2V0OyB9CiAgIC5jMiB7IGJvcmRlci1ib3R0b20tY29sb3I6IHJlZDsgfQogICAuYzYgeyBib3JkZXItbGVmdC1jb2xvcjogcmVkOyB9CiAgIC5jOCB7IGJvcmRlci10b3AtY29sb3I6IHJlZDsgfQogICAuYzQgeyBib3JkZXItcmlnaHQtY29sb3I6IHJlZDsgfQogIDwvc3R5bGU+CiAgPGxpbmsgdGl0bGU9IjE3LjYuMi4xIEJvcmRlciBjb25mbGljdCByZXNvbHV0aW9uIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCNib3JkZXItY29uZmxpY3QtcmVzb2x1dGlvbiIgcmVsPSJoZWxwIj4KIDwvaGVhZD4KIDxib2R5PgogIDxwPlRoZXJlIHNob3VsZCBiZSBubyByZWQgYm9yZGVycyBvbiB0aGUgdGFibGUgYmVsb3c8L3A+CiAgPHRhYmxlPgogICA8dHI+CiAgICA8dGQgY2xhc3M9ImMxIj5kb3R0ZWQ8L3RkPjx0ZCBjbGFzcz0iYzIiPmRvdHRlZDwvdGQ+PHRkIGNsYXNzPSJjMyI+ZG90dGVkPC90ZD4KICAgPC90cj4KICAgPHRyPgogICAgPHRkIGNsYXNzPSJjNCI+ZG90dGVkPC90ZD48dGQgY2xhc3M9ImM1Ij5pbnNldDwvdGQ+PHRkIGNsYXNzPSJjNiI+ZG90dGVkPC90ZD4KICAgPC90cj4KICAgPHRyPgogICAgPHRkIGNsYXNzPSJjNyI+ZG90dGVkPC90ZD48dGQgY2xhc3M9ImM4Ij5kb3R0ZWQ8L3RkPjx0ZCBjbGFzcz0iYzkiPmRvdHRlZDwvdGQ+CiAgIDwvdHI+CiAgPC90YWJsZT4KIDwvYm9keT4KPC9odG1sPg==",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogPGhlYWQ+CiAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAod2lkdGgpIC0gaW5zZXQvcmlkZ2U8L3RpdGxlPgogIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iTGFjaGxhbiBIdW50IiBocmVmPSJodHRwOi8vbGFjaHkuaWQuYXUvYWJvdXQvY29udGFjdCI+CiAgPHN0eWxlIHR5cGU9InRleHQvY3NzIj4KICAgdGFibGUgeyBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOyB9CiAgIHRkIHsgIGJvcmRlcjogNXB4IHJpZGdlIGxpbWU7IGhlaWdodDogM2VtOyB9CiAgIC5jNSB7IGJvcmRlci13aWR0aDogMTBweDsgYm9yZGVyLXN0eWxlOiBpbnNldDsgfQogICAuYzIgeyBib3JkZXItYm90dG9tLWNvbG9yOiByZWQ7IH0KICAgLmM2IHsgYm9yZGVyLWxlZnQtY29sb3I6IHJlZDsgfQogICAuYzggeyBib3JkZXItdG9wLWNvbG9yOiByZWQ7IH0KICAgLmM0IHsgYm9yZGVyLXJpZ2h0LWNvbG9yOiByZWQ7IH0KICA8L3N0eWxlPgogIDxsaW5rIHRpdGxlPSIxNy42LjIuMSBCb3JkZXIgY29uZmxpY3QgcmVzb2x1dGlvbiIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjYm9yZGVyLWNvbmZsaWN0LXJlc29sdXRpb24iIHJlbD0iaGVscCI+CiA8L2hlYWQ+CiA8Ym9keT4KICA8cD5UaGVyZSBzaG91bGQgYmUgbm8gcmVkIGJvcmRlcnMgb24gdGhlIHRhYmxlIGJlbG93PC9wPgogIDx0YWJsZT4KICAgPHRyPgogICAgPHRkIGNsYXNzPSJjMSI+cmlkZ2U8L3RkPjx0ZCBjbGFzcz0iYzIiPnJpZGdlPC90ZD48dGQgY2xhc3M9ImMzIj5yaWRnZTwvdGQ+CiAgIDwvdHI+CiAgIDx0cj4KICAgIDx0ZCBjbGFzcz0iYzQiPnJpZGdlPC90ZD48dGQgY2xhc3M9ImM1Ij5pbnNldDwvdGQ+PHRkIGNsYXNzPSJjNiI+cmlkZ2U8L3RkPgogICA8L3RyPgogICA8dHI+CiAgICA8dGQgY2xhc3M9ImM3Ij5yaWRnZTwvdGQ+PHRkIGNsYXNzPSJjOCI+cmlkZ2U8L3RkPjx0ZCBjbGFzcz0iYzkiPnJpZGdlPC90ZD4KICAgPC90cj4KICA8L3RhYmxlPgogPC9ib2R5Pgo8L2h0bWw+",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogPGhlYWQ+CiAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAod2lkdGgpIC0gaW5zZXQvb3V0c2V0PC90aXRsZT4KICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9IkxhY2hsYW4gSHVudCIgaHJlZj0iaHR0cDovL2xhY2h5LmlkLmF1L2Fib3V0L2NvbnRhY3QiPgogIDxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+CiAgIHRhYmxlIHsgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsgfQogICB0ZCB7ICBib3JkZXI6IDVweCBvdXRzZXQgbGltZTsgaGVpZ2h0OiAzZW07IH0KICAgLmM1IHsgYm9yZGVyLXdpZHRoOiAxMHB4OyBib3JkZXItc3R5bGU6IGluc2V0OyB9CiAgIC5jMiB7IGJvcmRlci1ib3R0b20tY29sb3I6IHJlZDsgfQogICAuYzYgeyBib3JkZXItbGVmdC1jb2xvcjogcmVkOyB9CiAgIC5jOCB7IGJvcmRlci10b3AtY29sb3I6IHJlZDsgfQogICAuYzQgeyBib3JkZXItcmlnaHQtY29sb3I6IHJlZDsgfQogIDwvc3R5bGU+CiAgPGxpbmsgdGl0bGU9IjE3LjYuMi4xIEJvcmRlciBjb25mbGljdCByZXNvbHV0aW9uIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCNib3JkZXItY29uZmxpY3QtcmVzb2x1dGlvbiIgcmVsPSJoZWxwIj4KIDwvaGVhZD4KIDxib2R5PgogIDxwPlRoZXJlIHNob3VsZCBiZSBubyByZWQgYm9yZGVycyBvbiB0aGUgdGFibGUgYmVsb3c8L3A+CiAgPHRhYmxlPgogICA8dHI+CiAgICA8dGQgY2xhc3M9ImMxIj5vdXRzZXQ8L3RkPjx0ZCBjbGFzcz0iYzIiPm91dHNldDwvdGQ+PHRkIGNsYXNzPSJjMyI+b3V0c2V0PC90ZD4KICAgPC90cj4KICAgPHRyPgogICAgPHRkIGNsYXNzPSJjNCI+b3V0c2V0PC90ZD48dGQgY2xhc3M9ImM1Ij5pbnNldDwvdGQ+PHRkIGNsYXNzPSJjNiI+b3V0c2V0PC90ZD4KICAgPC90cj4KICAgPHRyPgogICAgPHRkIGNsYXNzPSJjNyI+b3V0c2V0PC90ZD48dGQgY2xhc3M9ImM4Ij5vdXRzZXQ8L3RkPjx0ZCBjbGFzcz0iYzkiPm91dHNldDwvdGQ+CiAgIDwvdHI+CiAgPC90YWJsZT4KIDwvYm9keT4KPC9odG1sPg==",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogPGhlYWQ+CiAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAod2lkdGgpIC0gaW5zZXQvZ3Jvb3ZlPC90aXRsZT4KICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9IkxhY2hsYW4gSHVudCIgaHJlZj0iaHR0cDovL2xhY2h5LmlkLmF1L2Fib3V0L2NvbnRhY3QiPgogIDxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+CiAgIHRhYmxlIHsgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsgfQogICB0ZCB7ICBib3JkZXI6IDVweCBncm9vdmUgbGltZTsgaGVpZ2h0OiAzZW07IH0KICAgLmM1IHsgYm9yZGVyLXdpZHRoOiAxMHB4OyBib3JkZXItc3R5bGU6IGluc2V0OyB9CiAgIC5jMiB7IGJvcmRlci1ib3R0b20tY29sb3I6IHJlZDsgfQogICAuYzYgeyBib3JkZXItbGVmdC1jb2xvcjogcmVkOyB9CiAgIC5jOCB7IGJvcmRlci10b3AtY29sb3I6IHJlZDsgfQogICAuYzQgeyBib3JkZXItcmlnaHQtY29sb3I6IHJlZDsgfQogIDwvc3R5bGU+CiAgPGxpbmsgdGl0bGU9IjE3LjYuMi4xIEJvcmRlciBjb25mbGljdCByZXNvbHV0aW9uIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCNib3JkZXItY29uZmxpY3QtcmVzb2x1dGlvbiIgcmVsPSJoZWxwIj4KIDwvaGVhZD4KIDxib2R5PgogIDxwPlRoZXJlIHNob3VsZCBiZSBubyByZWQgYm9yZGVycyBvbiB0aGUgdGFibGUgYmVsb3c8L3A+CiAgPHRhYmxlPgogICA8dHI+CiAgICA8dGQgY2xhc3M9ImMxIj5ncm9vdmU8L3RkPjx0ZCBjbGFzcz0iYzIiPmdyb292ZTwvdGQ+PHRkIGNsYXNzPSJjMyI+Z3Jvb3ZlPC90ZD4KICAgPC90cj4KICAgPHRyPgogICAgPHRkIGNsYXNzPSJjNCI+Z3Jvb3ZlPC90ZD48dGQgY2xhc3M9ImM1Ij5pbnNldDwvdGQ+PHRkIGNsYXNzPSJjNiI+Z3Jvb3ZlPC90ZD4KICAgPC90cj4KICAgPHRyPgogICAgPHRkIGNsYXNzPSJjNyI+Z3Jvb3ZlPC90ZD48dGQgY2xhc3M9ImM4Ij5ncm9vdmU8L3RkPjx0ZCBjbGFzcz0iYzkiPmdyb292ZTwvdGQ+CiAgIDwvdHI+CiAgPC90YWJsZT4KIDwvYm9keT4KPC9odG1sPg==",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogPGhlYWQ+CiAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAod2lkdGgpIC0gaW5zZXQvaW5zZXQ8L3RpdGxlPgogIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iTGFjaGxhbiBIdW50IiBocmVmPSJodHRwOi8vbGFjaHkuaWQuYXUvYWJvdXQvY29udGFjdCI+CiAgPHN0eWxlIHR5cGU9InRleHQvY3NzIj4KICAgdGFibGUgeyBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOyB9CiAgIHRkIHsgIGJvcmRlcjogNXB4IGluc2V0IGxpbWU7IGhlaWdodDogM2VtOyB9CiAgIC5jNSB7IGJvcmRlci13aWR0aDogMTBweDsgfQogICAuYzIgeyBib3JkZXItYm90dG9tLWNvbG9yOiByZWQ7IH0KICAgLmM2IHsgYm9yZGVyLWxlZnQtY29sb3I6IHJlZDsgfQogICAuYzggeyBib3JkZXItdG9wLWNvbG9yOiByZWQ7IH0KICAgLmM0IHsgYm9yZGVyLXJpZ2h0LWNvbG9yOiByZWQ7IH0KICA8L3N0eWxlPgogIDxsaW5rIHRpdGxlPSIxNy42LjIuMSBCb3JkZXIgY29uZmxpY3QgcmVzb2x1dGlvbiIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjYm9yZGVyLWNvbmZsaWN0LXJlc29sdXRpb24iIHJlbD0iaGVscCI+CiA8L2hlYWQ+CiA8Ym9keT4KICA8cD5UaGVyZSBzaG91bGQgYmUgbm8gcmVkIGJvcmRlcnMgb24gdGhlIHRhYmxlIGJlbG93PC9wPgogIDx0YWJsZT4KICAgPHRyPgogICAgPHRkIGNsYXNzPSJjMSI+aW5zZXQ8L3RkPjx0ZCBjbGFzcz0iYzIiPmluc2V0PC90ZD48dGQgY2xhc3M9ImMzIj5pbnNldDwvdGQ+CiAgIDwvdHI+CiAgIDx0cj4KICAgIDx0ZCBjbGFzcz0iYzQiPmluc2V0PC90ZD48dGQgY2xhc3M9ImM1Ij5pbnNldDwvdGQ+PHRkIGNsYXNzPSJjNiI+aW5zZXQ8L3RkPgogICA8L3RyPgogICA8dHI+CiAgICA8dGQgY2xhc3M9ImM3Ij5pbnNldDwvdGQ+PHRkIGNsYXNzPSJjOCI+aW5zZXQ8L3RkPjx0ZCBjbGFzcz0iYzkiPmluc2V0PC90ZD4KICAgPC90cj4KICA8L3RhYmxlPgogPC9ib2R5Pgo8L2h0bWw+",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogPGhlYWQ+CiAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAod2lkdGgpIC0gaW5zZXQvbm9uZTwvdGl0bGU+CiAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJMYWNobGFuIEh1bnQiIGhyZWY9Imh0dHA6Ly9sYWNoeS5pZC5hdS9hYm91dC9jb250YWN0Ij4KICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgogICB0YWJsZSB7IGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7IH0KICAgdGQgeyAgYm9yZGVyOiA1cHggbm9uZSByZWQ7IGhlaWdodDogM2VtOyB9CiAgIC5jNSB7IGJvcmRlcjogMTBweCBpbnNldCBsaW1lOyB9CiAgPC9zdHlsZT4KICA8bGluayB0aXRsZT0iMTcuNi4yLjEgQm9yZGVyIGNvbmZsaWN0IHJlc29sdXRpb24iIGhyZWY9Imh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL3RhYmxlcy5odG1sI2JvcmRlci1jb25mbGljdC1yZXNvbHV0aW9uIiByZWw9ImhlbHAiPgogPC9oZWFkPgogPGJvZHk+CiAgPHA+VGhlcmUgc2hvdWxkIGJlIG5vIHJlZCBib3JkZXJzIG9uIHRoZSB0YWJsZSBiZWxvdzwvcD4KICA8dGFibGU+CiAgIDx0cj4KICAgIDx0ZCBjbGFzcz0iYzEiPm5vbmU8L3RkPjx0ZCBjbGFzcz0iYzIiPm5vbmU8L3RkPjx0ZCBjbGFzcz0iYzMiPm5vbmU8L3RkPgogICA8L3RyPgogICA8dHI+CiAgICA8dGQgY2xhc3M9ImM0Ij5ub25lPC90ZD48dGQgY2xhc3M9ImM1Ij5pbnNldDwvdGQ+PHRkIGNsYXNzPSJjNiI+bm9uZTwvdGQ+CiAgIDwvdHI+CiAgIDx0cj4KICAgIDx0ZCBjbGFzcz0iYzciPm5vbmU8L3RkPjx0ZCBjbGFzcz0iYzgiPm5vbmU8L3RkPjx0ZCBjbGFzcz0iYzkiPm5vbmU8L3RkPgogICA8L3RyPgogIDwvdGFibGU+CiA8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogPGhlYWQ+CiAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAod2lkdGgpIC0gbm9uZS9oaWRkZW48L3RpdGxlPgogIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iTGFjaGxhbiBIdW50IiBocmVmPSJodHRwOi8vbGFjaHkuaWQuYXUvYWJvdXQvY29udGFjdCI+CiAgPHN0eWxlIHR5cGU9InRleHQvY3NzIj4KICAgdGFibGUgeyBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOyB9CiAgIHRkIHsgIGJvcmRlcjogNXB4IGhpZGRlbiByZWQ7IGhlaWdodDogM2VtOyB9CiAgIC5jNSB7IGJvcmRlci13aWR0aDogMTBweDsgYm9yZGVyLXN0eWxlOiBub25lOyB9CiAgPC9zdHlsZT4KICA8bGluayB0aXRsZT0iMTcuNi4yLjEgQm9yZGVyIGNvbmZsaWN0IHJlc29sdXRpb24iIGhyZWY9Imh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL3RhYmxlcy5odG1sI2JvcmRlci1jb25mbGljdC1yZXNvbHV0aW9uIiByZWw9ImhlbHAiPgogPC9oZWFkPgogPGJvZHk+CiAgPHA+VGhlcmUgc2hvdWxkIGJlIG5vIHJlZCBib3JkZXJzIG9uIHRoZSB0YWJsZSBiZWxvdzwvcD4KICA8dGFibGU+CiAgIDx0cj4KICAgIDx0ZCBjbGFzcz0iYzEiPmhpZGRlbjwvdGQ+PHRkIGNsYXNzPSJjMiI+aGlkZGVuPC90ZD48dGQgY2xhc3M9ImMzIj5oaWRkZW48L3RkPgogICA8L3RyPgogICA8dHI+CiAgICA8dGQgY2xhc3M9ImM0Ij5oaWRkZW48L3RkPjx0ZCBjbGFzcz0iYzUiPm5vbmU8L3RkPjx0ZCBjbGFzcz0iYzYiPmhpZGRlbjwvdGQ+CiAgIDwvdHI+CiAgIDx0cj4KICAgIDx0ZCBjbGFzcz0iYzciPmhpZGRlbjwvdGQ+PHRkIGNsYXNzPSJjOCI+aGlkZGVuPC90ZD48dGQgY2xhc3M9ImM5Ij5oaWRkZW48L3RkPgogICA8L3RyPgogIDwvdGFibGU+CiA8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogPGhlYWQ+CiAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAod2lkdGgpIC0gbm9uZS9kb3VibGU8L3RpdGxlPgogIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iTGFjaGxhbiBIdW50IiBocmVmPSJodHRwOi8vbGFjaHkuaWQuYXUvYWJvdXQvY29udGFjdCI+CiAgPHN0eWxlIHR5cGU9InRleHQvY3NzIj4KICAgdGFibGUgeyBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOyB9CiAgIHRkIHsgIGJvcmRlcjogNXB4IGRvdWJsZSBsaW1lOyBoZWlnaHQ6IDNlbTsgfQogICAuYzUgeyBib3JkZXI6IDEwcHggbm9uZSByZWQ7IH0KICA8L3N0eWxlPgogIDxsaW5rIHRpdGxlPSIxNy42LjIuMSBCb3JkZXIgY29uZmxpY3QgcmVzb2x1dGlvbiIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjYm9yZGVyLWNvbmZsaWN0LXJlc29sdXRpb24iIHJlbD0iaGVscCI+CiA8L2hlYWQ+CiA8Ym9keT4KICA8cD5UaGVyZSBzaG91bGQgYmUgbm8gcmVkIGJvcmRlcnMgb24gdGhlIHRhYmxlIGJlbG93PC9wPgogIDx0YWJsZT4KICAgPHRyPgogICAgPHRkIGNsYXNzPSJjMSI+ZG91YmxlPC90ZD48dGQgY2xhc3M9ImMyIj5kb3VibGU8L3RkPjx0ZCBjbGFzcz0iYzMiPmRvdWJsZTwvdGQ+CiAgIDwvdHI+CiAgIDx0cj4KICAgIDx0ZCBjbGFzcz0iYzQiPmRvdWJsZTwvdGQ+PHRkIGNsYXNzPSJjNSI+bm9uZTwvdGQ+PHRkIGNsYXNzPSJjNiI+ZG91YmxlPC90ZD4KICAgPC90cj4KICAgPHRyPgogICAgPHRkIGNsYXNzPSJjNyI+ZG91YmxlPC90ZD48dGQgY2xhc3M9ImM4Ij5kb3VibGU8L3RkPjx0ZCBjbGFzcz0iYzkiPmRvdWJsZTwvdGQ+CiAgIDwvdHI+CiAgPC90YWJsZT4KIDwvYm9keT4KPC9odG1sPg==",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogPGhlYWQ+CiAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAod2lkdGgpIC0gbm9uZS9zb2xpZDwvdGl0bGU+CiAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJMYWNobGFuIEh1bnQiIGhyZWY9Imh0dHA6Ly9sYWNoeS5pZC5hdS9hYm91dC9jb250YWN0Ij4KICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgogICB0YWJsZSB7IGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7IH0KICAgdGQgeyAgYm9yZGVyOiA1cHggc29saWQgbGltZTsgaGVpZ2h0OiAzZW07IH0KICAgLmM1IHsgYm9yZGVyOiAxMHB4IG5vbmUgcmVkOyB9CiAgPC9zdHlsZT4KICA8bGluayB0aXRsZT0iMTcuNi4yLjEgQm9yZGVyIGNvbmZsaWN0IHJlc29sdXRpb24iIGhyZWY9Imh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL3RhYmxlcy5odG1sI2JvcmRlci1jb25mbGljdC1yZXNvbHV0aW9uIiByZWw9ImhlbHAiPgogPC9oZWFkPgogPGJvZHk+CiAgPHA+VGhlcmUgc2hvdWxkIGJlIG5vIHJlZCBib3JkZXJzIG9uIHRoZSB0YWJsZSBiZWxvdzwvcD4KICA8dGFibGU+CiAgIDx0cj4KICAgIDx0ZCBjbGFzcz0iYzEiPnNvbGlkPC90ZD48dGQgY2xhc3M9ImMyIj5zb2xpZDwvdGQ+PHRkIGNsYXNzPSJjMyI+c29saWQ8L3RkPgogICA8L3RyPgogICA8dHI+CiAgICA8dGQgY2xhc3M9ImM0Ij5zb2xpZDwvdGQ+PHRkIGNsYXNzPSJjNSI+bm9uZTwvdGQ+PHRkIGNsYXNzPSJjNiI+c29saWQ8L3RkPgogICA8L3RyPgogICA8dHI+CiAgICA8dGQgY2xhc3M9ImM3Ij5zb2xpZDwvdGQ+PHRkIGNsYXNzPSJjOCI+c29saWQ8L3RkPjx0ZCBjbGFzcz0iYzkiPnNvbGlkPC90ZD4KICAgPC90cj4KICA8L3RhYmxlPgogPC9ib2R5Pgo8L2h0bWw+",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogPGhlYWQ+CiAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAod2lkdGgpIC0gbm9uZS9kYXNoZWQ8L3RpdGxlPgogIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iTGFjaGxhbiBIdW50IiBocmVmPSJodHRwOi8vbGFjaHkuaWQuYXUvYWJvdXQvY29udGFjdCI+CiAgPHN0eWxlIHR5cGU9InRleHQvY3NzIj4KICAgdGFibGUgeyBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOyB9CiAgIHRkIHsgIGJvcmRlcjogNXB4IGRhc2hlZCBsaW1lOyBoZWlnaHQ6IDNlbTsgfQogICAuYzUgeyBib3JkZXI6IDEwcHggbm9uZSByZWQ7IH0KICA8L3N0eWxlPgogIDxsaW5rIHRpdGxlPSIxNy42LjIuMSBCb3JkZXIgY29uZmxpY3QgcmVzb2x1dGlvbiIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjYm9yZGVyLWNvbmZsaWN0LXJlc29sdXRpb24iIHJlbD0iaGVscCI+CiA8L2hlYWQ+CiA8Ym9keT4KICA8cD5UaGVyZSBzaG91bGQgYmUgbm8gcmVkIGJvcmRlcnMgb24gdGhlIHRhYmxlIGJlbG93PC9wPgogIDx0YWJsZT4KICAgPHRyPgogICAgPHRkIGNsYXNzPSJjMSI+ZGFzaGVkPC90ZD48dGQgY2xhc3M9ImMyIj5kYXNoZWQ8L3RkPjx0ZCBjbGFzcz0iYzMiPmRhc2hlZDwvdGQ+CiAgIDwvdHI+CiAgIDx0cj4KICAgIDx0ZCBjbGFzcz0iYzQiPmRhc2hlZDwvdGQ+PHRkIGNsYXNzPSJjNSI+bm9uZTwvdGQ+PHRkIGNsYXNzPSJjNiI+ZGFzaGVkPC90ZD4KICAgPC90cj4KICAgPHRyPgogICAgPHRkIGNsYXNzPSJjNyI+ZGFzaGVkPC90ZD48dGQgY2xhc3M9ImM4Ij5kYXNoZWQ8L3RkPjx0ZCBjbGFzcz0iYzkiPmRhc2hlZDwvdGQ+CiAgIDwvdHI+CiAgPC90YWJsZT4KIDwvYm9keT4KPC9odG1sPg==",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogPGhlYWQ+CiAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAod2lkdGgpIC0gbm9uZS9kb3R0ZWQ8L3RpdGxlPgogIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iTGFjaGxhbiBIdW50IiBocmVmPSJodHRwOi8vbGFjaHkuaWQuYXUvYWJvdXQvY29udGFjdCI+CiAgPHN0eWxlIHR5cGU9InRleHQvY3NzIj4KICAgdGFibGUgeyBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOyB9CiAgIHRkIHsgIGJvcmRlcjogNXB4IGRvdHRlZCBsaW1lOyBoZWlnaHQ6IDNlbTsgfQogICAuYzUgeyBib3JkZXI6IDEwcHggbm9uZSByZWQ7IH0KICA8L3N0eWxlPgogIDxsaW5rIHRpdGxlPSIxNy42LjIuMSBCb3JkZXIgY29uZmxpY3QgcmVzb2x1dGlvbiIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjYm9yZGVyLWNvbmZsaWN0LXJlc29sdXRpb24iIHJlbD0iaGVscCI+CiA8L2hlYWQ+CiA8Ym9keT4KICA8cD5UaGVyZSBzaG91bGQgYmUgbm8gcmVkIGJvcmRlcnMgb24gdGhlIHRhYmxlIGJlbG93PC9wPgogIDx0YWJsZT4KICAgPHRyPgogICAgPHRkIGNsYXNzPSJjMSI+ZG90dGVkPC90ZD48dGQgY2xhc3M9ImMyIj5kb3R0ZWQ8L3RkPjx0ZCBjbGFzcz0iYzMiPmRvdHRlZDwvdGQ+CiAgIDwvdHI+CiAgIDx0cj4KICAgIDx0ZCBjbGFzcz0iYzQiPmRvdHRlZDwvdGQ+PHRkIGNsYXNzPSJjNSI+bm9uZTwvdGQ+PHRkIGNsYXNzPSJjNiI+ZG90dGVkPC90ZD4KICAgPC90cj4KICAgPHRyPgogICAgPHRkIGNsYXNzPSJjNyI+ZG90dGVkPC90ZD48dGQgY2xhc3M9ImM4Ij5kb3R0ZWQ8L3RkPjx0ZCBjbGFzcz0iYzkiPmRvdHRlZDwvdGQ+CiAgIDwvdHI+CiAgPC90YWJsZT4KIDwvYm9keT4KPC9odG1sPg==",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogPGhlYWQ+CiAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAod2lkdGgpIC0gbm9uZS9yaWRnZTwvdGl0bGU+CiAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJMYWNobGFuIEh1bnQiIGhyZWY9Imh0dHA6Ly9sYWNoeS5pZC5hdS9hYm91dC9jb250YWN0Ij4KICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgogICB0YWJsZSB7IGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7IH0KICAgdGQgeyAgYm9yZGVyOiA1cHggcmlkZ2UgbGltZTsgaGVpZ2h0OiAzZW07IH0KICAgLmM1IHsgYm9yZGVyOiAxMHB4IG5vbmUgcmVkOyB9CiAgPC9zdHlsZT4KICA8bGluayB0aXRsZT0iMTcuNi4yLjEgQm9yZGVyIGNvbmZsaWN0IHJlc29sdXRpb24iIGhyZWY9Imh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL3RhYmxlcy5odG1sI2JvcmRlci1jb25mbGljdC1yZXNvbHV0aW9uIiByZWw9ImhlbHAiPgogPC9oZWFkPgogPGJvZHk+CiAgPHA+VGhlcmUgc2hvdWxkIGJlIG5vIHJlZCBib3JkZXJzIG9uIHRoZSB0YWJsZSBiZWxvdzwvcD4KICA8dGFibGU+CiAgIDx0cj4KICAgIDx0ZCBjbGFzcz0iYzEiPnJpZGdlPC90ZD48dGQgY2xhc3M9ImMyIj5yaWRnZTwvdGQ+PHRkIGNsYXNzPSJjMyI+cmlkZ2U8L3RkPgogICA8L3RyPgogICA8dHI+CiAgICA8dGQgY2xhc3M9ImM0Ij5yaWRnZTwvdGQ+PHRkIGNsYXNzPSJjNSI+bm9uZTwvdGQ+PHRkIGNsYXNzPSJjNiI+cmlkZ2U8L3RkPgogICA8L3RyPgogICA8dHI+CiAgICA8dGQgY2xhc3M9ImM3Ij5yaWRnZTwvdGQ+PHRkIGNsYXNzPSJjOCI+cmlkZ2U8L3RkPjx0ZCBjbGFzcz0iYzkiPnJpZGdlPC90ZD4KICAgPC90cj4KICA8L3RhYmxlPgogPC9ib2R5Pgo8L2h0bWw+",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogPGhlYWQ+CiAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAod2lkdGgpIC0gaW5zZXQvb3V0c2V0PC90aXRsZT4KICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9IkxhY2hsYW4gSHVudCIgaHJlZj0iaHR0cDovL2xhY2h5LmlkLmF1L2Fib3V0L2NvbnRhY3QiPgogIDxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+CiAgIHRhYmxlIHsgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsgfQogICB0ZCB7ICBib3JkZXI6IDVweCBvdXRzZXQgbGltZTsgaGVpZ2h0OiAzZW07IH0KICAgLmM1IHsgYm9yZGVyOiAxMHB4IG5vbmUgcmVkOyB9CiAgPC9zdHlsZT4KICA8bGluayB0aXRsZT0iMTcuNi4yLjEgQm9yZGVyIGNvbmZsaWN0IHJlc29sdXRpb24iIGhyZWY9Imh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL3RhYmxlcy5odG1sI2JvcmRlci1jb25mbGljdC1yZXNvbHV0aW9uIiByZWw9ImhlbHAiPgogPC9oZWFkPgogPGJvZHk+CiAgPHA+VGhlcmUgc2hvdWxkIGJlIG5vIHJlZCBib3JkZXJzIG9uIHRoZSB0YWJsZSBiZWxvdzwvcD4KICA8dGFibGU+CiAgIDx0cj4KICAgIDx0ZCBjbGFzcz0iYzEiPm91dHNldDwvdGQ+PHRkIGNsYXNzPSJjMiI+b3V0c2V0PC90ZD48dGQgY2xhc3M9ImMzIj5vdXRzZXQ8L3RkPgogICA8L3RyPgogICA8dHI+CiAgICA8dGQgY2xhc3M9ImM0Ij5vdXRzZXQ8L3RkPjx0ZCBjbGFzcz0iYzUiPm5vbmU8L3RkPjx0ZCBjbGFzcz0iYzYiPm91dHNldDwvdGQ+CiAgIDwvdHI+CiAgIDx0cj4KICAgIDx0ZCBjbGFzcz0iYzciPm91dHNldDwvdGQ+PHRkIGNsYXNzPSJjOCI+b3V0c2V0PC90ZD48dGQgY2xhc3M9ImM5Ij5vdXRzZXQ8L3RkPgogICA8L3RyPgogIDwvdGFibGU+CiA8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogPGhlYWQ+CiAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAod2lkdGgpIC0gbm9uZS9ncm9vdmU8L3RpdGxlPgogIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iTGFjaGxhbiBIdW50IiBocmVmPSJodHRwOi8vbGFjaHkuaWQuYXUvYWJvdXQvY29udGFjdCI+CiAgPHN0eWxlIHR5cGU9InRleHQvY3NzIj4KICAgdGFibGUgeyBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOyB9CiAgIHRkIHsgIGJvcmRlcjogNXB4IGdyb292ZSBsaW1lOyBoZWlnaHQ6IDNlbTsgfQogICAuYzUgeyBib3JkZXI6IDEwcHggbm9uZSByZWQ7IH0KICA8L3N0eWxlPgogIDxsaW5rIHRpdGxlPSIxNy42LjIuMSBCb3JkZXIgY29uZmxpY3QgcmVzb2x1dGlvbiIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjYm9yZGVyLWNvbmZsaWN0LXJlc29sdXRpb24iIHJlbD0iaGVscCI+CiA8L2hlYWQ+CiA8Ym9keT4KICA8cD5UaGVyZSBzaG91bGQgYmUgbm8gcmVkIGJvcmRlcnMgb24gdGhlIHRhYmxlIGJlbG93PC9wPgogIDx0YWJsZT4KICAgPHRyPgogICAgPHRkIGNsYXNzPSJjMSI+Z3Jvb3ZlPC90ZD48dGQgY2xhc3M9ImMyIj5ncm9vdmU8L3RkPjx0ZCBjbGFzcz0iYzMiPmdyb292ZTwvdGQ+CiAgIDwvdHI+CiAgIDx0cj4KICAgIDx0ZCBjbGFzcz0iYzQiPmdyb292ZTwvdGQ+PHRkIGNsYXNzPSJjNSI+bm9uZTwvdGQ+PHRkIGNsYXNzPSJjNiI+Z3Jvb3ZlPC90ZD4KICAgPC90cj4KICAgPHRyPgogICAgPHRkIGNsYXNzPSJjNyI+Z3Jvb3ZlPC90ZD48dGQgY2xhc3M9ImM4Ij5ncm9vdmU8L3RkPjx0ZCBjbGFzcz0iYzkiPmdyb292ZTwvdGQ+CiAgIDwvdHI+CiAgPC90YWJsZT4KIDwvYm9keT4KPC9odG1sPg==",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogPGhlYWQ+CiAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAod2lkdGgpIC0gbm9uZS9pbnNldDwvdGl0bGU+CiAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJMYWNobGFuIEh1bnQiIGhyZWY9Imh0dHA6Ly9sYWNoeS5pZC5hdS9hYm91dC9jb250YWN0Ij4KICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgogICB0YWJsZSB7IGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7IH0KICAgdGQgeyAgYm9yZGVyOiA1cHggaW5zZXQgbGltZTsgaGVpZ2h0OiAzZW07IH0KICAgLmM1IHsgYm9yZGVyOiAxMHB4IG5vbmUgcmVkOyB9CiAgPC9zdHlsZT4KICA8bGluayB0aXRsZT0iMTcuNi4yLjEgQm9yZGVyIGNvbmZsaWN0IHJlc29sdXRpb24iIGhyZWY9Imh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL3RhYmxlcy5odG1sI2JvcmRlci1jb25mbGljdC1yZXNvbHV0aW9uIiByZWw9ImhlbHAiPgogPC9oZWFkPgogPGJvZHk+CiAgPHA+VGhlcmUgc2hvdWxkIGJlIG5vIHJlZCBib3JkZXJzIG9uIHRoZSB0YWJsZSBiZWxvdzwvcD4KICA8dGFibGU+CiAgIDx0cj4KICAgIDx0ZCBjbGFzcz0iYzEiPmluc2V0PC90ZD48dGQgY2xhc3M9ImMyIj5pbnNldDwvdGQ+PHRkIGNsYXNzPSJjMyI+aW5zZXQ8L3RkPgogICA8L3RyPgogICA8dHI+CiAgICA8dGQgY2xhc3M9ImM0Ij5pbnNldDwvdGQ+PHRkIGNsYXNzPSJjNSI+bm9uZTwvdGQ+PHRkIGNsYXNzPSJjNiI+aW5zZXQ8L3RkPgogICA8L3RyPgogICA8dHI+CiAgICA8dGQgY2xhc3M9ImM3Ij5pbnNldDwvdGQ+PHRkIGNsYXNzPSJjOCI+aW5zZXQ8L3RkPjx0ZCBjbGFzcz0iYzkiPmluc2V0PC90ZD4KICAgPC90cj4KICA8L3RhYmxlPgogPC9ib2R5Pgo8L2h0bWw+",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogPGhlYWQ+CiAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAod2lkdGgpIC0gbm9uZS9ub25lPC90aXRsZT4KICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9IkxhY2hsYW4gSHVudCIgaHJlZj0iaHR0cDovL2xhY2h5LmlkLmF1L2Fib3V0L2NvbnRhY3QiPgogIDxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+CiAgIHRhYmxlIHsgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsgfQogICB0ZCB7ICBib3JkZXI6IDVweCBub25lIHJlZDsgaGVpZ2h0OiAzZW07IH0KICAgLmM1IHsgYm9yZGVyLXdpZHRoOiAxMHB4OyB9CiAgPC9zdHlsZT4KICA8bGluayB0aXRsZT0iMTcuNi4yLjEgQm9yZGVyIGNvbmZsaWN0IHJlc29sdXRpb24iIGhyZWY9Imh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL3RhYmxlcy5odG1sI2JvcmRlci1jb25mbGljdC1yZXNvbHV0aW9uIiByZWw9ImhlbHAiPgogPC9oZWFkPgogPGJvZHk+CiAgPHA+VGhlcmUgc2hvdWxkIGJlIG5vIHJlZCBib3JkZXJzIG9uIHRoZSB0YWJsZSBiZWxvdzwvcD4KICA8dGFibGU+CiAgIDx0cj4KICAgIDx0ZCBjbGFzcz0iYzEiPm5vbmU8L3RkPjx0ZCBjbGFzcz0iYzIiPm5vbmU8L3RkPjx0ZCBjbGFzcz0iYzMiPm5vbmU8L3RkPgogICA8L3RyPgogICA8dHI+CiAgICA8dGQgY2xhc3M9ImM0Ij5ub25lPC90ZD48dGQgY2xhc3M9ImM1Ij5ub25lPC90ZD48dGQgY2xhc3M9ImM2Ij5ub25lPC90ZD4KICAgPC90cj4KICAgPHRyPgogICAgPHRkIGNsYXNzPSJjNyI+bm9uZTwvdGQ+PHRkIGNsYXNzPSJjOCI+bm9uZTwvdGQ+PHRkIGNsYXNzPSJjOSI+bm9uZTwvdGQ+CiAgIDwvdHI+CiAgPC90YWJsZT4KIDwvYm9keT4KPC9odG1sPg==",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAoYnkgYm9yZGVyIHdpZHRoKTogJ2Rhc2hlZCcgdnMuICdkYXNoZWQnIC0gYm9yZGVyIHN0eWxlIHdpdGggbGFyZ2VzdCB3aWR0aCBpcyB0aGUgZG9taW5hbnQgYm9yZGVyPC90aXRsZT4KICAgICAgICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9IlczQyIgaHJlZj0iaHR0cDovL3d3dy53M2Mub3JnLyI+CiAgICAgICAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJNaWNyb3NvZnQiIGhyZWY9Imh0dHA6Ly93d3cubWljcm9zb2Z0LmNvbS8iPgogICAgICAgIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjYm9yZGVyLWNvbmZsaWN0LXJlc29sdXRpb24iPgogICAgICAgIDxtZXRhIG5hbWU9ImZsYWdzIiBjb250ZW50PSIiPgogICAgICAgIDxtZXRhIG5hbWU9ImFzc2VydCIgY29udGVudD0iVGhlIHdpZGVzdCBib3JkZXIgaXMgZG9taW5hbnQgd2hlbiB0d28gY2VsbCBib3JkZXJzIGNvbGxhcHNlLiI+CiAgICAgICAgPHN0eWxlIHR5cGU9InRleHQvY3NzIj4KICAgICAgICAgICAgdGFibGUKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsKICAgICAgICAgICAgfQogICAgICAgICAgICB0ZAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXI6IDVweCBkYXNoZWQgYmxhY2s7CiAgICAgICAgICAgICAgICBoZWlnaHQ6IDNlbTsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDMKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyOiAxMHB4IGRhc2hlZCBibGFjazsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDEKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWJvdHRvbS1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsNAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItbGVmdC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsNQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItdG9wLWNvbG9yOiByZWQ7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGwyCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1yaWdodC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgPC9zdHlsZT4KICAgIDwvaGVhZD4KICAgIDxib2R5PgogICAgICAgIDxwPlRlc3QgcGFzc2VzIGlmIHRoZXJlIGlzIG5vIHJlZCB2aXNpYmxlIG9uIHRoZSBwYWdlLjwvcD4KICAgICAgICA8dGFibGU+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD5kYXNoZWQ8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMSI+ZGFzaGVkPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5kYXNoZWQ8L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQgaWQ9ImNlbGwyIj5kYXNoZWQ8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMyI+ZGFzaGVkPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDQiPmRhc2hlZDwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD5kYXNoZWQ8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsNSI+ZGFzaGVkPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5kYXNoZWQ8L3RkPgogICAgICAgICAgIDwvdHI+CiAgICAgICAgPC90YWJsZT4KICAgIDwvYm9keT4KPC9odG1sPg==",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAoYnkgYm9yZGVyIHdpZHRoKTogJ2Rhc2hlZCcgdnMuICdkb3R0ZWQnIC0gYm9yZGVyIHN0eWxlIHdpdGggbGFyZ2VzdCB3aWR0aCBpcyB0aGUgZG9taW5hbnQgYm9yZGVyPC90aXRsZT4KICAgICAgICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9IlczQyIgaHJlZj0iaHR0cDovL3d3dy53M2Mub3JnLyI+CiAgICAgICAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJNaWNyb3NvZnQiIGhyZWY9Imh0dHA6Ly93d3cubWljcm9zb2Z0LmNvbS8iPgogICAgICAgIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjYm9yZGVyLWNvbmZsaWN0LXJlc29sdXRpb24iPgogICAgICAgIDxtZXRhIG5hbWU9ImZsYWdzIiBjb250ZW50PSIiPgogICAgICAgIDxtZXRhIG5hbWU9ImFzc2VydCIgY29udGVudD0iVGhlIHdpZGVzdCBib3JkZXIgaXMgZG9taW5hbnQgd2hlbiB0d28gY2VsbCBib3JkZXJzIGNvbGxhcHNlLiI+CiAgICAgICAgPHN0eWxlIHR5cGU9InRleHQvY3NzIj4KICAgICAgICAgICAgdGFibGUKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsKICAgICAgICAgICAgfQogICAgICAgICAgICB0ZAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXI6IDVweCBkYXNoZWQgYmxhY2s7CiAgICAgICAgICAgICAgICBoZWlnaHQ6IDNlbTsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDMKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyOiAxMHB4IGRvdHRlZCBibGFjazsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDEKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWJvdHRvbS1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsNAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItbGVmdC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsNQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItdG9wLWNvbG9yOiByZWQ7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGwyCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1yaWdodC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgPC9zdHlsZT4KICAgIDwvaGVhZD4KICAgIDxib2R5PgogICAgICAgIDxwPlRlc3QgcGFzc2VzIGlmIHRoZXJlIGlzIG5vIHJlZCB2aXNpYmxlIG9uIHRoZSBwYWdlLjwvcD4KICAgICAgICA8dGFibGU+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD5kYXNoZWQ8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMSI+ZGFzaGVkPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5kYXNoZWQ8L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQgaWQ9ImNlbGwyIj5kYXNoZWQ8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMyI+ZG90dGVkPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDQiPmRhc2hlZDwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD5kYXNoZWQ8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsNSI+ZGFzaGVkPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5kYXNoZWQ8L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgIDwvdGFibGU+CiAgICA8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAoYnkgYm9yZGVyIHdpZHRoKTogJ2Rhc2hlZCcgdnMuICdkb3VibGUnIC0gYm9yZGVyIHN0eWxlIHdpdGggbGFyZ2VzdCB3aWR0aCBpcyB0aGUgZG9taW5hbnQgYm9yZGVyPC90aXRsZT4KICAgICAgICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9IlczQyIgaHJlZj0iaHR0cDovL3d3dy53M2Mub3JnLyI+CiAgICAgICAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJNaWNyb3NvZnQiIGhyZWY9Imh0dHA6Ly93d3cubWljcm9zb2Z0LmNvbS8iPgogICAgICAgIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjYm9yZGVyLWNvbmZsaWN0LXJlc29sdXRpb24iPgogICAgICAgIDxtZXRhIG5hbWU9ImZsYWdzIiBjb250ZW50PSIiPgogICAgICAgIDxtZXRhIG5hbWU9ImFzc2VydCIgY29udGVudD0iVGhlIHdpZGVzdCBib3JkZXIgaXMgZG9taW5hbnQgd2hlbiB0d28gY2VsbCBib3JkZXJzIGNvbGxhcHNlLiI+CiAgICAgICAgPHN0eWxlIHR5cGU9InRleHQvY3NzIj4KICAgICAgICAgICAgdGFibGUKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsKICAgICAgICAgICAgfQogICAgICAgICAgICB0ZAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXI6IDVweCBkYXNoZWQgYmxhY2s7CiAgICAgICAgICAgICAgICBoZWlnaHQ6IDNlbTsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDMKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyOiAxMHB4IGRvdWJsZSBibGFjazsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDEKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWJvdHRvbS1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsNAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItbGVmdC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsNQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItdG9wLWNvbG9yOiByZWQ7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGwyCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1yaWdodC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgPC9zdHlsZT4KICAgIDwvaGVhZD4KICAgIDxib2R5PgogICAgICAgIDxwPlRlc3QgcGFzc2VzIGlmIHRoZXJlIGlzIG5vIHJlZCB2aXNpYmxlIG9uIHRoZSBwYWdlLjwvcD4KICAgICAgICA8dGFibGU+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD5kYXNoZWQ8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMSI+ZGFzaGVkPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5kYXNoZWQ8L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQgaWQ9ImNlbGwyIj5kYXNoZWQ8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMyI+ZG91YmxlPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDQiPmRhc2hlZDwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD5kYXNoZWQ8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsNSI+ZGFzaGVkPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5kYXNoZWQ8L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgIDwvdGFibGU+CiAgICA8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAoYnkgYm9yZGVyIHdpZHRoKTogJ2Rhc2hlZCcgdnMuICdncm9vdmUnIC0gYm9yZGVyIHN0eWxlIHdpdGggbGFyZ2VzdCB3aWR0aCBpcyB0aGUgZG9taW5hbnQgYm9yZGVyPC90aXRsZT4KICAgICAgICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9IlczQyIgaHJlZj0iaHR0cDovL3d3dy53M2Mub3JnLyI+CiAgICAgICAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJNaWNyb3NvZnQiIGhyZWY9Imh0dHA6Ly93d3cubWljcm9zb2Z0LmNvbS8iPgogICAgICAgIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjYm9yZGVyLWNvbmZsaWN0LXJlc29sdXRpb24iPgogICAgICAgIDxtZXRhIG5hbWU9ImZsYWdzIiBjb250ZW50PSIiPgogICAgICAgIDxtZXRhIG5hbWU9ImFzc2VydCIgY29udGVudD0iVGhlIHdpZGVzdCBib3JkZXIgaXMgZG9taW5hbnQgd2hlbiB0d28gY2VsbCBib3JkZXJzIGNvbGxhcHNlLiI+CiAgICAgICAgPHN0eWxlIHR5cGU9InRleHQvY3NzIj4KICAgICAgICAgICAgdGFibGUKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsKICAgICAgICAgICAgfQogICAgICAgICAgICB0ZAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXI6IDVweCBkYXNoZWQgYmxhY2s7CiAgICAgICAgICAgICAgICBoZWlnaHQ6IDNlbTsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDMKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyOiAxMHB4IGdyb292ZSBibGFjazsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDEKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWJvdHRvbS1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsNAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItbGVmdC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsNQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItdG9wLWNvbG9yOiByZWQ7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGwyCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1yaWdodC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgPC9zdHlsZT4KICAgIDwvaGVhZD4KICAgIDxib2R5PgogICAgICAgIDxwPlRlc3QgcGFzc2VzIGlmIHRoZXJlIGlzIG5vIHJlZCB2aXNpYmxlIG9uIHRoZSBwYWdlLjwvcD4KICAgICAgICA8dGFibGU+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD5kYXNoZWQ8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMSI+ZGFzaGVkPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5kYXNoZWQ8L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQgaWQ9ImNlbGwyIj5kYXNoZWQ8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMyI+Z3Jvb3ZlPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDQiPmRhc2hlZDwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD5kYXNoZWQ8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsNSI+ZGFzaGVkPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5kYXNoZWQ8L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgIDwvdGFibGU+CiAgICA8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAoYnkgYm9yZGVyIHdpZHRoKTogJ2Rhc2hlZCcgdnMuICdoaWRkZW4nIC0gYSBib3JkZXIgc3R5bGUgb2YgJ2hpZGRlbicgaXMgYWx3YXlzIHRoZSBkb21pbmFudCBib3JkZXI8L3RpdGxlPgogICAgICAgIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iVzNDIiBocmVmPSJodHRwOi8vd3d3LnczYy5vcmcvIj4KICAgICAgICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9Ik1pY3Jvc29mdCIgaHJlZj0iaHR0cDovL3d3dy5taWNyb3NvZnQuY29tLyI+CiAgICAgICAgPGxpbmsgcmVsPSJoZWxwIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCNib3JkZXItY29uZmxpY3QtcmVzb2x1dGlvbiI+CiAgICAgICAgPG1ldGEgbmFtZT0iZmxhZ3MiIGNvbnRlbnQ9IiI+CiAgICAgICAgPG1ldGEgbmFtZT0iYXNzZXJ0IiBjb250ZW50PSJUaGUgJ2hpZGRlbicgYm9yZGVyIHN0eWxlIHRha2VzIHByZWNlZGVuY2Ugb3ZlciBhbGwgc3R5bGUgYW5kIHdpZHRoIGRlZmluaXRpb25zLiI+CiAgICAgICAgPHN0eWxlIHR5cGU9InRleHQvY3NzIj4KICAgICAgICAgICAgdGFibGUKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsKICAgICAgICAgICAgfQogICAgICAgICAgICB0ZAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXI6IDVweCBkYXNoZWQgYmxhY2s7CiAgICAgICAgICAgICAgICBoZWlnaHQ6IDNlbTsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDMKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyOiAxMHB4IGhpZGRlbiBibGFjazsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDEKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWJvdHRvbS1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsNAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItbGVmdC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsNQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItdG9wLWNvbG9yOiByZWQ7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGwyCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1yaWdodC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgPC9zdHlsZT4KICAgIDwvaGVhZD4KICAgIDxib2R5PgogICAgICAgIDxwPlRlc3QgcGFzc2VzIGlmIHRoZXJlIGlzIG5vIHJlZCB2aXNpYmxlIG9uIHRoZSBwYWdlLjwvcD4KICAgICAgICA8dGFibGU+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD5kYXNoZWQ8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMSI+ZGFzaGVkPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5kYXNoZWQ8L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQgaWQ9ImNlbGwyIj5kYXNoZWQ8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMyI+aGlkZGVuPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDQiPmRhc2hlZDwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD5kYXNoZWQ8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsNSI+ZGFzaGVkPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5kYXNoZWQ8L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgIDwvdGFibGU+CiAgICA8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAoYnkgYm9yZGVyIHdpZHRoKTogJ2Rhc2hlZCcgdnMuICdpbnNldCcgLSBib3JkZXIgc3R5bGUgd2l0aCBsYXJnZXN0IHdpZHRoIGlzIHRoZSBkb21pbmFudCBib3JkZXI8L3RpdGxlPgogICAgICAgIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iVzNDIiBocmVmPSJodHRwOi8vd3d3LnczYy5vcmcvIj4KICAgICAgICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9Ik1pY3Jvc29mdCIgaHJlZj0iaHR0cDovL3d3dy5taWNyb3NvZnQuY29tLyI+CiAgICAgICAgPGxpbmsgcmVsPSJoZWxwIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCNib3JkZXItY29uZmxpY3QtcmVzb2x1dGlvbiI+CiAgICAgICAgPG1ldGEgbmFtZT0iZmxhZ3MiIGNvbnRlbnQ9IiI+CiAgICAgICAgPG1ldGEgbmFtZT0iYXNzZXJ0IiBjb250ZW50PSJUaGUgd2lkZXN0IGJvcmRlciBpcyBkb21pbmFudCB3aGVuIHR3byBjZWxsIGJvcmRlcnMgY29sbGFwc2UuIj4KICAgICAgICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgogICAgICAgICAgICB0YWJsZQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHRkCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlcjogNXB4IGRhc2hlZCBibGFjazsKICAgICAgICAgICAgICAgIGhlaWdodDogM2VtOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsMwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXI6IDEwcHggaW5zZXQgYmxhY2s7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGwxCiAgICAgICAgICAgIHsKICAgICAgICAgICAgYm9yZGVyLWJvdHRvbS1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsNAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItbGVmdC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsNQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItdG9wLWNvbG9yOiByZWQ7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGwyCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1yaWdodC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgPC9zdHlsZT4KICAgIDwvaGVhZD4KICAgIDxib2R5PgogICAgICAgIDxwPlRlc3QgcGFzc2VzIGlmIHRoZXJlIGlzIG5vIHJlZCB2aXNpYmxlIG9uIHRoZSBwYWdlLjwvcD4KICAgICAgICA8dGFibGU+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD5kYXNoZWQ8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMSI+ZGFzaGVkPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5kYXNoZWQ8L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQgaWQ9ImNlbGwyIj5kYXNoZWQ8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMyI+aW5zZXQ8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsNCI+ZGFzaGVkPC90ZD4KICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkPmRhc2hlZDwvdGQ+CiAgICAgICAgICAgICAgICA8dGQgaWQ9ImNlbGw1Ij5kYXNoZWQ8L3RkPgogICAgICAgICAgICAgICAgPHRkPmRhc2hlZDwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgPC90YWJsZT4KICAgIDwvYm9keT4KPC9odG1sPg==",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAoYnkgYm9yZGVyIHdpZHRoKTogJ2Rhc2hlZCcgdnMuICdub25lJyAtIGJvcmRlciBzdHlsZSB3aXRoIGxhcmdlc3Qgd2lkdGggaXMgdGhlIGRvbWluYW50IGJvcmRlcjwvdGl0bGU+CiAgICAgICAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJXM0MiIGhyZWY9Imh0dHA6Ly93d3cudzNjLm9yZy8iPgogICAgICAgIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iTWljcm9zb2Z0IiBocmVmPSJodHRwOi8vd3d3Lm1pY3Jvc29mdC5jb20vIj4KICAgICAgICA8bGluayByZWw9ImhlbHAiIGhyZWY9Imh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL3RhYmxlcy5odG1sI2JvcmRlci1jb25mbGljdC1yZXNvbHV0aW9uIj4KICAgICAgICA8bWV0YSBuYW1lPSJmbGFncyIgY29udGVudD0iIj4KICAgICAgICA8bWV0YSBuYW1lPSJhc3NlcnQiIGNvbnRlbnQ9IlRoZSB3aWRlc3QgYm9yZGVyIGlzIGRvbWluYW50IHdoZW4gdHdvIGNlbGwgYm9yZGVycyBjb2xsYXBzZS4iPgogICAgICAgIDxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+CiAgICAgICAgICAgIHRhYmxlCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgdGQKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyOiA1cHggZGFzaGVkIGJsYWNrOwogICAgICAgICAgICAgICAgaGVpZ2h0OiAzZW07CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGwxCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlcjogMTBweCBub25lIHJlZDsKICAgICAgICAgICAgfQogICAgICAgIDwvc3R5bGU+CiAgICA8L2hlYWQ+CiAgICA8Ym9keT4KICAgICAgICA8cD5UZXN0IHBhc3NlcyBpZiB0aGVyZSBpcyBubyByZWQgdmlzaWJsZSBvbiB0aGUgcGFnZS48L3A+CiAgICAgICAgPHRhYmxlPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQ+ZGFzaGVkPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5kYXNoZWQ8L3RkPgogICAgICAgICAgICAgICAgPHRkPmRhc2hlZDwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD5kYXNoZWQ8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMSI+bm9uZTwvdGQ+CiAgICAgICAgICAgICAgICA8dGQ+ZGFzaGVkPC90ZD4KICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkPmRhc2hlZDwvdGQ+CiAgICAgICAgICAgICAgICA8dGQ+ZGFzaGVkPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5kYXNoZWQ8L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgIDwvdGFibGU+CiAgICA8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAoYnkgYm9yZGVyIHdpZHRoKTogJ2Rhc2hlZCcgdnMuICdvdXRzZXQnIC0gYm9yZGVyIHN0eWxlIHdpdGggbGFyZ2VzdCB3aWR0aCBpcyB0aGUgZG9taW5hbnQgYm9yZGVyPC90aXRsZT4KICAgICAgICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9IlczQyIgaHJlZj0iaHR0cDovL3d3dy53M2Mub3JnLyI+CiAgICAgICAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJNaWNyb3NvZnQiIGhyZWY9Imh0dHA6Ly93d3cubWljcm9zb2Z0LmNvbS8iPgogICAgICAgIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjYm9yZGVyLWNvbmZsaWN0LXJlc29sdXRpb24iPgogICAgICAgIDxtZXRhIG5hbWU9ImZsYWdzIiBjb250ZW50PSIiPgogICAgICAgIDxtZXRhIG5hbWU9ImFzc2VydCIgY29udGVudD0iVGhlIHdpZGVzdCBib3JkZXIgaXMgZG9taW5hbnQgd2hlbiB0d28gY2VsbCBib3JkZXJzIGNvbGxhcHNlLiI+CiAgICAgICAgPHN0eWxlIHR5cGU9InRleHQvY3NzIj4KICAgICAgICAgICAgdGFibGUKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsKICAgICAgICAgICAgfQogICAgICAgICAgICB0ZAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXI6IDVweCBkYXNoZWQgYmxhY2s7CiAgICAgICAgICAgICAgICBoZWlnaHQ6IDNlbTsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDMKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyOiAxMHB4IG91dHNldCBibGFjazsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDEKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWJvdHRvbS1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsNAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItbGVmdC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsNQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItdG9wLWNvbG9yOiByZWQ7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGwyCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1yaWdodC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgPC9zdHlsZT4KICAgIDwvaGVhZD4KICAgIDxib2R5PgogICAgICAgIDxwPlRlc3QgcGFzc2VzIGlmIHRoZXJlIGlzIG5vIHJlZCB2aXNpYmxlIG9uIHRoZSBwYWdlLjwvcD4KICAgICAgICA8dGFibGU+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD5kYXNoZWQ8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMSI+ZGFzaGVkPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5kYXNoZWQ8L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQgaWQ9ImNlbGwyIj5kYXNoZWQ8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMyI+b3V0c2V0PC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDQiPmRhc2hlZDwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD5kYXNoZWQ8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsNSI+ZGFzaGVkPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5kYXNoZWQ8L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgIDwvdGFibGU+CiAgICA8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAoYnkgYm9yZGVyIHdpZHRoKTogJ2Rhc2hlZCcgdnMuICdyaWRnZScgLSBib3JkZXIgc3R5bGUgd2l0aCBsYXJnZXN0IHdpZHRoIGlzIHRoZSBkb21pbmFudCBib3JkZXI8L3RpdGxlPgogICAgICAgIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iVzNDIiBocmVmPSJodHRwOi8vd3d3LnczYy5vcmcvIj4KICAgICAgICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9Ik1pY3Jvc29mdCIgaHJlZj0iaHR0cDovL3d3dy5taWNyb3NvZnQuY29tLyI+CiAgICAgICAgPGxpbmsgcmVsPSJoZWxwIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCNib3JkZXItY29uZmxpY3QtcmVzb2x1dGlvbiI+CiAgICAgICAgPG1ldGEgbmFtZT0iZmxhZ3MiIGNvbnRlbnQ9IiI+CiAgICAgICAgPG1ldGEgbmFtZT0iYXNzZXJ0IiBjb250ZW50PSJUaGUgd2lkZXN0IGJvcmRlciBpcyBkb21pbmFudCB3aGVuIHR3byBjZWxsIGJvcmRlcnMgY29sbGFwc2UuIj4KICAgICAgICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgogICAgICAgICAgICB0YWJsZQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHRkCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlcjogNXB4IGRhc2hlZCBibGFjazsKICAgICAgICAgICAgICAgIGhlaWdodDogM2VtOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsMwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXI6IDEwcHggcmlkZ2UgYmxhY2s7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGwxCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1ib3R0b20tY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDQKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWxlZnQtY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDUKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLXRvcC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsMgogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItcmlnaHQtY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgIDwvc3R5bGU+CiAgICA8L2hlYWQ+CiAgICA8Ym9keT4KICAgICAgICA8cD5UZXN0IHBhc3NlcyBpZiB0aGVyZSBpcyBubyByZWQgdmlzaWJsZSBvbiB0aGUgcGFnZS48L3A+CiAgICAgICAgPHRhYmxlPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQ+ZGFzaGVkPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDEiPmRhc2hlZDwvdGQ+CiAgICAgICAgICAgICAgICA8dGQ+ZGFzaGVkPC90ZD4KICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMiI+ZGFzaGVkPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDMiPnJpZGdlPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDQiPmRhc2hlZDwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD5kYXNoZWQ8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsNSI+ZGFzaGVkPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5kYXNoZWQ8L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgIDwvdGFibGU+CiAgICA8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAoYnkgYm9yZGVyIHdpZHRoKTogJ2Rhc2hlZCcgdnMuICdzb2xpZCcgLSBib3JkZXIgc3R5bGUgd2l0aCBsYXJnZXN0IHdpZHRoIGlzIHRoZSBkb21pbmFudCBib3JkZXI8L3RpdGxlPgogICAgICAgIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iVzNDIiBocmVmPSJodHRwOi8vd3d3LnczYy5vcmcvIj4KICAgICAgICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9Ik1pY3Jvc29mdCIgaHJlZj0iaHR0cDovL3d3dy5taWNyb3NvZnQuY29tLyI+CiAgICAgICAgPGxpbmsgcmVsPSJoZWxwIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCNib3JkZXItY29uZmxpY3QtcmVzb2x1dGlvbiI+CiAgICAgICAgPG1ldGEgbmFtZT0iZmxhZ3MiIGNvbnRlbnQ9IiI+CiAgICAgICAgPG1ldGEgbmFtZT0iYXNzZXJ0IiBjb250ZW50PSJUaGUgd2lkZXN0IGJvcmRlciBpcyBkb21pbmFudCB3aGVuIHR3byBjZWxsIGJvcmRlcnMgY29sbGFwc2UuIj4KICAgICAgICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgogICAgICAgICAgICB0YWJsZQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHRkCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlcjogNXB4IGRhc2hlZCBibGFjazsKICAgICAgICAgICAgICAgIGhlaWdodDogM2VtOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsMwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXI6IDEwcHggc29saWQgYmxhY2s7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGwxCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1ib3R0b20tY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDQKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWxlZnQtY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDUKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLXRvcC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsMgogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItcmlnaHQtY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgIDwvc3R5bGU+CiAgICA8L2hlYWQ+CiAgICA8Ym9keT4KICAgICAgICA8cD5UZXN0IHBhc3NlcyBpZiB0aGVyZSBpcyBubyByZWQgdmlzaWJsZSBvbiB0aGUgcGFnZS48L3A+CiAgICAgICAgPHRhYmxlPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQ+ZGFzaGVkPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDEiPmRhc2hlZDwvdGQ+CiAgICAgICAgICAgICAgICA8dGQ+ZGFzaGVkPC90ZD4KICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMiI+ZGFzaGVkPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDMiPnNvbGlkPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDQiPmRhc2hlZDwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD5kYXNoZWQ8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsNSI+ZGFzaGVkPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5kYXNoZWQ8L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgIDwvdGFibGU+CiAgICA8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAoYnkgYm9yZGVyIHdpZHRoKTogJ2RvdHRlZCcgdnMuICdkYXNoZWQnIC0gYm9yZGVyIHN0eWxlIHdpdGggbGFyZ2VzdCB3aWR0aCBpcyB0aGUgZG9taW5hbnQgYm9yZGVyPC90aXRsZT4KICAgICAgICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9IlczQyIgaHJlZj0iaHR0cDovL3d3dy53M2Mub3JnLyI+CiAgICAgICAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJNaWNyb3NvZnQiIGhyZWY9Imh0dHA6Ly93d3cubWljcm9zb2Z0LmNvbS8iPgogICAgICAgIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjYm9yZGVyLWNvbmZsaWN0LXJlc29sdXRpb24iPgogICAgICAgIDxtZXRhIG5hbWU9ImZsYWdzIiBjb250ZW50PSIiPgogICAgICAgIDxtZXRhIG5hbWU9ImFzc2VydCIgY29udGVudD0iVGhlIHdpZGVzdCBib3JkZXIgaXMgZG9taW5hbnQgd2hlbiB0d28gY2VsbCBib3JkZXJzIGNvbGxhcHNlLiI+CiAgICAgICAgPHN0eWxlIHR5cGU9InRleHQvY3NzIj4KICAgICAgICAgICAgdGFibGUKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsKICAgICAgICAgICAgfQogICAgICAgICAgICB0ZAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXI6IDVweCBkb3R0ZWQgYmxhY2s7CiAgICAgICAgICAgICAgICBoZWlnaHQ6IDNlbTsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDMKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyOiAxMHB4IGRhc2hlZCBibGFjazsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDEKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWJvdHRvbS1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsNAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItbGVmdC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsNQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItdG9wLWNvbG9yOiByZWQ7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGwyCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1yaWdodC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgPC9zdHlsZT4KICAgIDwvaGVhZD4KICAgIDxib2R5PgogICAgICAgIDxwPlRlc3QgcGFzc2VzIGlmIHRoZXJlIGlzIG5vIHJlZCB2aXNpYmxlIG9uIHRoZSBwYWdlLjwvcD4KICAgICAgICA8dGFibGU+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD5kb3R0ZWQ8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMSI+ZG90dGVkPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5kb3R0ZWQ8L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQgaWQ9ImNlbGwyIj5kb3R0ZWQ8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMyI+ZGFzaGVkPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDQiPmRvdHRlZDwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD5kb3R0ZWQ8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsNSI+ZG90dGVkPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5kb3R0ZWQ8L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgIDwvdGFibGU+CiAgICA8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAoYnkgYm9yZGVyIHdpZHRoKTogJ2RvdHRlZCcgdnMuICdkb3R0ZWQnIC0gYm9yZGVyIHN0eWxlIHdpdGggbGFyZ2VzdCB3aWR0aCBpcyB0aGUgZG9taW5hbnQgYm9yZGVyPC90aXRsZT4KICAgICAgICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9IlczQyIgaHJlZj0iaHR0cDovL3d3dy53M2Mub3JnLyI+CiAgICAgICAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJNaWNyb3NvZnQiIGhyZWY9Imh0dHA6Ly93d3cubWljcm9zb2Z0LmNvbS8iPgogICAgICAgIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjYm9yZGVyLWNvbmZsaWN0LXJlc29sdXRpb24iPgogICAgICAgIDxtZXRhIG5hbWU9ImZsYWdzIiBjb250ZW50PSIiPgogICAgICAgIDxtZXRhIG5hbWU9ImFzc2VydCIgY29udGVudD0iVGhlIHdpZGVzdCBib3JkZXIgaXMgZG9taW5hbnQgd2hlbiB0d28gY2VsbCBib3JkZXJzIGNvbGxhcHNlLiI+CiAgICAgICAgPHN0eWxlIHR5cGU9InRleHQvY3NzIj4KICAgICAgICAgICAgdGFibGUKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsKICAgICAgICAgICAgfQogICAgICAgICAgICB0ZAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXI6IDVweCBkb3R0ZWQgYmxhY2s7CiAgICAgICAgICAgICAgICBoZWlnaHQ6IDNlbTsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDMKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyOiAxMHB4IGRvdHRlZCBibGFjazsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDEKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWJvdHRvbS1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsNAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItbGVmdC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsNQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItdG9wLWNvbG9yOiByZWQ7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGwyCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1yaWdodC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgPC9zdHlsZT4KICAgIDwvaGVhZD4KICAgIDxib2R5PgogICAgICAgIDxwPlRlc3QgcGFzc2VzIGlmIHRoZXJlIGlzIG5vIHJlZCB2aXNpYmxlIG9uIHRoZSBwYWdlLjwvcD4KICAgICAgICA8dGFibGU+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD5kb3R0ZWQ8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMSI+ZG90dGVkPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5kb3R0ZWQ8L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQgaWQ9ImNlbGwyIj5kb3R0ZWQ8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMyI+ZG90dGVkPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDQiPmRvdHRlZDwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD5kb3R0ZWQ8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsNSI+ZG90dGVkPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5kb3R0ZWQ8L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgIDwvdGFibGU+CiAgICA8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAoYnkgYm9yZGVyIHdpZHRoKTogJ2RvdHRlZCcgdnMuICdkb3VibGUnIC0gYm9yZGVyIHN0eWxlIHdpdGggbGFyZ2VzdCB3aWR0aCBpcyB0aGUgZG9taW5hbnQgYm9yZGVyPC90aXRsZT4KICAgICAgICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9IlczQyIgaHJlZj0iaHR0cDovL3d3dy53M2Mub3JnLyI+CiAgICAgICAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJNaWNyb3NvZnQiIGhyZWY9Imh0dHA6Ly93d3cubWljcm9zb2Z0LmNvbS8iPgogICAgICAgIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjYm9yZGVyLWNvbmZsaWN0LXJlc29sdXRpb24iPgogICAgICAgIDxtZXRhIG5hbWU9ImZsYWdzIiBjb250ZW50PSIiPgogICAgICAgIDxtZXRhIG5hbWU9ImFzc2VydCIgY29udGVudD0iVGhlIHdpZGVzdCBib3JkZXIgaXMgZG9taW5hbnQgd2hlbiB0d28gY2VsbCBib3JkZXJzIGNvbGxhcHNlLiI+CiAgICAgICAgPHN0eWxlIHR5cGU9InRleHQvY3NzIj4KICAgICAgICAgICAgdGFibGUKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsKICAgICAgICAgICAgfQogICAgICAgICAgICB0ZAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXI6IDVweCBkb3R0ZWQgYmxhY2s7CiAgICAgICAgICAgICAgICBoZWlnaHQ6IDNlbTsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDMKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyOiAxMHB4IGRvdWJsZSBibGFjazsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDEKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWJvdHRvbS1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsNAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItbGVmdC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsNQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItdG9wLWNvbG9yOiByZWQ7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGwyCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1yaWdodC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgPC9zdHlsZT4KICAgIDwvaGVhZD4KICAgIDxib2R5PgogICAgICAgIDxwPlRlc3QgcGFzc2VzIGlmIHRoZXJlIGlzIG5vIHJlZCB2aXNpYmxlIG9uIHRoZSBwYWdlLjwvcD4KICAgICAgICA8dGFibGU+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD5kb3R0ZWQ8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMSI+ZG90dGVkPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5kb3R0ZWQ8L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQgaWQ9ImNlbGwyIj5kb3R0ZWQ8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMyI+ZG91YmxlPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDQiPmRvdHRlZDwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD5kb3R0ZWQ8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsNSI+ZG90dGVkPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5kb3R0ZWQ8L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgIDwvdGFibGU+CiAgICA8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAoYnkgYm9yZGVyIHdpZHRoKTogJ2RvdHRlZCcgdnMuICdncm9vdmUnIC0gYm9yZGVyIHN0eWxlIHdpdGggbGFyZ2VzdCB3aWR0aCBpcyB0aGUgZG9taW5hbnQgYm9yZGVyPC90aXRsZT4KICAgICAgICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9IlczQyIgaHJlZj0iaHR0cDovL3d3dy53M2Mub3JnLyI+CiAgICAgICAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJNaWNyb3NvZnQiIGhyZWY9Imh0dHA6Ly93d3cubWljcm9zb2Z0LmNvbS8iPgogICAgICAgIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjYm9yZGVyLWNvbmZsaWN0LXJlc29sdXRpb24iPgogICAgICAgIDxtZXRhIG5hbWU9ImZsYWdzIiBjb250ZW50PSIiPgogICAgICAgIDxtZXRhIG5hbWU9ImFzc2VydCIgY29udGVudD0iVGhlIHdpZGVzdCBib3JkZXIgaXMgZG9taW5hbnQgd2hlbiB0d28gY2VsbCBib3JkZXJzIGNvbGxhcHNlLiI+CiAgICAgICAgPHN0eWxlIHR5cGU9InRleHQvY3NzIj4KICAgICAgICAgICAgdGFibGUKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsKICAgICAgICAgICAgfQogICAgICAgICAgICB0ZAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXI6IDVweCBkb3R0ZWQgYmxhY2s7CiAgICAgICAgICAgICAgICBoZWlnaHQ6IDNlbTsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDMKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyOiAxMHB4IGdyb292ZSBibGFjazsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDEKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWJvdHRvbS1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsNAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItbGVmdC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsNQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItdG9wLWNvbG9yOiByZWQ7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGwyCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1yaWdodC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgPC9zdHlsZT4KICAgIDwvaGVhZD4KICAgIDxib2R5PgogICAgICAgIDxwPlRlc3QgcGFzc2VzIGlmIHRoZXJlIGlzIG5vIHJlZCB2aXNpYmxlIG9uIHRoZSBwYWdlLjwvcD4KICAgICAgICA8dGFibGU+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD5kb3R0ZWQ8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMSI+ZG90dGVkPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5kb3R0ZWQ8L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQgaWQ9ImNlbGwyIj5kb3R0ZWQ8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMyI+Z3Jvb3ZlPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDQiPmRvdHRlZDwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD5kb3R0ZWQ8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsNSI+ZG90dGVkPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5kb3R0ZWQ8L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgIDwvdGFibGU+CiAgICA8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAoYnkgYm9yZGVyIHdpZHRoKTogJ2RvdHRlZCcgdnMuICdoaWRkZW4nIC0gYSBib3JkZXIgc3R5bGUgb2YgJ2hpZGRlbicgaXMgYWx3YXlzIHRoZSBkb21pbmFudCBib3JkZXI8L3RpdGxlPgogICAgICAgIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iVzNDIiBocmVmPSJodHRwOi8vd3d3LnczYy5vcmcvIj4KICAgICAgICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9Ik1pY3Jvc29mdCIgaHJlZj0iaHR0cDovL3d3dy5taWNyb3NvZnQuY29tLyI+CiAgICAgICAgPGxpbmsgcmVsPSJoZWxwIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCNib3JkZXItY29uZmxpY3QtcmVzb2x1dGlvbiI+CiAgICAgICAgPG1ldGEgbmFtZT0iZmxhZ3MiIGNvbnRlbnQ9IiI+CiAgICAgICAgPG1ldGEgbmFtZT0iYXNzZXJ0IiBjb250ZW50PSJUaGUgJ2hpZGRlbicgYm9yZGVyIHN0eWxlIHRha2VzIHByZWNlZGVuY2Ugb3ZlciBhbGwgc3R5bGUgYW5kIHdpZHRoIGRlZmluaXRpb25zLiI+CiAgICAgICAgPHN0eWxlIHR5cGU9InRleHQvY3NzIj4KICAgICAgICAgICAgdGFibGUKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsKICAgICAgICAgICAgfQogICAgICAgICAgICB0ZAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXI6IDVweCBkb3R0ZWQgYmxhY2s7CiAgICAgICAgICAgICAgICBoZWlnaHQ6IDNlbTsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDMKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyOiAxMHB4IGhpZGRlbiBibGFjazsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDEKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWJvdHRvbS1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsNAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItbGVmdC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsNQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItdG9wLWNvbG9yOiByZWQ7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGwyCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1yaWdodC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgPC9zdHlsZT4KICAgIDwvaGVhZD4KICAgIDxib2R5PgogICAgICAgIDxwPlRlc3QgcGFzc2VzIGlmIHRoZXJlIGlzIG5vIHJlZCB2aXNpYmxlIG9uIHRoZSBwYWdlLjwvcD4KICAgICAgICA8dGFibGU+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD5kb3R0ZWQ8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMSI+ZG90dGVkPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5kb3R0ZWQ8L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQgaWQ9ImNlbGwyIj5kb3R0ZWQ8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMyI+aGlkZGVuPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDQiPmRvdHRlZDwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD5kb3R0ZWQ8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsNSI+ZG90dGVkPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5kb3R0ZWQ8L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgIDwvdGFibGU+CiAgICA8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAoYnkgYm9yZGVyIHdpZHRoKTogJ2RvdHRlZCcgdnMuICdpbnNldCcgLSBib3JkZXIgc3R5bGUgd2l0aCBsYXJnZXN0IHdpZHRoIGlzIHRoZSBkb21pbmFudCBib3JkZXI8L3RpdGxlPgogICAgICAgIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iVzNDIiBocmVmPSJodHRwOi8vd3d3LnczYy5vcmcvIj4KICAgICAgICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9Ik1pY3Jvc29mdCIgaHJlZj0iaHR0cDovL3d3dy5taWNyb3NvZnQuY29tLyI+CiAgICAgICAgPGxpbmsgcmVsPSJoZWxwIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCNib3JkZXItY29uZmxpY3QtcmVzb2x1dGlvbiI+CiAgICAgICAgPG1ldGEgbmFtZT0iZmxhZ3MiIGNvbnRlbnQ9IiI+CiAgICAgICAgPG1ldGEgbmFtZT0iYXNzZXJ0IiBjb250ZW50PSJUaGUgd2lkZXN0IGJvcmRlciBpcyBkb21pbmFudCB3aGVuIHR3byBjZWxsIGJvcmRlcnMgY29sbGFwc2UuIj4KICAgICAgICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgogICAgICAgICAgICB0YWJsZQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHRkCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlcjogNXB4IGRvdHRlZCBibGFjazsKICAgICAgICAgICAgICAgIGhlaWdodDogM2VtOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsMwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXI6IDEwcHggaW5zZXQgYmxhY2s7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGwxCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1ib3R0b20tY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDQKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWxlZnQtY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDUKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLXRvcC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsMgogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItcmlnaHQtY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgIDwvc3R5bGU+CiAgICA8L2hlYWQ+CiAgICA8Ym9keT4KICAgICAgICA8cD5UZXN0IHBhc3NlcyBpZiB0aGVyZSBpcyBubyByZWQgdmlzaWJsZSBvbiB0aGUgcGFnZS48L3A+CiAgICAgICAgPHRhYmxlPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQ+ZG90dGVkPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDEiPmRvdHRlZDwvdGQ+CiAgICAgICAgICAgICAgICA8dGQ+ZG90dGVkPC90ZD4KICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMiI+ZG90dGVkPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDMiPmluc2V0PC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDQiPmRvdHRlZDwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD5kb3R0ZWQ8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsNSI+ZG90dGVkPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5kb3R0ZWQ8L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgIDwvdGFibGU+CiAgICA8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAoYnkgYm9yZGVyIHdpZHRoKTogJ2RvdHRlZCcgdnMuICdub25lJyAtIGJvcmRlciBzdHlsZSB3aXRoIGxhcmdlc3Qgd2lkdGggaXMgdGhlIGRvbWluYW50IGJvcmRlcjwvdGl0bGU+CiAgICAgICAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJXM0MiIGhyZWY9Imh0dHA6Ly93d3cudzNjLm9yZy8iPgogICAgICAgIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iTWljcm9zb2Z0IiBocmVmPSJodHRwOi8vd3d3Lm1pY3Jvc29mdC5jb20vIj4KICAgICAgICA8bGluayByZWw9ImhlbHAiIGhyZWY9Imh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL3RhYmxlcy5odG1sI2JvcmRlci1jb25mbGljdC1yZXNvbHV0aW9uIj4KICAgICAgICA8bWV0YSBuYW1lPSJmbGFncyIgY29udGVudD0iIj4KICAgICAgICA8bWV0YSBuYW1lPSJhc3NlcnQiIGNvbnRlbnQ9IlRoZSB3aWRlc3QgYm9yZGVyIGlzIGRvbWluYW50IHdoZW4gdHdvIGNlbGwgYm9yZGVycyBjb2xsYXBzZS4iPgogICAgICAgIDxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+CiAgICAgICAgICAgIHRhYmxlCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgdGQKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyOiA1cHggZG90dGVkIGJsYWNrOwogICAgICAgICAgICAgICAgaGVpZ2h0OiAzZW07CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGwxCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlcjogMTBweCBub25lIHJlZDsKICAgICAgICAgICAgfQogICAgICAgIDwvc3R5bGU+CiAgICA8L2hlYWQ+CiAgICA8Ym9keT4KICAgICAgICA8cD5UZXN0IHBhc3NlcyBpZiB0aGVyZSBpcyBubyByZWQgdmlzaWJsZSBvbiB0aGUgcGFnZS48L3A+CiAgICAgICAgPHRhYmxlPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQ+ZG90dGVkPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5kb3R0ZWQ8L3RkPgogICAgICAgICAgICAgICAgPHRkPmRvdHRlZDwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD5kb3R0ZWQ8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMSI+bm9uZTwvdGQ+CiAgICAgICAgICAgICAgICA8dGQ+ZG90dGVkPC90ZD4KICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkPmRvdHRlZDwvdGQ+CiAgICAgICAgICAgICAgICA8dGQ+ZG90dGVkPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5kb3R0ZWQ8L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgIDwvdGFibGU+CiAgICA8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAoYnkgYm9yZGVyIHdpZHRoKTogJ2RvdHRlZCcgdnMuICdvdXRzZXQnIC0gYm9yZGVyIHN0eWxlIHdpdGggbGFyZ2VzdCB3aWR0aCBpcyB0aGUgZG9taW5hbnQgYm9yZGVyPC90aXRsZT4KICAgICAgICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9IlczQyIgaHJlZj0iaHR0cDovL3d3dy53M2Mub3JnLyI+CiAgICAgICAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJNaWNyb3NvZnQiIGhyZWY9Imh0dHA6Ly93d3cubWljcm9zb2Z0LmNvbS8iPgogICAgICAgIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjYm9yZGVyLWNvbmZsaWN0LXJlc29sdXRpb24iPgogICAgICAgIDxtZXRhIG5hbWU9ImZsYWdzIiBjb250ZW50PSIiPgogICAgICAgIDxtZXRhIG5hbWU9ImFzc2VydCIgY29udGVudD0iVGhlIHdpZGVzdCBib3JkZXIgaXMgZG9taW5hbnQgd2hlbiB0d28gY2VsbCBib3JkZXJzIGNvbGxhcHNlLiI+CiAgICAgICAgPHN0eWxlIHR5cGU9InRleHQvY3NzIj4KICAgICAgICAgICAgdGFibGUKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsKICAgICAgICAgICAgfQogICAgICAgICAgICB0ZAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXI6IDVweCBkb3R0ZWQgYmxhY2s7CiAgICAgICAgICAgICAgICBoZWlnaHQ6IDNlbTsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDMKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyOiAxMHB4IG91dHNldCBibGFjazsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDEKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWJvdHRvbS1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsNAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItbGVmdC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsNQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItdG9wLWNvbG9yOiByZWQ7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGwyCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1yaWdodC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgPC9zdHlsZT4KICAgIDwvaGVhZD4KICAgIDxib2R5PgogICAgICAgIDxwPlRlc3QgcGFzc2VzIGlmIHRoZXJlIGlzIG5vIHJlZCB2aXNpYmxlIG9uIHRoZSBwYWdlLjwvcD4KICAgICAgICA8dGFibGU+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD5kb3R0ZWQ8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMSI+ZG90dGVkPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5kb3R0ZWQ8L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQgaWQ9ImNlbGwyIj5kb3R0ZWQ8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMyI+b3V0c2V0PC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDQiPmRvdHRlZDwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD5kb3R0ZWQ8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsNSI+ZG90dGVkPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5kb3R0ZWQ8L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgIDwvdGFibGU+CiAgICA8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAoYnkgYm9yZGVyIHdpZHRoKTogJ2RvdHRlZCcgdnMuICdyaWRnZScgLSBib3JkZXIgc3R5bGUgd2l0aCBsYXJnZXN0IHdpZHRoIGlzIHRoZSBkb21pbmFudCBib3JkZXI8L3RpdGxlPgogICAgICAgIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iVzNDIiBocmVmPSJodHRwOi8vd3d3LnczYy5vcmcvIj4KICAgICAgICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9Ik1pY3Jvc29mdCIgaHJlZj0iaHR0cDovL3d3dy5taWNyb3NvZnQuY29tLyI+CiAgICAgICAgPGxpbmsgcmVsPSJoZWxwIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCNib3JkZXItY29uZmxpY3QtcmVzb2x1dGlvbiI+CiAgICAgICAgPG1ldGEgbmFtZT0iZmxhZ3MiIGNvbnRlbnQ9IiI+CiAgICAgICAgPG1ldGEgbmFtZT0iYXNzZXJ0IiBjb250ZW50PSJUaGUgd2lkZXN0IGJvcmRlciBpcyBkb21pbmFudCB3aGVuIHR3byBjZWxsIGJvcmRlcnMgY29sbGFwc2UuIj4KICAgICAgICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgogICAgICAgICAgICB0YWJsZQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHRkCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlcjogNXB4IGRvdHRlZCBibGFjazsKICAgICAgICAgICAgICAgIGhlaWdodDogM2VtOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsMwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXI6IDEwcHggcmlkZ2UgYmxhY2s7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGwxCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1ib3R0b20tY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDQKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWxlZnQtY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDUKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLXRvcC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsMgogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItcmlnaHQtY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgIDwvc3R5bGU+CiAgICA8L2hlYWQ+CiAgICA8Ym9keT4KICAgICAgICA8cD5UZXN0IHBhc3NlcyBpZiB0aGVyZSBpcyBubyByZWQgdmlzaWJsZSBvbiB0aGUgcGFnZS48L3A+CiAgICAgICAgPHRhYmxlPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQ+ZG90dGVkPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDEiPmRvdHRlZDwvdGQ+CiAgICAgICAgICAgICAgICA8dGQ+ZG90dGVkPC90ZD4KICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMiI+ZG90dGVkPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDMiPnJpZGdlPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDQiPmRvdHRlZDwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD5kb3R0ZWQ8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsNSI+ZG90dGVkPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5kb3R0ZWQ8L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgIDwvdGFibGU+CiAgICA8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAoYnkgYm9yZGVyIHdpZHRoKTogJ2RvdHRlZCcgdnMuICdzb2xpZCcgLSBib3JkZXIgc3R5bGUgd2l0aCBsYXJnZXN0IHdpZHRoIGlzIHRoZSBkb21pbmFudCBib3JkZXI8L3RpdGxlPgogICAgICAgIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iVzNDIiBocmVmPSJodHRwOi8vd3d3LnczYy5vcmcvIj4KICAgICAgICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9Ik1pY3Jvc29mdCIgaHJlZj0iaHR0cDovL3d3dy5taWNyb3NvZnQuY29tLyI+CiAgICAgICAgPGxpbmsgcmVsPSJoZWxwIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCNib3JkZXItY29uZmxpY3QtcmVzb2x1dGlvbiI+CiAgICAgICAgPG1ldGEgbmFtZT0iZmxhZ3MiIGNvbnRlbnQ9IiI+CiAgICAgICAgPG1ldGEgbmFtZT0iYXNzZXJ0IiBjb250ZW50PSJUaGUgd2lkZXN0IGJvcmRlciBpcyBkb21pbmFudCB3aGVuIHR3byBjZWxsIGJvcmRlcnMgY29sbGFwc2UuIj4KICAgICAgICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgogICAgICAgICAgICB0YWJsZQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHRkCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlcjogNXB4IGRvdHRlZCBibGFjazsKICAgICAgICAgICAgICAgIGhlaWdodDogM2VtOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsMwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXI6IDEwcHggc29saWQgYmxhY2s7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGwxCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1ib3R0b20tY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDQKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWxlZnQtY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDUKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLXRvcC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsMgogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItcmlnaHQtY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgIDwvc3R5bGU+CiAgICA8L2hlYWQ+CiAgICA8Ym9keT4KICAgICAgICA8cD5UZXN0IHBhc3NlcyBpZiB0aGVyZSBpcyBubyByZWQgdmlzaWJsZSBvbiB0aGUgcGFnZS48L3A+CiAgICAgICAgPHRhYmxlPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQ+ZG90dGVkPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDEiPmRvdHRlZDwvdGQ+CiAgICAgICAgICAgICAgICA8dGQ+ZG90dGVkPC90ZD4KICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMiI+ZG90dGVkPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDMiPnNvbGlkPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDQiPmRvdHRlZDwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD5kb3R0ZWQ8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsNSI+ZG90dGVkPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5kb3R0ZWQ8L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgIDwvdGFibGU+CiAgICA8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAoYnkgYm9yZGVyIHdpZHRoKTogJ2RvdWJsZScgdnMuICdkYXNoZWQnIC0gYm9yZGVyIHN0eWxlIHdpdGggbGFyZ2VzdCB3aWR0aCBpcyB0aGUgZG9taW5hbnQgYm9yZGVyPC90aXRsZT4KICAgICAgICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9IlczQyIgaHJlZj0iaHR0cDovL3d3dy53M2Mub3JnLyI+CiAgICAgICAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJNaWNyb3NvZnQiIGhyZWY9Imh0dHA6Ly93d3cubWljcm9zb2Z0LmNvbS8iPgogICAgICAgIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjYm9yZGVyLWNvbmZsaWN0LXJlc29sdXRpb24iPgogICAgICAgIDxtZXRhIG5hbWU9ImZsYWdzIiBjb250ZW50PSIiPgogICAgICAgIDxtZXRhIG5hbWU9ImFzc2VydCIgY29udGVudD0iVGhlIHdpZGVzdCBib3JkZXIgaXMgZG9taW5hbnQgd2hlbiB0d28gY2VsbCBib3JkZXJzIGNvbGxhcHNlLiI+CiAgICAgICAgPHN0eWxlIHR5cGU9InRleHQvY3NzIj4KICAgICAgICAgICAgdGFibGUKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsKICAgICAgICAgICAgfQogICAgICAgICAgICB0ZAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXI6IDVweCBkb3VibGUgYmxhY2s7CiAgICAgICAgICAgICAgICBoZWlnaHQ6IDNlbTsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDMKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyOiAxMHB4IGRhc2hlZCBibGFjazsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDEKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWJvdHRvbS1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsNAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItbGVmdC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsNQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItdG9wLWNvbG9yOiByZWQ7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGwyCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1yaWdodC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgPC9zdHlsZT4KICAgIDwvaGVhZD4KICAgIDxib2R5PgogICAgICAgIDxwPlRlc3QgcGFzc2VzIGlmIHRoZXJlIGlzIG5vIHJlZCB2aXNpYmxlIG9uIHRoZSBwYWdlLjwvcD4KICAgICAgICA8dGFibGU+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD5kb3VibGU8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMSI+ZG91YmxlPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5kb3VibGU8L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQgaWQ9ImNlbGwyIj5kb3VibGU8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMyI+ZGFzaGVkPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDQiPmRvdWJsZTwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD5kb3VibGU8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsNSI+ZG91YmxlPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5kb3VibGU8L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgIDwvdGFibGU+CiAgICA8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAoYnkgYm9yZGVyIHdpZHRoKTogJ2RvdWJsZScgdnMuICdkb3R0ZWQnIC0gYm9yZGVyIHN0eWxlIHdpdGggbGFyZ2VzdCB3aWR0aCBpcyB0aGUgZG9taW5hbnQgYm9yZGVyPC90aXRsZT4KICAgICAgICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9IlczQyIgaHJlZj0iaHR0cDovL3d3dy53M2Mub3JnLyI+CiAgICAgICAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJNaWNyb3NvZnQiIGhyZWY9Imh0dHA6Ly93d3cubWljcm9zb2Z0LmNvbS8iPgogICAgICAgIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjYm9yZGVyLWNvbmZsaWN0LXJlc29sdXRpb24iPgogICAgICAgIDxtZXRhIG5hbWU9ImZsYWdzIiBjb250ZW50PSIiPgogICAgICAgIDxtZXRhIG5hbWU9ImFzc2VydCIgY29udGVudD0iVGhlIHdpZGVzdCBib3JkZXIgaXMgZG9taW5hbnQgd2hlbiB0d28gY2VsbCBib3JkZXJzIGNvbGxhcHNlLiI+CiAgICAgICAgPHN0eWxlIHR5cGU9InRleHQvY3NzIj4KICAgICAgICAgICAgdGFibGUKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsKICAgICAgICAgICAgfQogICAgICAgICAgICB0ZAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXI6IDVweCBkb3VibGUgYmxhY2s7CiAgICAgICAgICAgICAgICBoZWlnaHQ6IDNlbTsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDMKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyOiAxMHB4IGRvdHRlZCBibGFjazsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDEKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWJvdHRvbS1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsNAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItbGVmdC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsNQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItdG9wLWNvbG9yOiByZWQ7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGwyCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1yaWdodC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgPC9zdHlsZT4KICAgIDwvaGVhZD4KICAgIDxib2R5PgogICAgICAgIDxwPlRlc3QgcGFzc2VzIGlmIHRoZXJlIGlzIG5vIHJlZCB2aXNpYmxlIG9uIHRoZSBwYWdlLjwvcD4KICAgICAgICA8dGFibGU+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD5kb3VibGU8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMSI+ZG91YmxlPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5kb3VibGU8L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQgaWQ9ImNlbGwyIj5kb3VibGU8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMyI+ZG90dGVkPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDQiPmRvdWJsZTwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD5kb3VibGU8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsNSI+ZG91YmxlPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5kb3VibGU8L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgIDwvdGFibGU+CiAgICA8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAoYnkgYm9yZGVyIHdpZHRoKTogJ2RvdWJsZScgdnMuICdkb3VibGUnIC0gYm9yZGVyIHN0eWxlIHdpdGggbGFyZ2VzdCB3aWR0aCBpcyB0aGUgZG9taW5hbnQgYm9yZGVyPC90aXRsZT4KICAgICAgICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9IlczQyIgaHJlZj0iaHR0cDovL3d3dy53M2Mub3JnLyI+CiAgICAgICAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJNaWNyb3NvZnQiIGhyZWY9Imh0dHA6Ly93d3cubWljcm9zb2Z0LmNvbS8iPgogICAgICAgIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjYm9yZGVyLWNvbmZsaWN0LXJlc29sdXRpb24iPgogICAgICAgIDxtZXRhIG5hbWU9ImZsYWdzIiBjb250ZW50PSIiPgogICAgICAgIDxtZXRhIG5hbWU9ImFzc2VydCIgY29udGVudD0iVGhlIHdpZGVzdCBib3JkZXIgaXMgZG9taW5hbnQgd2hlbiB0d28gY2VsbCBib3JkZXJzIGNvbGxhcHNlLiI+CiAgICAgICAgPHN0eWxlIHR5cGU9InRleHQvY3NzIj4KICAgICAgICAgICAgdGFibGUKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsKICAgICAgICAgICAgfQogICAgICAgICAgICB0ZAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXI6IDVweCBkb3VibGUgYmxhY2s7CiAgICAgICAgICAgICAgICBoZWlnaHQ6IDNlbTsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDMKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyOiAxMHB4IGRvdWJsZSBibGFjazsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDEKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWJvdHRvbS1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsNAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItbGVmdC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsNQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItdG9wLWNvbG9yOiByZWQ7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGwyCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1yaWdodC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgPC9zdHlsZT4KICAgIDwvaGVhZD4KICAgIDxib2R5PgogICAgICAgIDxwPlRlc3QgcGFzc2VzIGlmIHRoZXJlIGlzIG5vIHJlZCB2aXNpYmxlIG9uIHRoZSBwYWdlLjwvcD4KICAgICAgICA8dGFibGU+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD5kb3VibGU8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMSI+ZG91YmxlPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5kb3VibGU8L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQgaWQ9ImNlbGwyIj5kb3VibGU8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMyI+ZG91YmxlPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDQiPmRvdWJsZTwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD5kb3VibGU8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsNSI+ZG91YmxlPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5kb3VibGU8L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgIDwvdGFibGU+CiAgICA8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAoYnkgYm9yZGVyIHdpZHRoKTogJ2RvdWJsZScgdnMuICdncm9vdmUnIC0gYm9yZGVyIHN0eWxlIHdpdGggbGFyZ2VzdCB3aWR0aCBpcyB0aGUgZG9taW5hbnQgYm9yZGVyPC90aXRsZT4KICAgICAgICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9IlczQyIgaHJlZj0iaHR0cDovL3d3dy53M2Mub3JnLyI+CiAgICAgICAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJNaWNyb3NvZnQiIGhyZWY9Imh0dHA6Ly93d3cubWljcm9zb2Z0LmNvbS8iPgogICAgICAgIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjYm9yZGVyLWNvbmZsaWN0LXJlc29sdXRpb24iPgogICAgICAgIDxtZXRhIG5hbWU9ImZsYWdzIiBjb250ZW50PSIiPgogICAgICAgIDxtZXRhIG5hbWU9ImFzc2VydCIgY29udGVudD0iVGhlIHdpZGVzdCBib3JkZXIgaXMgZG9taW5hbnQgd2hlbiB0d28gY2VsbCBib3JkZXJzIGNvbGxhcHNlLiI+CiAgICAgICAgPHN0eWxlIHR5cGU9InRleHQvY3NzIj4KICAgICAgICAgICAgdGFibGUKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsKICAgICAgICAgICAgfQogICAgICAgICAgICB0ZAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXI6IDVweCBkb3VibGUgYmxhY2s7CiAgICAgICAgICAgICAgICBoZWlnaHQ6IDNlbTsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDMKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyOiAxMHB4IGdyb292ZSBibGFjazsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDEKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWJvdHRvbS1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsNAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItbGVmdC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsNQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItdG9wLWNvbG9yOiByZWQ7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGwyCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1yaWdodC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgPC9zdHlsZT4KICAgIDwvaGVhZD4KICAgIDxib2R5PgogICAgICAgIDxwPlRlc3QgcGFzc2VzIGlmIHRoZXJlIGlzIG5vIHJlZCB2aXNpYmxlIG9uIHRoZSBwYWdlLjwvcD4KICAgICAgICA8dGFibGU+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD5kb3VibGU8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMSI+ZG91YmxlPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5kb3VibGU8L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQgaWQ9ImNlbGwyIj5kb3VibGU8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMyI+Z3Jvb3ZlPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDQiPmRvdWJsZTwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD5kb3VibGU8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsNSI+ZG91YmxlPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5kb3VibGU8L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgIDwvdGFibGU+CiAgICA8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAoYnkgYm9yZGVyIHdpZHRoKTogJ2RvdWJsZScgdnMuICdoaWRkZW4nIC0gYSBib3JkZXIgc3R5bGUgb2YgJ2hpZGRlbicgaXMgYWx3YXlzIHRoZSBkb21pbmFudCBib3JkZXI8L3RpdGxlPgogICAgICAgIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iVzNDIiBocmVmPSJodHRwOi8vd3d3LnczYy5vcmcvIj4KICAgICAgICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9Ik1pY3Jvc29mdCIgaHJlZj0iaHR0cDovL3d3dy5taWNyb3NvZnQuY29tLyI+CiAgICAgICAgPGxpbmsgcmVsPSJoZWxwIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCNib3JkZXItY29uZmxpY3QtcmVzb2x1dGlvbiI+CiAgICAgICAgPG1ldGEgbmFtZT0iZmxhZ3MiIGNvbnRlbnQ9IiI+CiAgICAgICAgPG1ldGEgbmFtZT0iYXNzZXJ0IiBjb250ZW50PSJUaGUgJ2hpZGRlbicgYm9yZGVyIHN0eWxlIHRha2VzIHByZWNlZGVuY2Ugb3ZlciBhbGwgc3R5bGUgYW5kIHdpZHRoIGRlZmluaXRpb25zLiI+CiAgICAgICAgPHN0eWxlIHR5cGU9InRleHQvY3NzIj4KICAgICAgICAgICAgdGFibGUKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsKICAgICAgICAgICAgfQogICAgICAgICAgICB0ZAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXI6IDVweCBkb3VibGUgYmxhY2s7CiAgICAgICAgICAgICAgICBoZWlnaHQ6IDNlbTsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDMKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyOiAxMHB4IGhpZGRlbiBibGFjazsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDEKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWJvdHRvbS1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsNAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItbGVmdC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsNQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItdG9wLWNvbG9yOiByZWQ7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGwyCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1yaWdodC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgPC9zdHlsZT4KICAgIDwvaGVhZD4KICAgIDxib2R5PgogICAgICAgIDxwPlRlc3QgcGFzc2VzIGlmIHRoZXJlIGlzIG5vIHJlZCB2aXNpYmxlIG9uIHRoZSBwYWdlLjwvcD4KICAgICAgICA8dGFibGU+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD5kb3VibGU8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMSI+ZG91YmxlPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5kb3VibGU8L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQgaWQ9ImNlbGwyIj5kb3VibGU8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMyI+aGlkZGVuPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDQiPmRvdWJsZTwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD5kb3VibGU8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsNSI+ZG91YmxlPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5kb3VibGU8L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgIDwvdGFibGU+CiAgICA8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAoYnkgYm9yZGVyIHdpZHRoKTogJ2RvdWJsZScgdnMuICdpbnNldCcgLSBib3JkZXIgc3R5bGUgd2l0aCBsYXJnZXN0IHdpZHRoIGlzIHRoZSBkb21pbmFudCBib3JkZXI8L3RpdGxlPgogICAgICAgIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iVzNDIiBocmVmPSJodHRwOi8vd3d3LnczYy5vcmcvIj4KICAgICAgICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9Ik1pY3Jvc29mdCIgaHJlZj0iaHR0cDovL3d3dy5taWNyb3NvZnQuY29tLyI+CiAgICAgICAgPGxpbmsgcmVsPSJoZWxwIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCNib3JkZXItY29uZmxpY3QtcmVzb2x1dGlvbiI+CiAgICAgICAgPG1ldGEgbmFtZT0iZmxhZ3MiIGNvbnRlbnQ9IiI+CiAgICAgICAgPG1ldGEgbmFtZT0iYXNzZXJ0IiBjb250ZW50PSJUaGUgd2lkZXN0IGJvcmRlciBpcyBkb21pbmFudCB3aGVuIHR3byBjZWxsIGJvcmRlcnMgY29sbGFwc2UuIj4KICAgICAgICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgogICAgICAgICAgICB0YWJsZQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHRkCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlcjogNXB4IGRvdWJsZSBibGFjazsKICAgICAgICAgICAgICAgIGhlaWdodDogM2VtOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsMwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXI6IDEwcHggaW5zZXQgYmxhY2s7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGwxCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1ib3R0b20tY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDQKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWxlZnQtY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDUKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLXRvcC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsMgogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItcmlnaHQtY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgIDwvc3R5bGU+CiAgICA8L2hlYWQ+CiAgICA8Ym9keT4KICAgICAgICA8cD5UZXN0IHBhc3NlcyBpZiB0aGVyZSBpcyBubyByZWQgdmlzaWJsZSBvbiB0aGUgcGFnZS48L3A+CiAgICAgICAgPHRhYmxlPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQ+ZG91YmxlPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDEiPmRvdWJsZTwvdGQ+CiAgICAgICAgICAgICAgICA8dGQ+ZG91YmxlPC90ZD4KICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMiI+ZG91YmxlPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDMiPmluc2V0PC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDQiPmRvdWJsZTwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD5kb3VibGU8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsNSI+ZG91YmxlPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5kb3VibGU8L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgIDwvdGFibGU+CiAgICA8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAoYnkgYm9yZGVyIHdpZHRoKTogJ2RvdWJsZScgdnMuICdub25lJyAtIGJvcmRlciBzdHlsZSB3aXRoIGxhcmdlc3Qgd2lkdGggaXMgdGhlIGRvbWluYW50IGJvcmRlcjwvdGl0bGU+CiAgICAgICAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJXM0MiIGhyZWY9Imh0dHA6Ly93d3cudzNjLm9yZy8iPgogICAgICAgIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iTWljcm9zb2Z0IiBocmVmPSJodHRwOi8vd3d3Lm1pY3Jvc29mdC5jb20vIj4KICAgICAgICA8bGluayByZWw9ImhlbHAiIGhyZWY9Imh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL3RhYmxlcy5odG1sI2JvcmRlci1jb25mbGljdC1yZXNvbHV0aW9uIj4KICAgICAgICA8bWV0YSBuYW1lPSJmbGFncyIgY29udGVudD0iIj4KICAgICAgICA8bWV0YSBuYW1lPSJhc3NlcnQiIGNvbnRlbnQ9IlRoZSB3aWRlc3QgYm9yZGVyIGlzIGRvbWluYW50IHdoZW4gdHdvIGNlbGwgYm9yZGVycyBjb2xsYXBzZS4iPgogICAgICAgIDxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+CiAgICAgICAgICAgIHRhYmxlCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgdGQKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyOiA1cHggZG91YmxlIGJsYWNrOwogICAgICAgICAgICAgICAgaGVpZ2h0OiAzZW07CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGwxCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlcjogMTBweCBub25lIHJlZDsKICAgICAgICAgICAgfQogICAgICAgIDwvc3R5bGU+CiAgICA8L2hlYWQ+CiAgICA8Ym9keT4KICAgICAgICA8cD5UZXN0IHBhc3NlcyBpZiB0aGVyZSBpcyBubyByZWQgdmlzaWJsZSBvbiB0aGUgcGFnZS48L3A+CiAgICAgICAgPHRhYmxlPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQ+ZG91YmxlPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5kb3VibGU8L3RkPgogICAgICAgICAgICAgICAgPHRkPmRvdWJsZTwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD5kb3VibGU8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMSI+bm9uZTwvdGQ+CiAgICAgICAgICAgICAgICA8dGQ+ZG91YmxlPC90ZD4KICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkPmRvdWJsZTwvdGQ+CiAgICAgICAgICAgICAgICA8dGQ+ZG91YmxlPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5kb3VibGU8L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgIDwvdGFibGU+CiAgICA8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAoYnkgYm9yZGVyIHdpZHRoKTogJ2RvdWJsZScgdnMuICdvdXRzZXQnIC0gYm9yZGVyIHN0eWxlIHdpdGggbGFyZ2VzdCB3aWR0aCBpcyB0aGUgZG9taW5hbnQgYm9yZGVyPC90aXRsZT4KICAgICAgICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9IlczQyIgaHJlZj0iaHR0cDovL3d3dy53M2Mub3JnLyI+CiAgICAgICAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJNaWNyb3NvZnQiIGhyZWY9Imh0dHA6Ly93d3cubWljcm9zb2Z0LmNvbS8iPgogICAgICAgIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjYm9yZGVyLWNvbmZsaWN0LXJlc29sdXRpb24iPgogICAgICAgIDxtZXRhIG5hbWU9ImZsYWdzIiBjb250ZW50PSIiPgogICAgICAgIDxtZXRhIG5hbWU9ImFzc2VydCIgY29udGVudD0iVGhlIHdpZGVzdCBib3JkZXIgaXMgZG9taW5hbnQgd2hlbiB0d28gY2VsbCBib3JkZXJzIGNvbGxhcHNlLiI+CiAgICAgICAgPHN0eWxlIHR5cGU9InRleHQvY3NzIj4KICAgICAgICAgICAgdGFibGUKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsKICAgICAgICAgICAgfQogICAgICAgICAgICB0ZAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXI6IDVweCBkb3VibGUgYmxhY2s7CiAgICAgICAgICAgICAgICBoZWlnaHQ6IDNlbTsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDMKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyOiAxMHB4IG91dHNldCBibGFjazsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDEKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWJvdHRvbS1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsNAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItbGVmdC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsNQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItdG9wLWNvbG9yOiByZWQ7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGwyCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1yaWdodC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgPC9zdHlsZT4KICAgIDwvaGVhZD4KICAgIDxib2R5PgogICAgICAgIDxwPlRlc3QgcGFzc2VzIGlmIHRoZXJlIGlzIG5vIHJlZCB2aXNpYmxlIG9uIHRoZSBwYWdlLjwvcD4KICAgICAgICA8dGFibGU+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD5kb3VibGU8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMSI+ZG91YmxlPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5kb3VibGU8L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQgaWQ9ImNlbGwyIj5kb3VibGU8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMyI+b3V0c2V0PC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDQiPmRvdWJsZTwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD5kb3VibGU8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsNSI+ZG91YmxlPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5kb3VibGU8L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgIDwvdGFibGU+CiAgICA8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAoYnkgYm9yZGVyIHdpZHRoKTogJ2RvdWJsZScgdnMuICdyaWRnZScgLSBib3JkZXIgc3R5bGUgd2l0aCBsYXJnZXN0IHdpZHRoIGlzIHRoZSBkb21pbmFudCBib3JkZXI8L3RpdGxlPgogICAgICAgIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iVzNDIiBocmVmPSJodHRwOi8vd3d3LnczYy5vcmcvIj4KICAgICAgICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9Ik1pY3Jvc29mdCIgaHJlZj0iaHR0cDovL3d3dy5taWNyb3NvZnQuY29tLyI+CiAgICAgICAgPGxpbmsgcmVsPSJoZWxwIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCNib3JkZXItY29uZmxpY3QtcmVzb2x1dGlvbiI+CiAgICAgICAgPG1ldGEgbmFtZT0iZmxhZ3MiIGNvbnRlbnQ9IiI+CiAgICAgICAgPG1ldGEgbmFtZT0iYXNzZXJ0IiBjb250ZW50PSJUaGUgd2lkZXN0IGJvcmRlciBpcyBkb21pbmFudCB3aGVuIHR3byBjZWxsIGJvcmRlcnMgY29sbGFwc2UuIj4KICAgICAgICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgogICAgICAgICAgICB0YWJsZQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHRkCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlcjogNXB4IGRvdWJsZSBibGFjazsKICAgICAgICAgICAgICAgIGhlaWdodDogM2VtOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsMwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXI6IDEwcHggcmlkZ2UgYmxhY2s7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGwxCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1ib3R0b20tY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDQKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWxlZnQtY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDUKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLXRvcC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsMgogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItcmlnaHQtY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgIDwvc3R5bGU+CiAgICA8L2hlYWQ+CiAgICA8Ym9keT4KICAgICAgICA8cD5UZXN0IHBhc3NlcyBpZiB0aGVyZSBpcyBubyByZWQgdmlzaWJsZSBvbiB0aGUgcGFnZS48L3A+CiAgICAgICAgPHRhYmxlPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQ+ZG91YmxlPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDEiPmRvdWJsZTwvdGQ+CiAgICAgICAgICAgICAgICA8dGQ+ZG91YmxlPC90ZD4KICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMiI+ZG91YmxlPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDMiPnJpZGdlPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDQiPmRvdWJsZTwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD5kb3VibGU8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsNSI+ZG91YmxlPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5kb3VibGU8L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgIDwvdGFibGU+CiAgICA8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAoYnkgYm9yZGVyIHdpZHRoKTogJ2RvdWJsZScgdnMuICdzb2xpZCcgLSBib3JkZXIgc3R5bGUgd2l0aCBsYXJnZXN0IHdpZHRoIGlzIHRoZSBkb21pbmFudCBib3JkZXI8L3RpdGxlPgogICAgICAgIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iVzNDIiBocmVmPSJodHRwOi8vd3d3LnczYy5vcmcvIj4KICAgICAgICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9Ik1pY3Jvc29mdCIgaHJlZj0iaHR0cDovL3d3dy5taWNyb3NvZnQuY29tLyI+CiAgICAgICAgPGxpbmsgcmVsPSJoZWxwIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCNib3JkZXItY29uZmxpY3QtcmVzb2x1dGlvbiI+CiAgICAgICAgPG1ldGEgbmFtZT0iZmxhZ3MiIGNvbnRlbnQ9IiI+CiAgICAgICAgPG1ldGEgbmFtZT0iYXNzZXJ0IiBjb250ZW50PSJUaGUgd2lkZXN0IGJvcmRlciBpcyBkb21pbmFudCB3aGVuIHR3byBjZWxsIGJvcmRlcnMgY29sbGFwc2UuIj4KICAgICAgICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgogICAgICAgICAgICB0YWJsZQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHRkCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlcjogNXB4IGRvdWJsZSBibGFjazsKICAgICAgICAgICAgICAgIGhlaWdodDogM2VtOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsMwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXI6IDEwcHggc29saWQgYmxhY2s7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGwxCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1ib3R0b20tY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDQKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWxlZnQtY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDUKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLXRvcC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsMgogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItcmlnaHQtY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgIDwvc3R5bGU+CiAgICA8L2hlYWQ+CiAgICA8Ym9keT4KICAgICAgICA8cD5UZXN0IHBhc3NlcyBpZiB0aGVyZSBpcyBubyByZWQgdmlzaWJsZSBvbiB0aGUgcGFnZS48L3A+CiAgICAgICAgPHRhYmxlPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQ+ZG91YmxlPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDEiPmRvdWJsZTwvdGQ+CiAgICAgICAgICAgICAgICA8dGQ+ZG91YmxlPC90ZD4KICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMiI+ZG91YmxlPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDMiPnNvbGlkPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDQiPmRvdWJsZTwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD5kb3VibGU8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsNSI+ZG91YmxlPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5kb3VibGU8L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgIDwvdGFibGU+CiAgICA8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAoYnkgYm9yZGVyIHdpZHRoKTogJ2dyb292ZScgdnMuICdkYXNoZWQnIC0gYm9yZGVyIHN0eWxlIHdpdGggbGFyZ2VzdCB3aWR0aCBpcyB0aGUgZG9taW5hbnQgYm9yZGVyPC90aXRsZT4KICAgICAgICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9IlczQyIgaHJlZj0iaHR0cDovL3d3dy53M2Mub3JnLyI+CiAgICAgICAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJNaWNyb3NvZnQiIGhyZWY9Imh0dHA6Ly93d3cubWljcm9zb2Z0LmNvbS8iPgogICAgICAgIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjYm9yZGVyLWNvbmZsaWN0LXJlc29sdXRpb24iPgogICAgICAgIDxtZXRhIG5hbWU9ImZsYWdzIiBjb250ZW50PSIiPgogICAgICAgIDxtZXRhIG5hbWU9ImFzc2VydCIgY29udGVudD0iVGhlIHdpZGVzdCBib3JkZXIgaXMgZG9taW5hbnQgd2hlbiB0d28gY2VsbCBib3JkZXJzIGNvbGxhcHNlLiI+CiAgICAgICAgPHN0eWxlIHR5cGU9InRleHQvY3NzIj4KICAgICAgICAgICAgdGFibGUKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsKICAgICAgICAgICAgfQogICAgICAgICAgICB0ZAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXI6IDVweCBncm9vdmUgYmxhY2s7CiAgICAgICAgICAgICAgICBoZWlnaHQ6IDNlbTsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDMKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyOiAxMHB4IGRhc2hlZCBibGFjazsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDEKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWJvdHRvbS1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsNAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItbGVmdC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsNQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItdG9wLWNvbG9yOiByZWQ7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGwyCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1yaWdodC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgPC9zdHlsZT4KICAgIDwvaGVhZD4KICAgIDxib2R5PgogICAgICAgIDxwPlRlc3QgcGFzc2VzIGlmIHRoZXJlIGlzIG5vIHJlZCB2aXNpYmxlIG9uIHRoZSBwYWdlLjwvcD4KICAgICAgICA8dGFibGU+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD5ncm9vdmU8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMSI+Z3Jvb3ZlPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5ncm9vdmU8L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQgaWQ9ImNlbGwyIj5ncm9vdmU8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMyI+ZGFzaGVkPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDQiPmdyb292ZTwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD5ncm9vdmU8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsNSI+Z3Jvb3ZlPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5ncm9vdmU8L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgIDwvdGFibGU+CiAgICA8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAoYnkgYm9yZGVyIHdpZHRoKTogJ2dyb292ZScgdnMuICdkb3R0ZWQnIC0gYm9yZGVyIHN0eWxlIHdpdGggbGFyZ2VzdCB3aWR0aCBpcyB0aGUgZG9taW5hbnQgYm9yZGVyPC90aXRsZT4KICAgICAgICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9IlczQyIgaHJlZj0iaHR0cDovL3d3dy53M2Mub3JnLyI+CiAgICAgICAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJNaWNyb3NvZnQiIGhyZWY9Imh0dHA6Ly93d3cubWljcm9zb2Z0LmNvbS8iPgogICAgICAgIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjYm9yZGVyLWNvbmZsaWN0LXJlc29sdXRpb24iPgogICAgICAgIDxtZXRhIG5hbWU9ImZsYWdzIiBjb250ZW50PSIiPgogICAgICAgIDxtZXRhIG5hbWU9ImFzc2VydCIgY29udGVudD0iVGhlIHdpZGVzdCBib3JkZXIgaXMgZG9taW5hbnQgd2hlbiB0d28gY2VsbCBib3JkZXJzIGNvbGxhcHNlLiI+CiAgICAgICAgPHN0eWxlIHR5cGU9InRleHQvY3NzIj4KICAgICAgICAgICAgdGFibGUKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsKICAgICAgICAgICAgfQogICAgICAgICAgICB0ZAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXI6IDVweCBncm9vdmUgYmxhY2s7CiAgICAgICAgICAgICAgICBoZWlnaHQ6IDNlbTsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDMKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyOiAxMHB4IGRvdHRlZCBibGFjazsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDEKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWJvdHRvbS1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsNAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItbGVmdC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsNQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItdG9wLWNvbG9yOiByZWQ7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGwyCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1yaWdodC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgPC9zdHlsZT4KICAgIDwvaGVhZD4KICAgIDxib2R5PgogICAgICAgIDxwPlRlc3QgcGFzc2VzIGlmIHRoZXJlIGlzIG5vIHJlZCB2aXNpYmxlIG9uIHRoZSBwYWdlLjwvcD4KICAgICAgICA8dGFibGU+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD5ncm9vdmU8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMSI+Z3Jvb3ZlPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5ncm9vdmU8L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQgaWQ9ImNlbGwyIj5ncm9vdmU8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMyI+ZG90dGVkPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDQiPmdyb292ZTwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD5ncm9vdmU8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsNSI+Z3Jvb3ZlPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5ncm9vdmU8L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgIDwvdGFibGU+CiAgICA8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAoYnkgYm9yZGVyIHdpZHRoKTogJ2dyb292ZScgdnMuICdkb3VibGUnIC0gYm9yZGVyIHN0eWxlIHdpdGggbGFyZ2VzdCB3aWR0aCBpcyB0aGUgZG9taW5hbnQgYm9yZGVyPC90aXRsZT4KICAgICAgICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9IlczQyIgaHJlZj0iaHR0cDovL3d3dy53M2Mub3JnLyI+CiAgICAgICAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJNaWNyb3NvZnQiIGhyZWY9Imh0dHA6Ly93d3cubWljcm9zb2Z0LmNvbS8iPgogICAgICAgIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjYm9yZGVyLWNvbmZsaWN0LXJlc29sdXRpb24iPgogICAgICAgIDxtZXRhIG5hbWU9ImZsYWdzIiBjb250ZW50PSIiPgogICAgICAgIDxtZXRhIG5hbWU9ImFzc2VydCIgY29udGVudD0iVGhlIHdpZGVzdCBib3JkZXIgaXMgZG9taW5hbnQgd2hlbiB0d28gY2VsbCBib3JkZXJzIGNvbGxhcHNlLiI+CiAgICAgICAgPHN0eWxlIHR5cGU9InRleHQvY3NzIj4KICAgICAgICAgICAgdGFibGUKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsKICAgICAgICAgICAgfQogICAgICAgICAgICB0ZAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXI6IDVweCBncm9vdmUgYmxhY2s7CiAgICAgICAgICAgICAgICBoZWlnaHQ6IDNlbTsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDMKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyOiAxMHB4IGRvdWJsZSBibGFjazsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDEKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWJvdHRvbS1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsNAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItbGVmdC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsNQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItdG9wLWNvbG9yOiByZWQ7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGwyCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1yaWdodC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgPC9zdHlsZT4KICAgIDwvaGVhZD4KICAgIDxib2R5PgogICAgICAgIDxwPlRlc3QgcGFzc2VzIGlmIHRoZXJlIGlzIG5vIHJlZCB2aXNpYmxlIG9uIHRoZSBwYWdlLjwvcD4KICAgICAgICA8dGFibGU+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD5ncm9vdmU8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMSI+Z3Jvb3ZlPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5ncm9vdmU8L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQgaWQ9ImNlbGwyIj5ncm9vdmU8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMyI+ZG91YmxlPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDQiPmdyb292ZTwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD5ncm9vdmU8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsNSI+Z3Jvb3ZlPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5ncm9vdmU8L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgIDwvdGFibGU+CiAgICA8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAoYnkgYm9yZGVyIHdpZHRoKTogJ2dyb292ZScgdnMuICdncm9vdmUnIC0gYm9yZGVyIHN0eWxlIHdpdGggbGFyZ2VzdCB3aWR0aCBpcyB0aGUgZG9taW5hbnQgYm9yZGVyPC90aXRsZT4KICAgICAgICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9IlczQyIgaHJlZj0iaHR0cDovL3d3dy53M2Mub3JnLyI+CiAgICAgICAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJNaWNyb3NvZnQiIGhyZWY9Imh0dHA6Ly93d3cubWljcm9zb2Z0LmNvbS8iPgogICAgICAgIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjYm9yZGVyLWNvbmZsaWN0LXJlc29sdXRpb24iPgogICAgICAgIDxtZXRhIG5hbWU9ImZsYWdzIiBjb250ZW50PSIiPgogICAgICAgIDxtZXRhIG5hbWU9ImFzc2VydCIgY29udGVudD0iVGhlIHdpZGVzdCBib3JkZXIgaXMgZG9taW5hbnQgd2hlbiB0d28gY2VsbCBib3JkZXJzIGNvbGxhcHNlLiI+CiAgICAgICAgPHN0eWxlIHR5cGU9InRleHQvY3NzIj4KICAgICAgICAgICAgdGFibGUKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsKICAgICAgICAgICAgfQogICAgICAgICAgICB0ZAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXI6IDVweCBncm9vdmUgYmxhY2s7CiAgICAgICAgICAgICAgICBoZWlnaHQ6IDNlbTsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDMKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyOiAxMHB4IGdyb292ZSBibGFjazsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDEKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWJvdHRvbS1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsNAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItbGVmdC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsNQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItdG9wLWNvbG9yOiByZWQ7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGwyCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1yaWdodC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgPC9zdHlsZT4KICAgIDwvaGVhZD4KICAgIDxib2R5PgogICAgICAgIDxwPlRlc3QgcGFzc2VzIGlmIHRoZXJlIGlzIG5vIHJlZCB2aXNpYmxlIG9uIHRoZSBwYWdlLjwvcD4KICAgICAgICA8dGFibGU+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD5ncm9vdmU8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMSI+Z3Jvb3ZlPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5ncm9vdmU8L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQgaWQ9ImNlbGwyIj5ncm9vdmU8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMyI+Z3Jvb3ZlPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDQiPmdyb292ZTwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD5ncm9vdmU8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsNSI+Z3Jvb3ZlPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5ncm9vdmU8L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgIDwvdGFibGU+CiAgICA8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAoYnkgYm9yZGVyIHdpZHRoKTogJ2dyb292ZScgdnMuICdoaWRkZW4nIC0gYSBib3JkZXIgc3R5bGUgb2YgJ2hpZGRlbicgaXMgYWx3YXlzIHRoZSBkb21pbmFudCBib3JkZXI8L3RpdGxlPgogICAgICAgIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iVzNDIiBocmVmPSJodHRwOi8vd3d3LnczYy5vcmcvIj4KICAgICAgICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9Ik1pY3Jvc29mdCIgaHJlZj0iaHR0cDovL3d3dy5taWNyb3NvZnQuY29tLyI+CiAgICAgICAgPGxpbmsgcmVsPSJoZWxwIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCNib3JkZXItY29uZmxpY3QtcmVzb2x1dGlvbiI+CiAgICAgICAgPG1ldGEgbmFtZT0iZmxhZ3MiIGNvbnRlbnQ9IiI+CiAgICAgICAgPG1ldGEgbmFtZT0iYXNzZXJ0IiBjb250ZW50PSJUaGUgJ2hpZGRlbicgYm9yZGVyIHN0eWxlIHRha2VzIHByZWNlZGVuY2Ugb3ZlciBhbGwgc3R5bGUgYW5kIHdpZHRoIGRlZmluaXRpb25zLiI+CiAgICAgICAgPHN0eWxlIHR5cGU9InRleHQvY3NzIj4KICAgICAgICAgICAgdGFibGUKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsKICAgICAgICAgICAgfQogICAgICAgICAgICB0ZAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXI6IDVweCBncm9vdmUgYmxhY2s7CiAgICAgICAgICAgICAgICBoZWlnaHQ6IDNlbTsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDMKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyOiAxMHB4IGhpZGRlbiBibGFjazsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDEKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWJvdHRvbS1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsNAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItbGVmdC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsNQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItdG9wLWNvbG9yOiByZWQ7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGwyCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1yaWdodC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgPC9zdHlsZT4KICAgIDwvaGVhZD4KICAgIDxib2R5PgogICAgICAgIDxwPlRlc3QgcGFzc2VzIGlmIHRoZXJlIGlzIG5vIHJlZCB2aXNpYmxlIG9uIHRoZSBwYWdlLjwvcD4KICAgICAgICA8dGFibGU+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD5ncm9vdmU8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMSI+Z3Jvb3ZlPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5ncm9vdmU8L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQgaWQ9ImNlbGwyIj5ncm9vdmU8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMyI+aGlkZGVuPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDQiPmdyb292ZTwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD5ncm9vdmU8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsNSI+Z3Jvb3ZlPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5ncm9vdmU8L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgIDwvdGFibGU+CiAgICA8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAoYnkgYm9yZGVyIHdpZHRoKTogJ2dyb292ZScgdnMuICdpbnNldCcgLSBib3JkZXIgc3R5bGUgd2l0aCBsYXJnZXN0IHdpZHRoIGlzIHRoZSBkb21pbmFudCBib3JkZXI8L3RpdGxlPgogICAgICAgIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iVzNDIiBocmVmPSJodHRwOi8vd3d3LnczYy5vcmcvIj4KICAgICAgICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9Ik1pY3Jvc29mdCIgaHJlZj0iaHR0cDovL3d3dy5taWNyb3NvZnQuY29tLyI+CiAgICAgICAgPGxpbmsgcmVsPSJoZWxwIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCNib3JkZXItY29uZmxpY3QtcmVzb2x1dGlvbiI+CiAgICAgICAgPG1ldGEgbmFtZT0iZmxhZ3MiIGNvbnRlbnQ9IiI+CiAgICAgICAgPG1ldGEgbmFtZT0iYXNzZXJ0IiBjb250ZW50PSJUaGUgd2lkZXN0IGJvcmRlciBpcyBkb21pbmFudCB3aGVuIHR3byBjZWxsIGJvcmRlcnMgY29sbGFwc2UuIj4KICAgICAgICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgogICAgICAgICAgICB0YWJsZQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHRkCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlcjogNXB4IGdyb292ZSBibGFjazsKICAgICAgICAgICAgICAgIGhlaWdodDogM2VtOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsMwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXI6IDEwcHggaW5zZXQgYmxhY2s7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGwxCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1ib3R0b20tY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDQKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWxlZnQtY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDUKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLXRvcC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsMgogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItcmlnaHQtY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgIDwvc3R5bGU+CiAgICA8L2hlYWQ+CiAgICA8Ym9keT4KICAgICAgICA8cD5UZXN0IHBhc3NlcyBpZiB0aGVyZSBpcyBubyByZWQgdmlzaWJsZSBvbiB0aGUgcGFnZS48L3A+CiAgICAgICAgPHRhYmxlPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQ+Z3Jvb3ZlPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDEiPmdyb292ZTwvdGQ+CiAgICAgICAgICAgICAgICA8dGQ+Z3Jvb3ZlPC90ZD4KICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMiI+Z3Jvb3ZlPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDMiPmluc2V0PC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDQiPmdyb292ZTwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD5ncm9vdmU8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsNSI+Z3Jvb3ZlPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5ncm9vdmU8L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgIDwvdGFibGU+CiAgICA8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAoYnkgYm9yZGVyIHdpZHRoKTogJ2dyb292ZScgdnMuICdub25lJyAtIGJvcmRlciBzdHlsZSB3aXRoIGxhcmdlc3Qgd2lkdGggaXMgdGhlIGRvbWluYW50IGJvcmRlcjwvdGl0bGU+CiAgICAgICAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJXM0MiIGhyZWY9Imh0dHA6Ly93d3cudzNjLm9yZy8iPgogICAgICAgIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iTWljcm9zb2Z0IiBocmVmPSJodHRwOi8vd3d3Lm1pY3Jvc29mdC5jb20vIj4KICAgICAgICA8bGluayByZWw9ImhlbHAiIGhyZWY9Imh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL3RhYmxlcy5odG1sI2JvcmRlci1jb25mbGljdC1yZXNvbHV0aW9uIj4KICAgICAgICA8bWV0YSBuYW1lPSJmbGFncyIgY29udGVudD0iIj4KICAgICAgICA8bWV0YSBuYW1lPSJhc3NlcnQiIGNvbnRlbnQ9IlRoZSB3aWRlc3QgYm9yZGVyIGlzIGRvbWluYW50IHdoZW4gdHdvIGNlbGwgYm9yZGVycyBjb2xsYXBzZS4iPgogICAgICAgIDxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+CiAgICAgICAgICAgIHRhYmxlCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgdGQKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyOiA1cHggZ3Jvb3ZlIGJsYWNrOwogICAgICAgICAgICAgICAgaGVpZ2h0OiAzZW07CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGwxCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlcjogMTBweCBub25lIHJlZDsKICAgICAgICAgICAgfQogICAgICAgIDwvc3R5bGU+CiAgICA8L2hlYWQ+CiAgICA8Ym9keT4KICAgICAgICA8cD5UZXN0IHBhc3NlcyBpZiB0aGVyZSBpcyBubyByZWQgdmlzaWJsZSBvbiB0aGUgcGFnZS48L3A+CiAgICAgICAgPHRhYmxlPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQ+Z3Jvb3ZlPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5ncm9vdmU8L3RkPgogICAgICAgICAgICAgICAgPHRkPmdyb292ZTwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD5ncm9vdmU8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMSI+bm9uZTwvdGQ+CiAgICAgICAgICAgICAgICA8dGQ+Z3Jvb3ZlPC90ZD4KICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkPmdyb292ZTwvdGQ+CiAgICAgICAgICAgICAgICA8dGQ+Z3Jvb3ZlPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5ncm9vdmU8L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgIDwvdGFibGU+CiAgICA8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAoYnkgYm9yZGVyIHdpZHRoKTogJ2dyb292ZScgdnMuICdvdXRzZXQnIC0gYm9yZGVyIHN0eWxlIHdpdGggbGFyZ2VzdCB3aWR0aCBpcyB0aGUgZG9taW5hbnQgYm9yZGVyPC90aXRsZT4KICAgICAgICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9IlczQyIgaHJlZj0iaHR0cDovL3d3dy53M2Mub3JnLyI+CiAgICAgICAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJNaWNyb3NvZnQiIGhyZWY9Imh0dHA6Ly93d3cubWljcm9zb2Z0LmNvbS8iPgogICAgICAgIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjYm9yZGVyLWNvbmZsaWN0LXJlc29sdXRpb24iPgogICAgICAgIDxtZXRhIG5hbWU9ImZsYWdzIiBjb250ZW50PSIiPgogICAgICAgIDxtZXRhIG5hbWU9ImFzc2VydCIgY29udGVudD0iVGhlIHdpZGVzdCBib3JkZXIgaXMgZG9taW5hbnQgd2hlbiB0d28gY2VsbCBib3JkZXJzIGNvbGxhcHNlLiI+CiAgICAgICAgPHN0eWxlIHR5cGU9InRleHQvY3NzIj4KICAgICAgICAgICAgdGFibGUKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsKICAgICAgICAgICAgfQogICAgICAgICAgICB0ZAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXI6IDVweCBncm9vdmUgYmxhY2s7CiAgICAgICAgICAgICAgICBoZWlnaHQ6IDNlbTsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDMKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyOiAxMHB4IG91dHNldCBibGFjazsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDEKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWJvdHRvbS1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsNAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItbGVmdC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsNQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItdG9wLWNvbG9yOiByZWQ7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGwyCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1yaWdodC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgPC9zdHlsZT4KICAgIDwvaGVhZD4KICAgIDxib2R5PgogICAgICAgIDxwPlRlc3QgcGFzc2VzIGlmIHRoZXJlIGlzIG5vIHJlZCB2aXNpYmxlIG9uIHRoZSBwYWdlLjwvcD4KICAgICAgICA8dGFibGU+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD5ncm9vdmU8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMSI+Z3Jvb3ZlPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5ncm9vdmU8L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQgaWQ9ImNlbGwyIj5ncm9vdmU8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMyI+b3V0c2V0PC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDQiPmdyb292ZTwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD5ncm9vdmU8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsNSI+Z3Jvb3ZlPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5ncm9vdmU8L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgIDwvdGFibGU+CiAgICA8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAoYnkgYm9yZGVyIHdpZHRoKTogJ2dyb292ZScgdnMuICdyaWRnZScgLSBib3JkZXIgc3R5bGUgd2l0aCBsYXJnZXN0IHdpZHRoIGlzIHRoZSBkb21pbmFudCBib3JkZXI8L3RpdGxlPgogICAgICAgIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iVzNDIiBocmVmPSJodHRwOi8vd3d3LnczYy5vcmcvIj4KICAgICAgICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9Ik1pY3Jvc29mdCIgaHJlZj0iaHR0cDovL3d3dy5taWNyb3NvZnQuY29tLyI+CiAgICAgICAgPGxpbmsgcmVsPSJoZWxwIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCNib3JkZXItY29uZmxpY3QtcmVzb2x1dGlvbiI+CiAgICAgICAgPG1ldGEgbmFtZT0iZmxhZ3MiIGNvbnRlbnQ9IiI+CiAgICAgICAgPG1ldGEgbmFtZT0iYXNzZXJ0IiBjb250ZW50PSJUaGUgd2lkZXN0IGJvcmRlciBpcyBkb21pbmFudCB3aGVuIHR3byBjZWxsIGJvcmRlcnMgY29sbGFwc2UuIj4KICAgICAgICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgogICAgICAgICAgICB0YWJsZQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHRkCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlcjogNXB4IGdyb292ZSBibGFjazsKICAgICAgICAgICAgICAgIGhlaWdodDogM2VtOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsMwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXI6IDEwcHggcmlkZ2UgYmxhY2s7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGwxCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1ib3R0b20tY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDQKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWxlZnQtY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDUKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLXRvcC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsMgogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItcmlnaHQtY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgIDwvc3R5bGU+CiAgICA8L2hlYWQ+CiAgICA8Ym9keT4KICAgICAgICA8cD5UZXN0IHBhc3NlcyBpZiB0aGVyZSBpcyBubyByZWQgdmlzaWJsZSBvbiB0aGUgcGFnZS48L3A+CiAgICAgICAgPHRhYmxlPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQ+Z3Jvb3ZlPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDEiPmdyb292ZTwvdGQ+CiAgICAgICAgICAgICAgICA8dGQ+Z3Jvb3ZlPC90ZD4KICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMiI+Z3Jvb3ZlPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDMiPnJpZGdlPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDQiPmdyb292ZTwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD5ncm9vdmU8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsNSI+Z3Jvb3ZlPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5ncm9vdmU8L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgIDwvdGFibGU+CiAgICA8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAoYnkgYm9yZGVyIHdpZHRoKTogJ2dyb292ZScgdnMuICdzb2xpZCcgLSBib3JkZXIgc3R5bGUgd2l0aCBsYXJnZXN0IHdpZHRoIGlzIHRoZSBkb21pbmFudCBib3JkZXI8L3RpdGxlPgogICAgICAgIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iVzNDIiBocmVmPSJodHRwOi8vd3d3LnczYy5vcmcvIj4KICAgICAgICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9Ik1pY3Jvc29mdCIgaHJlZj0iaHR0cDovL3d3dy5taWNyb3NvZnQuY29tLyI+CiAgICAgICAgPGxpbmsgcmVsPSJoZWxwIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCNib3JkZXItY29uZmxpY3QtcmVzb2x1dGlvbiI+CiAgICAgICAgPG1ldGEgbmFtZT0iZmxhZ3MiIGNvbnRlbnQ9IiI+CiAgICAgICAgPG1ldGEgbmFtZT0iYXNzZXJ0IiBjb250ZW50PSJUaGUgd2lkZXN0IGJvcmRlciBpcyBkb21pbmFudCB3aGVuIHR3byBjZWxsIGJvcmRlcnMgY29sbGFwc2UuIj4KICAgICAgICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgogICAgICAgICAgICB0YWJsZQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHRkCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlcjogNXB4IGdyb292ZSBibGFjazsKICAgICAgICAgICAgICAgIGhlaWdodDogM2VtOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsMwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXI6IDEwcHggc29saWQgYmxhY2s7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGwxCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1ib3R0b20tY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDQKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWxlZnQtY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDUKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLXRvcC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsMgogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItcmlnaHQtY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgIDwvc3R5bGU+CiAgICA8L2hlYWQ+CiAgICA8Ym9keT4KICAgICAgICA8cD5UZXN0IHBhc3NlcyBpZiB0aGVyZSBpcyBubyByZWQgdmlzaWJsZSBvbiB0aGUgcGFnZS48L3A+CiAgICAgICAgPHRhYmxlPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQ+Z3Jvb3ZlPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDEiPmdyb292ZTwvdGQ+CiAgICAgICAgICAgICAgICA8dGQ+Z3Jvb3ZlPC90ZD4KICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMiI+Z3Jvb3ZlPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDMiPnNvbGlkPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDQiPmdyb292ZTwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD5ncm9vdmU8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsNSI+Z3Jvb3ZlPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5ncm9vdmU8L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgIDwvdGFibGU+CiAgICA8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAoYnkgYm9yZGVyIHdpZHRoKTogJ2hpZGRlbicgdnMuICdkYXNoZWQnIC0gYSBib3JkZXIgc3R5bGUgb2YgJ2hpZGRlbicgaXMgYWx3YXlzIHRoZSBkb21pbmFudCBib3JkZXI8L3RpdGxlPgogICAgICAgIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iVzNDIiBocmVmPSJodHRwOi8vd3d3LnczYy5vcmcvIj4KICAgICAgICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9Ik1pY3Jvc29mdCIgaHJlZj0iaHR0cDovL3d3dy5taWNyb3NvZnQuY29tLyI+CiAgICAgICAgPGxpbmsgcmVsPSJoZWxwIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCNib3JkZXItY29uZmxpY3QtcmVzb2x1dGlvbiI+CiAgICAgICAgPG1ldGEgbmFtZT0iZmxhZ3MiIGNvbnRlbnQ9IiI+CiAgICAgICAgPG1ldGEgbmFtZT0iYXNzZXJ0IiBjb250ZW50PSJUaGUgJ2hpZGRlbicgYm9yZGVyIHN0eWxlIHRha2VzIHByZWNlZGVuY2Ugb3ZlciBhbGwgc3R5bGUgYW5kIHdpZHRoIGRlZmluaXRpb25zLiI+CiAgICAgICAgPHN0eWxlIHR5cGU9InRleHQvY3NzIj4KICAgICAgICAgICAgdGFibGUKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsKICAgICAgICAgICAgfQogICAgICAgICAgICB0ZAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXI6IDVweCBoaWRkZW4gYmxhY2s7CiAgICAgICAgICAgICAgICBoZWlnaHQ6IDNlbTsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDMKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyOiAxMHB4IGRhc2hlZCBibGFjazsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDEKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWJvdHRvbS1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsNAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItbGVmdC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsNQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItdG9wLWNvbG9yOiByZWQ7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGwyCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1yaWdodC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgPC9zdHlsZT4KICAgIDwvaGVhZD4KICAgIDxib2R5PgogICAgICAgIDxwPlRlc3QgcGFzc2VzIGlmIHRoZXJlIGlzIG5vIHJlZCB2aXNpYmxlIG9uIHRoZSBwYWdlLjwvcD4KICAgICAgICA8dGFibGU+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD5oaWRkZW48L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMSI+aGlkZGVuPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5oaWRkZW48L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQgaWQ9ImNlbGwyIj5oaWRkZW48L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMyI+ZGFzaGVkPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDQiPmhpZGRlbjwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD5oaWRkZW48L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsNSI+aGlkZGVuPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5oaWRkZW48L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgIDwvdGFibGU+CiAgICA8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAoYnkgYm9yZGVyIHdpZHRoKTogJ2hpZGRlbicgdnMuICdkb3R0ZWQnIC0gYSBib3JkZXIgc3R5bGUgb2YgJ2hpZGRlbicgaXMgYWx3YXlzIHRoZSBkb21pbmFudCBib3JkZXI8L3RpdGxlPgogICAgICAgIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iVzNDIiBocmVmPSJodHRwOi8vd3d3LnczYy5vcmcvIj4KICAgICAgICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9Ik1pY3Jvc29mdCIgaHJlZj0iaHR0cDovL3d3dy5taWNyb3NvZnQuY29tLyI+CiAgICAgICAgPGxpbmsgcmVsPSJoZWxwIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCNib3JkZXItY29uZmxpY3QtcmVzb2x1dGlvbiI+CiAgICAgICAgPG1ldGEgbmFtZT0iZmxhZ3MiIGNvbnRlbnQ9IiI+CiAgICAgICAgPG1ldGEgbmFtZT0iYXNzZXJ0IiBjb250ZW50PSJUaGUgJ2hpZGRlbicgYm9yZGVyIHN0eWxlIHRha2VzIHByZWNlZGVuY2Ugb3ZlciBhbGwgc3R5bGUgYW5kIHdpZHRoIGRlZmluaXRpb25zLiI+CiAgICAgICAgPHN0eWxlIHR5cGU9InRleHQvY3NzIj4KICAgICAgICAgICAgdGFibGUKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsKICAgICAgICAgICAgfQogICAgICAgICAgICB0ZAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXI6IDVweCBoaWRkZW4gYmxhY2s7CiAgICAgICAgICAgICAgICBoZWlnaHQ6IDNlbTsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDMKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyOiAxMHB4IGRvdHRlZCBibGFjazsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDEKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWJvdHRvbS1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsNAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItbGVmdC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsNQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItdG9wLWNvbG9yOiByZWQ7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGwyCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1yaWdodC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgPC9zdHlsZT4KICAgIDwvaGVhZD4KICAgIDxib2R5PgogICAgICAgIDxwPlRlc3QgcGFzc2VzIGlmIHRoZXJlIGlzIG5vIHJlZCB2aXNpYmxlIG9uIHRoZSBwYWdlLjwvcD4KICAgICAgICA8dGFibGU+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD5oaWRkZW48L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMSI+aGlkZGVuPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5oaWRkZW48L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQgaWQ9ImNlbGwyIj5oaWRkZW48L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMyI+ZG90dGVkPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDQiPmhpZGRlbjwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD5oaWRkZW48L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsNSI+aGlkZGVuPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5oaWRkZW48L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgIDwvdGFibGU+CiAgICA8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAoYnkgYm9yZGVyIHdpZHRoKTogJ2hpZGRlbicgdnMuICdkb3VibGUnIC0gYSBib3JkZXIgc3R5bGUgb2YgJ2hpZGRlbicgaXMgYWx3YXlzIHRoZSBkb21pbmFudCBib3JkZXI8L3RpdGxlPgogICAgICAgIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iVzNDIiBocmVmPSJodHRwOi8vd3d3LnczYy5vcmcvIj4KICAgICAgICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9Ik1pY3Jvc29mdCIgaHJlZj0iaHR0cDovL3d3dy5taWNyb3NvZnQuY29tLyI+CiAgICAgICAgPGxpbmsgcmVsPSJoZWxwIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCNib3JkZXItY29uZmxpY3QtcmVzb2x1dGlvbiI+CiAgICAgICAgPG1ldGEgbmFtZT0iZmxhZ3MiIGNvbnRlbnQ9IiI+CiAgICAgICAgPG1ldGEgbmFtZT0iYXNzZXJ0IiBjb250ZW50PSJUaGUgJ2hpZGRlbicgYm9yZGVyIHN0eWxlIHRha2VzIHByZWNlZGVuY2Ugb3ZlciBhbGwgc3R5bGUgYW5kIHdpZHRoIGRlZmluaXRpb25zLiI+CiAgICAgICAgPHN0eWxlIHR5cGU9InRleHQvY3NzIj4KICAgICAgICAgICAgdGFibGUKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsKICAgICAgICAgICAgfQogICAgICAgICAgICB0ZAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXI6IDVweCBoaWRkZW4gYmxhY2s7CiAgICAgICAgICAgICAgICBoZWlnaHQ6IDNlbTsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDMKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyOiAxMHB4IGRvdWJsZSBibGFjazsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDEKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWJvdHRvbS1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsNAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItbGVmdC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsNQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItdG9wLWNvbG9yOiByZWQ7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGwyCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1yaWdodC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgPC9zdHlsZT4KICAgIDwvaGVhZD4KICAgIDxib2R5PgogICAgICAgIDxwPlRlc3QgcGFzc2VzIGlmIHRoZXJlIGlzIG5vIHJlZCB2aXNpYmxlIG9uIHRoZSBwYWdlLjwvcD4KICAgICAgICA8dGFibGU+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD5oaWRkZW48L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMSI+aGlkZGVuPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5oaWRkZW48L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQgaWQ9ImNlbGwyIj5oaWRkZW48L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMyI+ZG91YmxlPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDQiPmhpZGRlbjwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD5oaWRkZW48L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsNSI+aGlkZGVuPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5oaWRkZW48L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgIDwvdGFibGU+CiAgICA8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAoYnkgYm9yZGVyIHdpZHRoKTogJ2hpZGRlbicgdnMuICdncm9vdmUnIC0gYSBib3JkZXIgc3R5bGUgb2YgJ2hpZGRlbicgaXMgYWx3YXlzIHRoZSBkb21pbmFudCBib3JkZXI8L3RpdGxlPgogICAgICAgIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iVzNDIiBocmVmPSJodHRwOi8vd3d3LnczYy5vcmcvIj4KICAgICAgICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9Ik1pY3Jvc29mdCIgaHJlZj0iaHR0cDovL3d3dy5taWNyb3NvZnQuY29tLyI+CiAgICAgICAgPGxpbmsgcmVsPSJoZWxwIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCNib3JkZXItY29uZmxpY3QtcmVzb2x1dGlvbiI+CiAgICAgICAgPG1ldGEgbmFtZT0iZmxhZ3MiIGNvbnRlbnQ9IiI+CiAgICAgICAgPG1ldGEgbmFtZT0iYXNzZXJ0IiBjb250ZW50PSJUaGUgJ2hpZGRlbicgYm9yZGVyIHN0eWxlIHRha2VzIHByZWNlZGVuY2Ugb3ZlciBhbGwgc3R5bGUgYW5kIHdpZHRoIGRlZmluaXRpb25zLiI+CiAgICAgICAgPHN0eWxlIHR5cGU9InRleHQvY3NzIj4KICAgICAgICAgICAgdGFibGUKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsKICAgICAgICAgICAgfQogICAgICAgICAgICB0ZAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXI6IDVweCBoaWRkZW4gYmxhY2s7CiAgICAgICAgICAgICAgICBoZWlnaHQ6IDNlbTsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDMKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyOiAxMHB4IGdyb292ZSBibGFjazsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDEKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWJvdHRvbS1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsNAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItbGVmdC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsNQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItdG9wLWNvbG9yOiByZWQ7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGwyCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1yaWdodC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgPC9zdHlsZT4KICAgIDwvaGVhZD4KICAgIDxib2R5PgogICAgICAgIDxwPlRlc3QgcGFzc2VzIGlmIHRoZXJlIGlzIG5vIHJlZCB2aXNpYmxlIG9uIHRoZSBwYWdlLjwvcD4KICAgICAgICA8dGFibGU+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD5oaWRkZW48L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMSI+aGlkZGVuPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5oaWRkZW48L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQgaWQ9ImNlbGwyIj5oaWRkZW48L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMyI+Z3Jvb3ZlPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDQiPmhpZGRlbjwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD5oaWRkZW48L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsNSI+aGlkZGVuPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5oaWRkZW48L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgIDwvdGFibGU+CiAgICA8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAoYnkgYm9yZGVyIHdpZHRoKTogJ2hpZGRlbicgdnMuICdoaWRkZW4nIC0gYSBib3JkZXIgc3R5bGUgb2YgJ2hpZGRlbicgaXMgYWx3YXlzIHRoZSBkb21pbmFudCBib3JkZXI8L3RpdGxlPgogICAgICAgIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iVzNDIiBocmVmPSJodHRwOi8vd3d3LnczYy5vcmcvIj4KICAgICAgICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9Ik1pY3Jvc29mdCIgaHJlZj0iaHR0cDovL3d3dy5taWNyb3NvZnQuY29tLyI+CiAgICAgICAgPGxpbmsgcmVsPSJoZWxwIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCNib3JkZXItY29uZmxpY3QtcmVzb2x1dGlvbiI+CiAgICAgICAgPG1ldGEgbmFtZT0iZmxhZ3MiIGNvbnRlbnQ9IiI+CiAgICAgICAgPG1ldGEgbmFtZT0iYXNzZXJ0IiBjb250ZW50PSJUaGUgJ2hpZGRlbicgYm9yZGVyIHN0eWxlIHRha2VzIHByZWNlZGVuY2Ugb3ZlciBhbGwgc3R5bGUgYW5kIHdpZHRoIGRlZmluaXRpb25zLiI+CiAgICAgICAgPHN0eWxlIHR5cGU9InRleHQvY3NzIj4KICAgICAgICAgICAgdGFibGUKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsKICAgICAgICAgICAgfQogICAgICAgICAgICB0ZAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXI6IDVweCBoaWRkZW4gYmxhY2s7CiAgICAgICAgICAgICAgICBoZWlnaHQ6IDNlbTsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDMKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyOiAxMHB4IGhpZGRlbiBibGFjazsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDEKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWJvdHRvbS1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsNAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItbGVmdC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsNQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItdG9wLWNvbG9yOiByZWQ7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGwyCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1yaWdodC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgPC9zdHlsZT4KICAgIDwvaGVhZD4KICAgIDxib2R5PgogICAgICAgIDxwPlRlc3QgcGFzc2VzIGlmIHRoZXJlIGlzIG5vIHJlZCB2aXNpYmxlIG9uIHRoZSBwYWdlLjwvcD4KICAgICAgICA8dGFibGU+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD5oaWRkZW48L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMSI+aGlkZGVuPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5oaWRkZW48L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQgaWQ9ImNlbGwyIj5oaWRkZW48L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMyI+aGlkZGVuPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDQiPmhpZGRlbjwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD5oaWRkZW48L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsNSI+aGlkZGVuPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5oaWRkZW48L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgIDwvdGFibGU+CiAgICA8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAoYnkgYm9yZGVyIHdpZHRoKTogJ2hpZGRlbicgdnMuICdpbnNldCcgLSBhIGJvcmRlciBzdHlsZSBvZiAnaGlkZGVuJyBpcyBhbHdheXMgdGhlIGRvbWluYW50IGJvcmRlcjwvdGl0bGU+CiAgICAgICAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJXM0MiIGhyZWY9Imh0dHA6Ly93d3cudzNjLm9yZy8iPgogICAgICAgIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iTWljcm9zb2Z0IiBocmVmPSJodHRwOi8vd3d3Lm1pY3Jvc29mdC5jb20vIj4KICAgICAgICA8bGluayByZWw9ImhlbHAiIGhyZWY9Imh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL3RhYmxlcy5odG1sI2JvcmRlci1jb25mbGljdC1yZXNvbHV0aW9uIj4KICAgICAgICA8bWV0YSBuYW1lPSJmbGFncyIgY29udGVudD0iIj4KICAgICAgICA8bWV0YSBuYW1lPSJhc3NlcnQiIGNvbnRlbnQ9IlRoZSAnaGlkZGVuJyBib3JkZXIgc3R5bGUgdGFrZXMgcHJlY2VkZW5jZSBvdmVyIGFsbCBzdHlsZSBhbmQgd2lkdGggZGVmaW5pdGlvbnMuIj4KICAgICAgICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgogICAgICAgICAgICB0YWJsZQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHRkCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlcjogNXB4IGhpZGRlbiBibGFjazsKICAgICAgICAgICAgICAgIGhlaWdodDogM2VtOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsMwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXI6IDEwcHggaW5zZXQgYmxhY2s7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGwxCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1ib3R0b20tY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDQKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWxlZnQtY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDUKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLXRvcC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsMgogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItcmlnaHQtY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgIDwvc3R5bGU+CiAgICA8L2hlYWQ+CiAgICA8Ym9keT4KICAgICAgICA8cD5UZXN0IHBhc3NlcyBpZiB0aGVyZSBpcyBubyByZWQgdmlzaWJsZSBvbiB0aGUgcGFnZS48L3A+CiAgICAgICAgPHRhYmxlPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQ+aGlkZGVuPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDEiPmhpZGRlbjwvdGQ+CiAgICAgICAgICAgICAgICA8dGQ+aGlkZGVuPC90ZD4KICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMiI+aGlkZGVuPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDMiPmluc2V0PC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDQiPmhpZGRlbjwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD5oaWRkZW48L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsNSI+aGlkZGVuPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5oaWRkZW48L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgIDwvdGFibGU+CiAgICA8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAoYnkgYm9yZGVyIHdpZHRoKTogJ2hpZGRlbicgdnMuICdub25lJyAtIGEgYm9yZGVyIHN0eWxlIG9mICdoaWRkZW4nIGlzIGFsd2F5cyB0aGUgZG9taW5hbnQgYm9yZGVyPC90aXRsZT4KICAgICAgICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9IlczQyIgaHJlZj0iaHR0cDovL3d3dy53M2Mub3JnLyI+CiAgICAgICAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJNaWNyb3NvZnQiIGhyZWY9Imh0dHA6Ly93d3cubWljcm9zb2Z0LmNvbS8iPgogICAgICAgIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjYm9yZGVyLWNvbmZsaWN0LXJlc29sdXRpb24iPgogICAgICAgIDxtZXRhIG5hbWU9ImZsYWdzIiBjb250ZW50PSIiPgogICAgICAgIDxtZXRhIG5hbWU9ImFzc2VydCIgY29udGVudD0iVGhlICdoaWRkZW4nIGJvcmRlciBzdHlsZSB0YWtlcyBwcmVjZWRlbmNlIG92ZXIgYWxsIHN0eWxlIGFuZCB3aWR0aCBkZWZpbml0aW9ucy4iPgogICAgICAgIDxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+CiAgICAgICAgICAgIHRhYmxlCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgdGQKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyOiA1cHggaGlkZGVuIGJsYWNrOwogICAgICAgICAgICAgICAgaGVpZ2h0OiAzZW07CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGwxCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlcjogMTBweCBub25lIHJlZDsKICAgICAgICAgICAgfQogICAgICAgIDwvc3R5bGU+CiAgICA8L2hlYWQ+CiAgICA8Ym9keT4KICAgICAgICA8cD5UZXN0IHBhc3NlcyBpZiB0aGVyZSBpcyBubyByZWQgdmlzaWJsZSBvbiB0aGUgcGFnZS48L3A+CiAgICAgICAgPHRhYmxlPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQ+aGlkZGVuPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5oaWRkZW48L3RkPgogICAgICAgICAgICAgICAgPHRkPmhpZGRlbjwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD5oaWRkZW48L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMSI+bm9uZTwvdGQ+CiAgICAgICAgICAgICAgICA8dGQ+aGlkZGVuPC90ZD4KICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkPmhpZGRlbjwvdGQ+CiAgICAgICAgICAgICAgICA8dGQ+aGlkZGVuPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5oaWRkZW48L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgIDwvdGFibGU+CiAgICA8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAoYnkgYm9yZGVyIHdpZHRoKTogJ2hpZGRlbicgdnMuICdvdXRzZXQnIC0gYSBib3JkZXIgc3R5bGUgb2YgJ2hpZGRlbicgaXMgYWx3YXlzIHRoZSBkb21pbmFudCBib3JkZXI8L3RpdGxlPgogICAgICAgIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iVzNDIiBocmVmPSJodHRwOi8vd3d3LnczYy5vcmcvIj4KICAgICAgICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9Ik1pY3Jvc29mdCIgaHJlZj0iaHR0cDovL3d3dy5taWNyb3NvZnQuY29tLyI+CiAgICAgICAgPGxpbmsgcmVsPSJoZWxwIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCNib3JkZXItY29uZmxpY3QtcmVzb2x1dGlvbiI+CiAgICAgICAgPG1ldGEgbmFtZT0iZmxhZ3MiIGNvbnRlbnQ9IiI+CiAgICAgICAgPG1ldGEgbmFtZT0iYXNzZXJ0IiBjb250ZW50PSJUaGUgJ2hpZGRlbicgYm9yZGVyIHN0eWxlIHRha2VzIHByZWNlZGVuY2Ugb3ZlciBhbGwgc3R5bGUgYW5kIHdpZHRoIGRlZmluaXRpb25zLiI+CiAgICAgICAgPHN0eWxlIHR5cGU9InRleHQvY3NzIj4KICAgICAgICAgICAgdGFibGUKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsKICAgICAgICAgICAgfQogICAgICAgICAgICB0ZAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXI6IDVweCBoaWRkZW4gYmxhY2s7CiAgICAgICAgICAgICAgICBoZWlnaHQ6IDNlbTsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDMKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyOiAxMHB4IG91dHNldCBibGFjazsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDEKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWJvdHRvbS1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsNAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItbGVmdC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsNQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItdG9wLWNvbG9yOiByZWQ7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGwyCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1yaWdodC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgPC9zdHlsZT4KICAgIDwvaGVhZD4KICAgIDxib2R5PgogICAgICAgIDxwPlRlc3QgcGFzc2VzIGlmIHRoZXJlIGlzIG5vIHJlZCB2aXNpYmxlIG9uIHRoZSBwYWdlLjwvcD4KICAgICAgICA8dGFibGU+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD5oaWRkZW48L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMSI+aGlkZGVuPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5oaWRkZW48L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQgaWQ9ImNlbGwyIj5oaWRkZW48L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMyI+b3V0c2V0PC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDQiPmhpZGRlbjwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD5oaWRkZW48L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsNSI+aGlkZGVuPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5oaWRkZW48L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgIDwvdGFibGU+CiAgICA8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAoYnkgYm9yZGVyIHdpZHRoKTogJ2hpZGRlbicgdnMuICdyaWRnZScgLSBhIGJvcmRlciBzdHlsZSBvZiAnaGlkZGVuJyBpcyBhbHdheXMgdGhlIGRvbWluYW50IGJvcmRlcjwvdGl0bGU+CiAgICAgICAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJXM0MiIGhyZWY9Imh0dHA6Ly93d3cudzNjLm9yZy8iPgogICAgICAgIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iTWljcm9zb2Z0IiBocmVmPSJodHRwOi8vd3d3Lm1pY3Jvc29mdC5jb20vIj4KICAgICAgICA8bGluayByZWw9ImhlbHAiIGhyZWY9Imh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL3RhYmxlcy5odG1sI2JvcmRlci1jb25mbGljdC1yZXNvbHV0aW9uIj4KICAgICAgICA8bWV0YSBuYW1lPSJmbGFncyIgY29udGVudD0iIj4KICAgICAgICA8bWV0YSBuYW1lPSJhc3NlcnQiIGNvbnRlbnQ9IlRoZSAnaGlkZGVuJyBib3JkZXIgc3R5bGUgdGFrZXMgcHJlY2VkZW5jZSBvdmVyIGFsbCBzdHlsZSBhbmQgd2lkdGggZGVmaW5pdGlvbnMuIj4KICAgICAgICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgogICAgICAgICAgICB0YWJsZQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHRkCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlcjogNXB4IGhpZGRlbiBibGFjazsKICAgICAgICAgICAgICAgIGhlaWdodDogM2VtOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsMwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXI6IDEwcHggcmlkZ2UgYmxhY2s7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGwxCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1ib3R0b20tY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDQKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWxlZnQtY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDUKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLXRvcC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsMgogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItcmlnaHQtY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgIDwvc3R5bGU+CiAgICA8L2hlYWQ+CiAgICA8Ym9keT4KICAgICAgICA8cD5UZXN0IHBhc3NlcyBpZiB0aGVyZSBpcyBubyByZWQgdmlzaWJsZSBvbiB0aGUgcGFnZS48L3A+CiAgICAgICAgPHRhYmxlPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQ+aGlkZGVuPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDEiPmhpZGRlbjwvdGQ+CiAgICAgICAgICAgICAgICA8dGQ+aGlkZGVuPC90ZD4KICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMiI+aGlkZGVuPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDMiPnJpZGdlPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDQiPmhpZGRlbjwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD5oaWRkZW48L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsNSI+aGlkZGVuPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5oaWRkZW48L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgIDwvdGFibGU+CiAgICA8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAoYnkgYm9yZGVyIHdpZHRoKTogJ2hpZGRlbicgdnMuICdzb2xpZCcgLSBhIGJvcmRlciBzdHlsZSBvZiAnaGlkZGVuJyBpcyBhbHdheXMgdGhlIGRvbWluYW50IGJvcmRlcjwvdGl0bGU+CiAgICAgICAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJXM0MiIGhyZWY9Imh0dHA6Ly93d3cudzNjLm9yZy8iPgogICAgICAgIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iTWljcm9zb2Z0IiBocmVmPSJodHRwOi8vd3d3Lm1pY3Jvc29mdC5jb20vIj4KICAgICAgICA8bGluayByZWw9ImhlbHAiIGhyZWY9Imh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL3RhYmxlcy5odG1sI2JvcmRlci1jb25mbGljdC1yZXNvbHV0aW9uIj4KICAgICAgICA8bWV0YSBuYW1lPSJmbGFncyIgY29udGVudD0iIj4KICAgICAgICA8bWV0YSBuYW1lPSJhc3NlcnQiIGNvbnRlbnQ9IlRoZSAnaGlkZGVuJyBib3JkZXIgc3R5bGUgdGFrZXMgcHJlY2VkZW5jZSBvdmVyIGFsbCBzdHlsZSBhbmQgd2lkdGggZGVmaW5pdGlvbnMuIj4KICAgICAgICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgogICAgICAgICAgICB0YWJsZQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHRkCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlcjogNXB4IGhpZGRlbiBibGFjazsKICAgICAgICAgICAgICAgIGhlaWdodDogM2VtOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsMwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXI6IDEwcHggc29saWQgYmxhY2s7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGwxCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1ib3R0b20tY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDQKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWxlZnQtY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDUKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLXRvcC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsMgogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItcmlnaHQtY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgIDwvc3R5bGU+CiAgICA8L2hlYWQ+CiAgICA8Ym9keT4KICAgICAgICA8cD5UZXN0IHBhc3NlcyBpZiB0aGVyZSBpcyBubyByZWQgdmlzaWJsZSBvbiB0aGUgcGFnZS48L3A+CiAgICAgICAgPHRhYmxlPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQ+aGlkZGVuPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDEiPmhpZGRlbjwvdGQ+CiAgICAgICAgICAgICAgICA8dGQ+aGlkZGVuPC90ZD4KICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMiI+aGlkZGVuPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDMiPnNvbGlkPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDQiPmhpZGRlbjwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD5oaWRkZW48L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsNSI+aGlkZGVuPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5oaWRkZW48L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgIDwvdGFibGU+CiAgICA8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAoYnkgYm9yZGVyIHdpZHRoKTogJ2luc2V0JyB2cy4gJ2Rhc2hlZCcgLSBib3JkZXIgc3R5bGUgd2l0aCBsYXJnZXN0IHdpZHRoIGlzIHRoZSBkb21pbmFudCBib3JkZXI8L3RpdGxlPgogICAgICAgIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iVzNDIiBocmVmPSJodHRwOi8vd3d3LnczYy5vcmcvIj4KICAgICAgICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9Ik1pY3Jvc29mdCIgaHJlZj0iaHR0cDovL3d3dy5taWNyb3NvZnQuY29tLyI+CiAgICAgICAgPGxpbmsgcmVsPSJoZWxwIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCNib3JkZXItY29uZmxpY3QtcmVzb2x1dGlvbiI+CiAgICAgICAgPG1ldGEgbmFtZT0iZmxhZ3MiIGNvbnRlbnQ9IiI+CiAgICAgICAgPG1ldGEgbmFtZT0iYXNzZXJ0IiBjb250ZW50PSJUaGUgd2lkZXN0IGJvcmRlciBpcyBkb21pbmFudCB3aGVuIHR3byBjZWxsIGJvcmRlcnMgY29sbGFwc2UuIj4KICAgICAgICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgogICAgICAgICAgICB0YWJsZQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHRkCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlcjogNXB4IGluc2V0IGJsYWNrOwogICAgICAgICAgICAgICAgaGVpZ2h0OiAzZW07CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGwzCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlcjogMTBweCBkYXNoZWQgYmxhY2s7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGwxCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1ib3R0b20tY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDQKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWxlZnQtY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDUKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLXRvcC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsMgogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItcmlnaHQtY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgIDwvc3R5bGU+CiAgICA8L2hlYWQ+CiAgICA8Ym9keT4KICAgICAgICA8cD5UZXN0IHBhc3NlcyBpZiB0aGVyZSBpcyBubyByZWQgdmlzaWJsZSBvbiB0aGUgcGFnZS48L3A+CiAgICAgICAgPHRhYmxlPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQ+aW5zZXQ8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMSI+aW5zZXQ8L3RkPgogICAgICAgICAgICAgICAgPHRkPmluc2V0PC90ZD4KICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMiI+aW5zZXQ8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMyI+ZGFzaGVkPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDQiPmluc2V0PC90ZD4KICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkPmluc2V0PC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDUiPmluc2V0PC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5pbnNldDwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgPC90YWJsZT4KICAgIDwvYm9keT4KPC9odG1sPg==",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAoYnkgYm9yZGVyIHdpZHRoKTogJ2luc2V0JyB2cy4gJ2RvdHRlZCcgLSBib3JkZXIgc3R5bGUgd2l0aCBsYXJnZXN0IHdpZHRoIGlzIHRoZSBkb21pbmFudCBib3JkZXI8L3RpdGxlPgogICAgICAgIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iVzNDIiBocmVmPSJodHRwOi8vd3d3LnczYy5vcmcvIj4KICAgICAgICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9Ik1pY3Jvc29mdCIgaHJlZj0iaHR0cDovL3d3dy5taWNyb3NvZnQuY29tLyI+CiAgICAgICAgPGxpbmsgcmVsPSJoZWxwIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCNib3JkZXItY29uZmxpY3QtcmVzb2x1dGlvbiI+CiAgICAgICAgPG1ldGEgbmFtZT0iZmxhZ3MiIGNvbnRlbnQ9IiI+CiAgICAgICAgPG1ldGEgbmFtZT0iYXNzZXJ0IiBjb250ZW50PSJUaGUgd2lkZXN0IGJvcmRlciBpcyBkb21pbmFudCB3aGVuIHR3byBjZWxsIGJvcmRlcnMgY29sbGFwc2UuIj4KICAgICAgICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgogICAgICAgICAgICB0YWJsZQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHRkCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlcjogNXB4IGluc2V0IGJsYWNrOwogICAgICAgICAgICAgICAgaGVpZ2h0OiAzZW07CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGwzCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlcjogMTBweCBkb3R0ZWQgYmxhY2s7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGwxCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1ib3R0b20tY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDQKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWxlZnQtY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDUKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLXRvcC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsMgogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItcmlnaHQtY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgIDwvc3R5bGU+CiAgICA8L2hlYWQ+CiAgICA8Ym9keT4KICAgICAgICA8cD5UZXN0IHBhc3NlcyBpZiB0aGVyZSBpcyBubyByZWQgdmlzaWJsZSBvbiB0aGUgcGFnZS48L3A+CiAgICAgICAgPHRhYmxlPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQ+aW5zZXQ8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMSI+aW5zZXQ8L3RkPgogICAgICAgICAgICAgICAgPHRkPmluc2V0PC90ZD4KICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMiI+aW5zZXQ8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMyI+ZG90dGVkPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDQiPmluc2V0PC90ZD4KICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkPmluc2V0PC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDUiPmluc2V0PC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5pbnNldDwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgPC90YWJsZT4KICAgIDwvYm9keT4KPC9odG1sPg==",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAoYnkgYm9yZGVyIHdpZHRoKTogJ2luc2V0JyB2cy4gJ2RvdWJsZScgLSBib3JkZXIgc3R5bGUgd2l0aCBsYXJnZXN0IHdpZHRoIGlzIHRoZSBkb21pbmFudCBib3JkZXI8L3RpdGxlPgogICAgICAgIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iVzNDIiBocmVmPSJodHRwOi8vd3d3LnczYy5vcmcvIj4KICAgICAgICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9Ik1pY3Jvc29mdCIgaHJlZj0iaHR0cDovL3d3dy5taWNyb3NvZnQuY29tLyI+CiAgICAgICAgPGxpbmsgcmVsPSJoZWxwIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCNib3JkZXItY29uZmxpY3QtcmVzb2x1dGlvbiI+CiAgICAgICAgPG1ldGEgbmFtZT0iZmxhZ3MiIGNvbnRlbnQ9IiI+CiAgICAgICAgPG1ldGEgbmFtZT0iYXNzZXJ0IiBjb250ZW50PSJUaGUgd2lkZXN0IGJvcmRlciBpcyBkb21pbmFudCB3aGVuIHR3byBjZWxsIGJvcmRlcnMgY29sbGFwc2UuIj4KICAgICAgICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgogICAgICAgICAgICB0YWJsZQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHRkCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlcjogNXB4IGluc2V0IGJsYWNrOwogICAgICAgICAgICAgICAgaGVpZ2h0OiAzZW07CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGwzCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlcjogMTBweCBkb3VibGUgYmxhY2s7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGwxCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1ib3R0b20tY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDQKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWxlZnQtY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDUKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLXRvcC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsMgogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItcmlnaHQtY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgIDwvc3R5bGU+CiAgICA8L2hlYWQ+CiAgICA8Ym9keT4KICAgICAgICA8cD5UZXN0IHBhc3NlcyBpZiB0aGVyZSBpcyBubyByZWQgdmlzaWJsZSBvbiB0aGUgcGFnZS48L3A+CiAgICAgICAgPHRhYmxlPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQ+aW5zZXQ8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMSI+aW5zZXQ8L3RkPgogICAgICAgICAgICAgICAgPHRkPmluc2V0PC90ZD4KICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMiI+aW5zZXQ8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMyI+ZG91YmxlPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDQiPmluc2V0PC90ZD4KICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkPmluc2V0PC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDUiPmluc2V0PC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5pbnNldDwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgPC90YWJsZT4KICAgIDwvYm9keT4KPC9odG1sPg==",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAoYnkgYm9yZGVyIHdpZHRoKTogJ2luc2V0JyB2cy4gJ2dyb292ZScgLSBib3JkZXIgc3R5bGUgd2l0aCBsYXJnZXN0IHdpZHRoIGlzIHRoZSBkb21pbmFudCBib3JkZXI8L3RpdGxlPgogICAgICAgIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iVzNDIiBocmVmPSJodHRwOi8vd3d3LnczYy5vcmcvIj4KICAgICAgICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9Ik1pY3Jvc29mdCIgaHJlZj0iaHR0cDovL3d3dy5taWNyb3NvZnQuY29tLyI+CiAgICAgICAgPGxpbmsgcmVsPSJoZWxwIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCNib3JkZXItY29uZmxpY3QtcmVzb2x1dGlvbiI+CiAgICAgICAgPG1ldGEgbmFtZT0iZmxhZ3MiIGNvbnRlbnQ9IiI+CiAgICAgICAgPG1ldGEgbmFtZT0iYXNzZXJ0IiBjb250ZW50PSJUaGUgd2lkZXN0IGJvcmRlciBpcyBkb21pbmFudCB3aGVuIHR3byBjZWxsIGJvcmRlcnMgY29sbGFwc2UuIj4KICAgICAgICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgogICAgICAgICAgICB0YWJsZQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHRkCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlcjogNXB4IGluc2V0IGJsYWNrOwogICAgICAgICAgICAgICAgaGVpZ2h0OiAzZW07CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGwzCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlcjogMTBweCBncm9vdmUgYmxhY2s7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGwxCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1ib3R0b20tY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDQKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWxlZnQtY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDUKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLXRvcC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsMgogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItcmlnaHQtY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgIDwvc3R5bGU+CiAgICA8L2hlYWQ+CiAgICA8Ym9keT4KICAgICAgICA8cD5UZXN0IHBhc3NlcyBpZiB0aGVyZSBpcyBubyByZWQgdmlzaWJsZSBvbiB0aGUgcGFnZS48L3A+CiAgICAgICAgPHRhYmxlPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQ+aW5zZXQ8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMSI+aW5zZXQ8L3RkPgogICAgICAgICAgICAgICAgPHRkPmluc2V0PC90ZD4KICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMiI+aW5zZXQ8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMyI+Z3Jvb3ZlPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDQiPmluc2V0PC90ZD4KICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkPmluc2V0PC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDUiPmluc2V0PC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5pbnNldDwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgPC90YWJsZT4KICAgIDwvYm9keT4KPC9odG1sPg==",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAoYnkgYm9yZGVyIHdpZHRoKTogJ2luc2V0JyB2cy4gJ2hpZGRlbicgLSBhIGJvcmRlciBzdHlsZSBvZiAnaGlkZGVuJyBpcyBhbHdheXMgdGhlIGRvbWluYW50IGJvcmRlcjwvdGl0bGU+CiAgICAgICAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJXM0MiIGhyZWY9Imh0dHA6Ly93d3cudzNjLm9yZy8iPgogICAgICAgIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iTWljcm9zb2Z0IiBocmVmPSJodHRwOi8vd3d3Lm1pY3Jvc29mdC5jb20vIj4KICAgICAgICA8bGluayByZWw9ImhlbHAiIGhyZWY9Imh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL3RhYmxlcy5odG1sI2JvcmRlci1jb25mbGljdC1yZXNvbHV0aW9uIj4KICAgICAgICA8bWV0YSBuYW1lPSJmbGFncyIgY29udGVudD0iIj4KICAgICAgICA8bWV0YSBuYW1lPSJhc3NlcnQiIGNvbnRlbnQ9IlRoZSAnaGlkZGVuJyBib3JkZXIgc3R5bGUgdGFrZXMgcHJlY2VkZW5jZSBvdmVyIGFsbCBzdHlsZSBhbmQgd2lkdGggZGVmaW5pdGlvbnMuIj4KICAgICAgICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgogICAgICAgICAgICB0YWJsZQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHRkCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlcjogNXB4IGluc2V0IGJsYWNrOwogICAgICAgICAgICAgICAgaGVpZ2h0OiAzZW07CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGwzCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlcjogMTBweCBoaWRkZW4gYmxhY2s7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGwxCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1ib3R0b20tY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDQKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWxlZnQtY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDUKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLXRvcC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsMgogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItcmlnaHQtY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgIDwvc3R5bGU+CiAgICA8L2hlYWQ+CiAgICA8Ym9keT4KICAgICAgICA8cD5UZXN0IHBhc3NlcyBpZiB0aGVyZSBpcyBubyByZWQgdmlzaWJsZSBvbiB0aGUgcGFnZS48L3A+CiAgICAgICAgPHRhYmxlPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQ+aW5zZXQ8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMSI+aW5zZXQ8L3RkPgogICAgICAgICAgICAgICAgPHRkPmluc2V0PC90ZD4KICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMiI+aW5zZXQ8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMyI+aGlkZGVuPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDQiPmluc2V0PC90ZD4KICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkPmluc2V0PC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDUiPmluc2V0PC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5pbnNldDwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgPC90YWJsZT4KICAgIDwvYm9keT4KPC9odG1sPg==",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAoYnkgYm9yZGVyIHdpZHRoKTogJ2luc2V0JyB2cy4gJ2luc2V0JyAtIGJvcmRlciBzdHlsZSB3aXRoIGxhcmdlc3Qgd2lkdGggaXMgdGhlIGRvbWluYW50IGJvcmRlcjwvdGl0bGU+CiAgICAgICAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJXM0MiIGhyZWY9Imh0dHA6Ly93d3cudzNjLm9yZy8iPgogICAgICAgIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iTWljcm9zb2Z0IiBocmVmPSJodHRwOi8vd3d3Lm1pY3Jvc29mdC5jb20vIj4KICAgICAgICA8bGluayByZWw9ImhlbHAiIGhyZWY9Imh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL3RhYmxlcy5odG1sI2JvcmRlci1jb25mbGljdC1yZXNvbHV0aW9uIj4KICAgICAgICA8bWV0YSBuYW1lPSJmbGFncyIgY29udGVudD0iIj4KICAgICAgICA8bWV0YSBuYW1lPSJhc3NlcnQiIGNvbnRlbnQ9IlRoZSB3aWRlc3QgYm9yZGVyIGlzIGRvbWluYW50IHdoZW4gdHdvIGNlbGwgYm9yZGVycyBjb2xsYXBzZS4iPgogICAgICAgIDxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+CiAgICAgICAgICAgIHRhYmxlCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgdGQKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyOiA1cHggaW5zZXQgYmxhY2s7CiAgICAgICAgICAgICAgICBoZWlnaHQ6IDNlbTsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDMKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyOiAxMHB4IGluc2V0IGJsYWNrOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsMQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItYm90dG9tLWNvbG9yOiByZWQ7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGw0CiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1sZWZ0LWNvbG9yOiByZWQ7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGw1CiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci10b3AtY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDIKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLXJpZ2h0LWNvbG9yOiByZWQ7CiAgICAgICAgICAgIH0KICAgICAgICA8L3N0eWxlPgogICAgPC9oZWFkPgogICAgPGJvZHk+CiAgICAgICAgPHA+VGVzdCBwYXNzZXMgaWYgdGhlcmUgaXMgbm8gcmVkIHZpc2libGUgb24gdGhlIHBhZ2UuPC9wPgogICAgICAgIDx0YWJsZT4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkPmluc2V0PC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDEiPmluc2V0PC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5pbnNldDwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDIiPmluc2V0PC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDMiPmluc2V0PC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDQiPmluc2V0PC90ZD4KICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkPmluc2V0PC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDUiPmluc2V0PC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5pbnNldDwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgPC90YWJsZT4KICAgIDwvYm9keT4KPC9odG1sPg==",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAoYnkgYm9yZGVyIHdpZHRoKTogJ2luc2V0JyB2cy4gJ25vbmUnIC0gYm9yZGVyIHN0eWxlIHdpdGggbGFyZ2VzdCB3aWR0aCBpcyB0aGUgZG9taW5hbnQgYm9yZGVyPC90aXRsZT4KICAgICAgICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9IlczQyIgaHJlZj0iaHR0cDovL3d3dy53M2Mub3JnLyI+CiAgICAgICAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJNaWNyb3NvZnQiIGhyZWY9Imh0dHA6Ly93d3cubWljcm9zb2Z0LmNvbS8iPgogICAgICAgIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjYm9yZGVyLWNvbmZsaWN0LXJlc29sdXRpb24iPgogICAgICAgIDxtZXRhIG5hbWU9ImZsYWdzIiBjb250ZW50PSIiPgogICAgICAgIDxtZXRhIG5hbWU9ImFzc2VydCIgY29udGVudD0iVGhlIHdpZGVzdCBib3JkZXIgaXMgZG9taW5hbnQgd2hlbiB0d28gY2VsbCBib3JkZXJzIGNvbGxhcHNlLiI+CiAgICAgICAgPHN0eWxlIHR5cGU9InRleHQvY3NzIj4KICAgICAgICAgICAgdGFibGUKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsKICAgICAgICAgICAgfQogICAgICAgICAgICB0ZAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXI6IDVweCBpbnNldCBibGFjazsKICAgICAgICAgICAgICAgIGhlaWdodDogM2VtOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsMQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXI6IDEwcHggbm9uZSByZWQ7CiAgICAgICAgICAgIH0KICAgICAgICA8L3N0eWxlPgogICAgPC9oZWFkPgogICAgPGJvZHk+CiAgICAgICAgPHA+VGVzdCBwYXNzZXMgaWYgdGhlcmUgaXMgbm8gcmVkIHZpc2libGUgb24gdGhlIHBhZ2UuPC9wPgogICAgICAgIDx0YWJsZT4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkPmluc2V0PC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5pbnNldDwvdGQ+CiAgICAgICAgICAgICAgICA8dGQ+aW5zZXQ8L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQ+aW5zZXQ8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMSI+bm9uZTwvdGQ+CiAgICAgICAgICAgICAgICA8dGQ+aW5zZXQ8L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQ+aW5zZXQ8L3RkPgogICAgICAgICAgICAgICAgPHRkPmluc2V0PC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5pbnNldDwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgPC90YWJsZT4KICAgIDwvYm9keT4KPC9odG1sPg==",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAoYnkgYm9yZGVyIHdpZHRoKTogJ2luc2V0JyB2cy4gJ291dHNldCcgLSBib3JkZXIgc3R5bGUgd2l0aCBsYXJnZXN0IHdpZHRoIGlzIHRoZSBkb21pbmFudCBib3JkZXI8L3RpdGxlPgogICAgICAgIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iVzNDIiBocmVmPSJodHRwOi8vd3d3LnczYy5vcmcvIj4KICAgICAgICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9Ik1pY3Jvc29mdCIgaHJlZj0iaHR0cDovL3d3dy5taWNyb3NvZnQuY29tLyI+CiAgICAgICAgPGxpbmsgcmVsPSJoZWxwIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCNib3JkZXItY29uZmxpY3QtcmVzb2x1dGlvbiI+CiAgICAgICAgPG1ldGEgbmFtZT0iZmxhZ3MiIGNvbnRlbnQ9IiI+CiAgICAgICAgPG1ldGEgbmFtZT0iYXNzZXJ0IiBjb250ZW50PSJUaGUgd2lkZXN0IGJvcmRlciBpcyBkb21pbmFudCB3aGVuIHR3byBjZWxsIGJvcmRlcnMgY29sbGFwc2UuIj4KICAgICAgICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgogICAgICAgICAgICB0YWJsZQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHRkCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlcjogNXB4IGluc2V0IGJsYWNrOwogICAgICAgICAgICAgICAgaGVpZ2h0OiAzZW07CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGwzCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlcjogMTBweCBvdXRzZXQgYmxhY2s7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGwxCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1ib3R0b20tY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDQKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWxlZnQtY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDUKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLXRvcC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsMgogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItcmlnaHQtY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgIDwvc3R5bGU+CiAgICA8L2hlYWQ+CiAgICA8Ym9keT4KICAgICAgICA8cD5UZXN0IHBhc3NlcyBpZiB0aGVyZSBpcyBubyByZWQgdmlzaWJsZSBvbiB0aGUgcGFnZS48L3A+CiAgICAgICAgPHRhYmxlPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQ+aW5zZXQ8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMSI+aW5zZXQ8L3RkPgogICAgICAgICAgICAgICAgPHRkPmluc2V0PC90ZD4KICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMiI+aW5zZXQ8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMyI+b3V0c2V0PC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDQiPmluc2V0PC90ZD4KICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkPmluc2V0PC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDUiPmluc2V0PC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5pbnNldDwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgPC90YWJsZT4KICAgIDwvYm9keT4KPC9odG1sPg==",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAoYnkgYm9yZGVyIHdpZHRoKTogJ2luc2V0JyB2cy4gJ3JpZGdlJyAtIGJvcmRlciBzdHlsZSB3aXRoIGxhcmdlc3Qgd2lkdGggaXMgdGhlIGRvbWluYW50IGJvcmRlcjwvdGl0bGU+CiAgICAgICAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJXM0MiIGhyZWY9Imh0dHA6Ly93d3cudzNjLm9yZy8iPgogICAgICAgIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iTWljcm9zb2Z0IiBocmVmPSJodHRwOi8vd3d3Lm1pY3Jvc29mdC5jb20vIj4KICAgICAgICA8bGluayByZWw9ImhlbHAiIGhyZWY9Imh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL3RhYmxlcy5odG1sI2JvcmRlci1jb25mbGljdC1yZXNvbHV0aW9uIj4KICAgICAgICA8bWV0YSBuYW1lPSJmbGFncyIgY29udGVudD0iIj4KICAgICAgICA8bWV0YSBuYW1lPSJhc3NlcnQiIGNvbnRlbnQ9IlRoZSB3aWRlc3QgYm9yZGVyIGlzIGRvbWluYW50IHdoZW4gdHdvIGNlbGwgYm9yZGVycyBjb2xsYXBzZS4iPgogICAgICAgIDxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+CiAgICAgICAgICAgIHRhYmxlCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgdGQKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyOiA1cHggaW5zZXQgYmxhY2s7CiAgICAgICAgICAgICAgICBoZWlnaHQ6IDNlbTsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDMKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyOiAxMHB4IHJpZGdlIGJsYWNrOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsMQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItYm90dG9tLWNvbG9yOiByZWQ7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGw0CiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1sZWZ0LWNvbG9yOiByZWQ7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGw1CiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci10b3AtY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDIKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLXJpZ2h0LWNvbG9yOiByZWQ7CiAgICAgICAgICAgIH0KICAgICAgICA8L3N0eWxlPgogICAgPC9oZWFkPgogICAgPGJvZHk+CiAgICAgICAgPHA+VGVzdCBwYXNzZXMgaWYgdGhlcmUgaXMgbm8gcmVkIHZpc2libGUgb24gdGhlIHBhZ2UuPC9wPgogICAgICAgIDx0YWJsZT4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkPmluc2V0PC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDEiPmluc2V0PC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5pbnNldDwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDIiPmluc2V0PC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDMiPnJpZGdlPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDQiPmluc2V0PC90ZD4KICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkPmluc2V0PC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDUiPmluc2V0PC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5pbnNldDwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgPC90YWJsZT4KICAgIDwvYm9keT4KPC9odG1sPg==",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAoYnkgYm9yZGVyIHdpZHRoKTogJ2luc2V0JyB2cy4gJ3NvbGlkJyAtIGJvcmRlciBzdHlsZSB3aXRoIGxhcmdlc3Qgd2lkdGggaXMgdGhlIGRvbWluYW50IGJvcmRlcjwvdGl0bGU+CiAgICAgICAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJXM0MiIGhyZWY9Imh0dHA6Ly93d3cudzNjLm9yZy8iPgogICAgICAgIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iTWljcm9zb2Z0IiBocmVmPSJodHRwOi8vd3d3Lm1pY3Jvc29mdC5jb20vIj4KICAgICAgICA8bGluayByZWw9ImhlbHAiIGhyZWY9Imh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL3RhYmxlcy5odG1sI2JvcmRlci1jb25mbGljdC1yZXNvbHV0aW9uIj4KICAgICAgICA8bWV0YSBuYW1lPSJmbGFncyIgY29udGVudD0iIj4KICAgICAgICA8bWV0YSBuYW1lPSJhc3NlcnQiIGNvbnRlbnQ9IlRoZSB3aWRlc3QgYm9yZGVyIGlzIGRvbWluYW50IHdoZW4gdHdvIGNlbGwgYm9yZGVycyBjb2xsYXBzZS4iPgogICAgICAgIDxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+CiAgICAgICAgICAgIHRhYmxlCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgdGQKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyOiA1cHggaW5zZXQgYmxhY2s7CiAgICAgICAgICAgICAgICBoZWlnaHQ6IDNlbTsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDMKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyOiAxMHB4IHNvbGlkIGJsYWNrOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsMQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItYm90dG9tLWNvbG9yOiByZWQ7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGw0CiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1sZWZ0LWNvbG9yOiByZWQ7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGw1CiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci10b3AtY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDIKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLXJpZ2h0LWNvbG9yOiByZWQ7CiAgICAgICAgICAgIH0KICAgICAgICA8L3N0eWxlPgogICAgPC9oZWFkPgogICAgPGJvZHk+CiAgICAgICAgPHA+VGVzdCBwYXNzZXMgaWYgdGhlcmUgaXMgbm8gcmVkIHZpc2libGUgb24gdGhlIHBhZ2UuPC9wPgogICAgICAgIDx0YWJsZT4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkPmluc2V0PC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDEiPmluc2V0PC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5pbnNldDwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDIiPmluc2V0PC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDMiPnNvbGlkPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDQiPmluc2V0PC90ZD4KICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkPmluc2V0PC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDUiPmluc2V0PC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5pbnNldDwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgPC90YWJsZT4KICAgIDwvYm9keT4KPC9odG1sPg==",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAoYnkgYm9yZGVyIHdpZHRoKTogJ25vbmUnIHZzLiAnZGFzaGVkJyAtIGJvcmRlciBzdHlsZSB3aXRoIGxhcmdlc3Qgd2lkdGggaXMgdGhlIGRvbWluYW50IGJvcmRlcjwvdGl0bGU+CiAgICAgICAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJXM0MiIGhyZWY9Imh0dHA6Ly93d3cudzNjLm9yZy8iPgogICAgICAgIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iTWljcm9zb2Z0IiBocmVmPSJodHRwOi8vd3d3Lm1pY3Jvc29mdC5jb20vIj4KICAgICAgICA8bGluayByZWw9ImhlbHAiIGhyZWY9Imh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL3RhYmxlcy5odG1sI2JvcmRlci1jb25mbGljdC1yZXNvbHV0aW9uIj4KICAgICAgICA8bWV0YSBuYW1lPSJmbGFncyIgY29udGVudD0iIj4KICAgICAgICA8bWV0YSBuYW1lPSJhc3NlcnQiIGNvbnRlbnQ9IlRoZSB3aWRlc3QgYm9yZGVyIGlzIGRvbWluYW50IHdoZW4gdHdvIGNlbGwgYm9yZGVycyBjb2xsYXBzZS4iPgogICAgICAgIDxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+CiAgICAgICAgICAgIHRhYmxlCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgdGQKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyOiA1cHggbm9uZSBibGFjazsKICAgICAgICAgICAgICAgIGhlaWdodDogM2VtOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsMwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXI6IDEwcHggZGFzaGVkIGJsYWNrOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsMQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItYm90dG9tLWNvbG9yOiByZWQ7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGw0CiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1sZWZ0LWNvbG9yOiByZWQ7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGw1CiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci10b3AtY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDIKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLXJpZ2h0LWNvbG9yOiByZWQ7CiAgICAgICAgICAgIH0KICAgICAgICA8L3N0eWxlPgogICAgPC9oZWFkPgogICAgPGJvZHk+CiAgICAgICAgPHA+VGVzdCBwYXNzZXMgaWYgdGhlcmUgaXMgbm8gcmVkIHZpc2libGUgb24gdGhlIHBhZ2UuPC9wPgogICAgICAgIDx0YWJsZT4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkPm5vbmU8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMSI+bm9uZTwvdGQ+CiAgICAgICAgICAgICAgICA8dGQ+bm9uZTwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDIiPm5vbmU8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMyI+ZGFzaGVkPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDQiPm5vbmU8L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQ+bm9uZTwvdGQ+CiAgICAgICAgICAgICAgICA8dGQgaWQ9ImNlbGw1Ij5ub25lPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5ub25lPC90ZD4KICAgICAgICAgICAgPC90cj4KICAgICAgICA8L3RhYmxlPgogICAgPC9ib2R5Pgo8L2h0bWw+",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAoYnkgYm9yZGVyIHdpZHRoKTogJ25vbmUnIHZzLiAnZG90dGVkJyAtIGJvcmRlciBzdHlsZSB3aXRoIGxhcmdlc3Qgd2lkdGggaXMgdGhlIGRvbWluYW50IGJvcmRlcjwvdGl0bGU+CiAgICAgICAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJXM0MiIGhyZWY9Imh0dHA6Ly93d3cudzNjLm9yZy8iPgogICAgICAgIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iTWljcm9zb2Z0IiBocmVmPSJodHRwOi8vd3d3Lm1pY3Jvc29mdC5jb20vIj4KICAgICAgICA8bGluayByZWw9ImhlbHAiIGhyZWY9Imh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL3RhYmxlcy5odG1sI2JvcmRlci1jb25mbGljdC1yZXNvbHV0aW9uIj4KICAgICAgICA8bWV0YSBuYW1lPSJmbGFncyIgY29udGVudD0iIj4KICAgICAgICA8bWV0YSBuYW1lPSJhc3NlcnQiIGNvbnRlbnQ9IlRoZSB3aWRlc3QgYm9yZGVyIGlzIGRvbWluYW50IHdoZW4gdHdvIGNlbGwgYm9yZGVycyBjb2xsYXBzZS4iPgogICAgICAgIDxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+CiAgICAgICAgICAgIHRhYmxlCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgdGQKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyOiA1cHggbm9uZSBibGFjazsKICAgICAgICAgICAgICAgIGhlaWdodDogM2VtOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsMwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXI6IDEwcHggZG90dGVkIGJsYWNrOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsMQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItYm90dG9tLWNvbG9yOiByZWQ7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGw0CiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1sZWZ0LWNvbG9yOiByZWQ7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGw1CiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci10b3AtY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDIKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLXJpZ2h0LWNvbG9yOiByZWQ7CiAgICAgICAgICAgIH0KICAgICAgICA8L3N0eWxlPgogICAgPC9oZWFkPgogICAgPGJvZHk+CiAgICAgICAgPHA+VGVzdCBwYXNzZXMgaWYgdGhlcmUgaXMgbm8gcmVkIHZpc2libGUgb24gdGhlIHBhZ2UuPC9wPgogICAgICAgIDx0YWJsZT4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkPm5vbmU8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMSI+bm9uZTwvdGQ+CiAgICAgICAgICAgICAgICA8dGQ+bm9uZTwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDIiPm5vbmU8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMyI+ZG90dGVkPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDQiPm5vbmU8L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQ+bm9uZTwvdGQ+CiAgICAgICAgICAgICAgICA8dGQgaWQ9ImNlbGw1Ij5ub25lPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5ub25lPC90ZD4KICAgICAgICAgICAgPC90cj4KICAgICAgICA8L3RhYmxlPgogICAgPC9ib2R5Pgo8L2h0bWw+",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAoYnkgYm9yZGVyIHdpZHRoKTogJ25vbmUnIHZzLiAnZG91YmxlJyAtIGJvcmRlciBzdHlsZSB3aXRoIGxhcmdlc3Qgd2lkdGggaXMgdGhlIGRvbWluYW50IGJvcmRlcjwvdGl0bGU+CiAgICAgICAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJXM0MiIGhyZWY9Imh0dHA6Ly93d3cudzNjLm9yZy8iPgogICAgICAgIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iTWljcm9zb2Z0IiBocmVmPSJodHRwOi8vd3d3Lm1pY3Jvc29mdC5jb20vIj4KICAgICAgICA8bGluayByZWw9ImhlbHAiIGhyZWY9Imh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL3RhYmxlcy5odG1sI2JvcmRlci1jb25mbGljdC1yZXNvbHV0aW9uIj4KICAgICAgICA8bWV0YSBuYW1lPSJmbGFncyIgY29udGVudD0iIj4KICAgICAgICA8bWV0YSBuYW1lPSJhc3NlcnQiIGNvbnRlbnQ9IlRoZSB3aWRlc3QgYm9yZGVyIGlzIGRvbWluYW50IHdoZW4gdHdvIGNlbGwgYm9yZGVycyBjb2xsYXBzZS4iPgogICAgICAgIDxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+CiAgICAgICAgICAgIHRhYmxlCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgdGQKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyOiA1cHggbm9uZSBibGFjazsKICAgICAgICAgICAgICAgIGhlaWdodDogM2VtOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsMwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXI6IDEwcHggZG91YmxlIGJsYWNrOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsMQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItYm90dG9tLWNvbG9yOiByZWQ7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGw0CiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1sZWZ0LWNvbG9yOiByZWQ7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGw1CiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci10b3AtY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDIKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLXJpZ2h0LWNvbG9yOiByZWQ7CiAgICAgICAgICAgIH0KICAgICAgICA8L3N0eWxlPgogICAgPC9oZWFkPgogICAgPGJvZHk+CiAgICAgICAgPHA+VGVzdCBwYXNzZXMgaWYgdGhlcmUgaXMgbm8gcmVkIHZpc2libGUgb24gdGhlIHBhZ2UuPC9wPgogICAgICAgIDx0YWJsZT4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkPm5vbmU8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMSI+bm9uZTwvdGQ+CiAgICAgICAgICAgICAgICA8dGQ+bm9uZTwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDIiPm5vbmU8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMyI+ZG91YmxlPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDQiPm5vbmU8L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQ+bm9uZTwvdGQ+CiAgICAgICAgICAgICAgICA8dGQgaWQ9ImNlbGw1Ij5ub25lPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5ub25lPC90ZD4KICAgICAgICAgICAgPC90cj4KICAgICAgICA8L3RhYmxlPgogICAgPC9ib2R5Pgo8L2h0bWw+",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAoYnkgYm9yZGVyIHdpZHRoKTogJ25vbmUnIHZzLiAnZ3Jvb3ZlJyAtIGJvcmRlciBzdHlsZSB3aXRoIGxhcmdlc3Qgd2lkdGggaXMgdGhlIGRvbWluYW50IGJvcmRlcjwvdGl0bGU+CiAgICAgICAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJXM0MiIGhyZWY9Imh0dHA6Ly93d3cudzNjLm9yZy8iPgogICAgICAgIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iTWljcm9zb2Z0IiBocmVmPSJodHRwOi8vd3d3Lm1pY3Jvc29mdC5jb20vIj4KICAgICAgICA8bGluayByZWw9ImhlbHAiIGhyZWY9Imh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL3RhYmxlcy5odG1sI2JvcmRlci1jb25mbGljdC1yZXNvbHV0aW9uIj4KICAgICAgICA8bWV0YSBuYW1lPSJmbGFncyIgY29udGVudD0iIj4KICAgICAgICA8bWV0YSBuYW1lPSJhc3NlcnQiIGNvbnRlbnQ9IlRoZSB3aWRlc3QgYm9yZGVyIGlzIGRvbWluYW50IHdoZW4gdHdvIGNlbGwgYm9yZGVycyBjb2xsYXBzZS4iPgogICAgICAgIDxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+CiAgICAgICAgICAgIHRhYmxlCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgdGQKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyOiA1cHggbm9uZSBibGFjazsKICAgICAgICAgICAgICAgIGhlaWdodDogM2VtOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsMwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXI6IDEwcHggZ3Jvb3ZlIGJsYWNrOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsMQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItYm90dG9tLWNvbG9yOiByZWQ7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGw0CiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1sZWZ0LWNvbG9yOiByZWQ7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGw1CiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci10b3AtY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDIKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLXJpZ2h0LWNvbG9yOiByZWQ7CiAgICAgICAgICAgIH0KICAgICAgICA8L3N0eWxlPgogICAgPC9oZWFkPgogICAgPGJvZHk+CiAgICAgICAgPHA+VGVzdCBwYXNzZXMgaWYgdGhlcmUgaXMgbm8gcmVkIHZpc2libGUgb24gdGhlIHBhZ2UuPC9wPgogICAgICAgIDx0YWJsZT4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkPm5vbmU8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMSI+bm9uZTwvdGQ+CiAgICAgICAgICAgICAgICA8dGQ+bm9uZTwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDIiPm5vbmU8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMyI+Z3Jvb3ZlPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDQiPm5vbmU8L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQ+bm9uZTwvdGQ+CiAgICAgICAgICAgICAgICA8dGQgaWQ9ImNlbGw1Ij5ub25lPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5ub25lPC90ZD4KICAgICAgICAgICAgPC90cj4KICAgICAgICA8L3RhYmxlPgogICAgPC9ib2R5Pgo8L2h0bWw+",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAoYnkgYm9yZGVyIHdpZHRoKTogJ25vbmUnIHZzLiAnaGlkZGVuJyAtIGEgYm9yZGVyIHN0eWxlIG9mICdoaWRkZW4nIGlzIGFsd2F5cyB0aGUgZG9taW5hbnQgYm9yZGVyPC90aXRsZT4KICAgICAgICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9IlczQyIgaHJlZj0iaHR0cDovL3d3dy53M2Mub3JnLyI+CiAgICAgICAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJNaWNyb3NvZnQiIGhyZWY9Imh0dHA6Ly93d3cubWljcm9zb2Z0LmNvbS8iPgogICAgICAgIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjYm9yZGVyLWNvbmZsaWN0LXJlc29sdXRpb24iPgogICAgICAgIDxtZXRhIG5hbWU9ImZsYWdzIiBjb250ZW50PSIiPgogICAgICAgIDxtZXRhIG5hbWU9ImFzc2VydCIgY29udGVudD0iVGhlICdoaWRkZW4nIGJvcmRlciBzdHlsZSB0YWtlcyBwcmVjZWRlbmNlIG92ZXIgYWxsIHN0eWxlIGFuZCB3aWR0aCBkZWZpbml0aW9ucy4iPgogICAgICAgIDxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+CiAgICAgICAgICAgIHRhYmxlCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgdGQKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyOiA1cHggbm9uZSBibGFjazsKICAgICAgICAgICAgICAgIGhlaWdodDogM2VtOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsMwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXI6IDEwcHggaGlkZGVuIGJsYWNrOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsMQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItYm90dG9tLWNvbG9yOiByZWQ7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGw0CiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1sZWZ0LWNvbG9yOiByZWQ7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGw1CiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci10b3AtY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDIKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLXJpZ2h0LWNvbG9yOiByZWQ7CiAgICAgICAgICAgIH0KICAgICAgICA8L3N0eWxlPgogICAgPC9oZWFkPgogICAgPGJvZHk+CiAgICAgICAgPHA+VGVzdCBwYXNzZXMgaWYgdGhlcmUgaXMgbm8gcmVkIHZpc2libGUgb24gdGhlIHBhZ2UuPC9wPgogICAgICAgIDx0YWJsZT4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkPm5vbmU8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMSI+bm9uZTwvdGQ+CiAgICAgICAgICAgICAgICA8dGQ+bm9uZTwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDIiPm5vbmU8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMyI+aGlkZGVuPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDQiPm5vbmU8L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQ+bm9uZTwvdGQ+CiAgICAgICAgICAgICAgICA8dGQgaWQ9ImNlbGw1Ij5ub25lPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5ub25lPC90ZD4KICAgICAgICAgICAgPC90cj4KICAgICAgICA8L3RhYmxlPgogICAgPC9ib2R5Pgo8L2h0bWw+",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAoYnkgYm9yZGVyIHdpZHRoKTogJ25vbmUnIHZzLiAnaW5zZXQnIC0gYm9yZGVyIHN0eWxlIHdpdGggbGFyZ2VzdCB3aWR0aCBpcyB0aGUgZG9taW5hbnQgYm9yZGVyPC90aXRsZT4KICAgICAgICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9IlczQyIgaHJlZj0iaHR0cDovL3d3dy53M2Mub3JnLyI+CiAgICAgICAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJNaWNyb3NvZnQiIGhyZWY9Imh0dHA6Ly93d3cubWljcm9zb2Z0LmNvbS8iPgogICAgICAgIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjYm9yZGVyLWNvbmZsaWN0LXJlc29sdXRpb24iPgogICAgICAgIDxtZXRhIG5hbWU9ImZsYWdzIiBjb250ZW50PSIiPgogICAgICAgIDxtZXRhIG5hbWU9ImFzc2VydCIgY29udGVudD0iVGhlIHdpZGVzdCBib3JkZXIgaXMgZG9taW5hbnQgd2hlbiB0d28gY2VsbCBib3JkZXJzIGNvbGxhcHNlLiI+CiAgICAgICAgPHN0eWxlIHR5cGU9InRleHQvY3NzIj4KICAgICAgICAgICAgdGFibGUKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsKICAgICAgICAgICAgfQogICAgICAgICAgICB0ZAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXI6IDVweCBub25lIGJsYWNrOwogICAgICAgICAgICAgICAgaGVpZ2h0OiAzZW07CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGwzCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlcjogMTBweCBpbnNldCBibGFjazsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDEKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWJvdHRvbS1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsNAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItbGVmdC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsNQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItdG9wLWNvbG9yOiByZWQ7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGwyCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1yaWdodC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgPC9zdHlsZT4KICAgIDwvaGVhZD4KICAgIDxib2R5PgogICAgICAgIDxwPlRlc3QgcGFzc2VzIGlmIHRoZXJlIGlzIG5vIHJlZCB2aXNpYmxlIG9uIHRoZSBwYWdlLjwvcD4KICAgICAgICA8dGFibGU+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD5ub25lPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDEiPm5vbmU8L3RkPgogICAgICAgICAgICAgICAgPHRkPm5vbmU8L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQgaWQ9ImNlbGwyIj5ub25lPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDMiPmluc2V0PC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDQiPm5vbmU8L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQ+bm9uZTwvdGQ+CiAgICAgICAgICAgICAgICA8dGQgaWQ9ImNlbGw1Ij5ub25lPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5ub25lPC90ZD4KICAgICAgICAgICAgPC90cj4KICAgICAgICA8L3RhYmxlPgogICAgPC9ib2R5Pgo8L2h0bWw+",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAoYnkgYm9yZGVyIHdpZHRoKTogJ25vbmUnIHZzLiAnbm9uZScgLSBib3JkZXIgc3R5bGUgd2l0aCBsYXJnZXN0IHdpZHRoIGlzIHRoZSBkb21pbmFudCBib3JkZXI8L3RpdGxlPgogICAgICAgIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iVzNDIiBocmVmPSJodHRwOi8vd3d3LnczYy5vcmcvIj4KICAgICAgICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9Ik1pY3Jvc29mdCIgaHJlZj0iaHR0cDovL3d3dy5taWNyb3NvZnQuY29tLyI+CiAgICAgICAgPGxpbmsgcmVsPSJoZWxwIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCNib3JkZXItY29uZmxpY3QtcmVzb2x1dGlvbiI+CiAgICAgICAgPG1ldGEgbmFtZT0iZmxhZ3MiIGNvbnRlbnQ9IiI+CiAgICAgICAgPG1ldGEgbmFtZT0iYXNzZXJ0IiBjb250ZW50PSJUaGUgd2lkZXN0IGJvcmRlciBpcyBkb21pbmFudCB3aGVuIHR3byBjZWxsIGJvcmRlcnMgY29sbGFwc2UuIj4KICAgICAgICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgogICAgICAgICAgICB0YWJsZQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHRkCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlcjogNXB4IG5vbmUgYmxhY2s7CiAgICAgICAgICAgICAgICBoZWlnaHQ6IDNlbTsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDEKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyOiAxMHB4IG5vbmUgcmVkOwogICAgICAgICAgICB9CiAgICAgICAgPC9zdHlsZT4KICAgIDwvaGVhZD4KICAgIDxib2R5PgogICAgICAgIDxwPlRlc3QgcGFzc2VzIGlmIHRoZXJlIGlzIG5vIHJlZCB2aXNpYmxlIG9uIHRoZSBwYWdlLjwvcD4KICAgICAgICA8dGFibGU+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD5ub25lPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5ub25lPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5ub25lPC90ZD4KICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkPm5vbmU8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMSI+bm9uZTwvdGQ+CiAgICAgICAgICAgICAgICA8dGQ+bm9uZTwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD5ub25lPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5ub25lPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5ub25lPC90ZD4KICAgICAgICAgICAgPC90cj4KICAgICAgICA8L3RhYmxlPgogICAgPC9ib2R5Pgo8L2h0bWw+",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAoYnkgYm9yZGVyIHdpZHRoKTogJ25vbmUnIHZzLiAnb3V0c2V0JyAtIGJvcmRlciBzdHlsZSB3aXRoIGxhcmdlc3Qgd2lkdGggaXMgdGhlIGRvbWluYW50IGJvcmRlcjwvdGl0bGU+CiAgICAgICAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJXM0MiIGhyZWY9Imh0dHA6Ly93d3cudzNjLm9yZy8iPgogICAgICAgIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iTWljcm9zb2Z0IiBocmVmPSJodHRwOi8vd3d3Lm1pY3Jvc29mdC5jb20vIj4KICAgICAgICA8bGluayByZWw9ImhlbHAiIGhyZWY9Imh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL3RhYmxlcy5odG1sI2JvcmRlci1jb25mbGljdC1yZXNvbHV0aW9uIj4KICAgICAgICA8bWV0YSBuYW1lPSJmbGFncyIgY29udGVudD0iIj4KICAgICAgICA8bWV0YSBuYW1lPSJhc3NlcnQiIGNvbnRlbnQ9IlRoZSB3aWRlc3QgYm9yZGVyIGlzIGRvbWluYW50IHdoZW4gdHdvIGNlbGwgYm9yZGVycyBjb2xsYXBzZS4iPgogICAgICAgIDxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+CiAgICAgICAgICAgIHRhYmxlCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgdGQKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyOiA1cHggbm9uZSBibGFjazsKICAgICAgICAgICAgICAgIGhlaWdodDogM2VtOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsMwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXI6IDEwcHggb3V0c2V0IGJsYWNrOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsMQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItYm90dG9tLWNvbG9yOiByZWQ7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGw0CiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1sZWZ0LWNvbG9yOiByZWQ7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGw1CiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci10b3AtY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDIKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLXJpZ2h0LWNvbG9yOiByZWQ7CiAgICAgICAgICAgIH0KICAgICAgICA8L3N0eWxlPgogICAgPC9oZWFkPgogICAgPGJvZHk+CiAgICAgICAgPHA+VGVzdCBwYXNzZXMgaWYgdGhlcmUgaXMgbm8gcmVkIHZpc2libGUgb24gdGhlIHBhZ2UuPC9wPgogICAgICAgIDx0YWJsZT4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkPm5vbmU8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMSI+bm9uZTwvdGQ+CiAgICAgICAgICAgICAgICA8dGQ+bm9uZTwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDIiPm5vbmU8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMyI+b3V0c2V0PC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDQiPm5vbmU8L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQ+bm9uZTwvdGQ+CiAgICAgICAgICAgICAgICA8dGQgaWQ9ImNlbGw1Ij5ub25lPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5ub25lPC90ZD4KICAgICAgICAgICAgPC90cj4KICAgICAgICA8L3RhYmxlPgogICAgPC9ib2R5Pgo8L2h0bWw+",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAoYnkgYm9yZGVyIHdpZHRoKTogJ25vbmUnIHZzLiAncmlkZ2UnIC0gYm9yZGVyIHN0eWxlIHdpdGggbGFyZ2VzdCB3aWR0aCBpcyB0aGUgZG9taW5hbnQgYm9yZGVyPC90aXRsZT4KICAgICAgICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9IlczQyIgaHJlZj0iaHR0cDovL3d3dy53M2Mub3JnLyI+CiAgICAgICAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJNaWNyb3NvZnQiIGhyZWY9Imh0dHA6Ly93d3cubWljcm9zb2Z0LmNvbS8iPgogICAgICAgIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjYm9yZGVyLWNvbmZsaWN0LXJlc29sdXRpb24iPgogICAgICAgIDxtZXRhIG5hbWU9ImZsYWdzIiBjb250ZW50PSIiPgogICAgICAgIDxtZXRhIG5hbWU9ImFzc2VydCIgY29udGVudD0iVGhlIHdpZGVzdCBib3JkZXIgaXMgZG9taW5hbnQgd2hlbiB0d28gY2VsbCBib3JkZXJzIGNvbGxhcHNlLiI+CiAgICAgICAgPHN0eWxlIHR5cGU9InRleHQvY3NzIj4KICAgICAgICAgICAgdGFibGUKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsKICAgICAgICAgICAgfQogICAgICAgICAgICB0ZAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXI6IDVweCBub25lIGJsYWNrOwogICAgICAgICAgICAgICAgaGVpZ2h0OiAzZW07CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGwzCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlcjogMTBweCByaWRnZSBibGFjazsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDEKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWJvdHRvbS1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsNAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItbGVmdC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsNQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItdG9wLWNvbG9yOiByZWQ7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGwyCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1yaWdodC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgPC9zdHlsZT4KICAgIDwvaGVhZD4KICAgIDxib2R5PgogICAgICAgIDxwPlRlc3QgcGFzc2VzIGlmIHRoZXJlIGlzIG5vIHJlZCB2aXNpYmxlIG9uIHRoZSBwYWdlLjwvcD4KICAgICAgICA8dGFibGU+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD5ub25lPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDEiPm5vbmU8L3RkPgogICAgICAgICAgICAgICAgPHRkPm5vbmU8L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQgaWQ9ImNlbGwyIj5ub25lPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDMiPnJpZGdlPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDQiPm5vbmU8L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQ+bm9uZTwvdGQ+CiAgICAgICAgICAgICAgICA8dGQgaWQ9ImNlbGw1Ij5ub25lPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5ub25lPC90ZD4KICAgICAgICAgICAgPC90cj4KICAgICAgICA8L3RhYmxlPgogICAgPC9ib2R5Pgo8L2h0bWw+",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAoYnkgYm9yZGVyIHdpZHRoKTogJ25vbmUnIHZzLiAnc29saWQnIC0gYm9yZGVyIHN0eWxlIHdpdGggbGFyZ2VzdCB3aWR0aCBpcyB0aGUgZG9taW5hbnQgYm9yZGVyPC90aXRsZT4KICAgICAgICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9IlczQyIgaHJlZj0iaHR0cDovL3d3dy53M2Mub3JnLyI+CiAgICAgICAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJNaWNyb3NvZnQiIGhyZWY9Imh0dHA6Ly93d3cubWljcm9zb2Z0LmNvbS8iPgogICAgICAgIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjYm9yZGVyLWNvbmZsaWN0LXJlc29sdXRpb24iPgogICAgICAgIDxtZXRhIG5hbWU9ImZsYWdzIiBjb250ZW50PSIiPgogICAgICAgIDxtZXRhIG5hbWU9ImFzc2VydCIgY29udGVudD0iVGhlIHdpZGVzdCBib3JkZXIgaXMgZG9taW5hbnQgd2hlbiB0d28gY2VsbCBib3JkZXJzIGNvbGxhcHNlLiI+CiAgICAgICAgPHN0eWxlIHR5cGU9InRleHQvY3NzIj4KICAgICAgICAgICAgdGFibGUKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsKICAgICAgICAgICAgfQogICAgICAgICAgICB0ZAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXI6IDVweCBub25lIGJsYWNrOwogICAgICAgICAgICAgICAgaGVpZ2h0OiAzZW07CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGwzCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlcjogMTBweCBzb2xpZCBibGFjazsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDEKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWJvdHRvbS1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsNAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItbGVmdC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsNQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItdG9wLWNvbG9yOiByZWQ7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGwyCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1yaWdodC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgPC9zdHlsZT4KICAgIDwvaGVhZD4KICAgIDxib2R5PgogICAgICAgIDxwPlRlc3QgcGFzc2VzIGlmIHRoZXJlIGlzIG5vIHJlZCB2aXNpYmxlIG9uIHRoZSBwYWdlLjwvcD4KICAgICAgICA8dGFibGU+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD5ub25lPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDEiPm5vbmU8L3RkPgogICAgICAgICAgICAgICAgPHRkPm5vbmU8L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQgaWQ9ImNlbGwyIj5ub25lPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDMiPnNvbGlkPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDQiPm5vbmU8L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQ+bm9uZTwvdGQ+CiAgICAgICAgICAgICAgICA8dGQgaWQ9ImNlbGw1Ij5ub25lPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5ub25lPC90ZD4KICAgICAgICAgICAgPC90cj4KICAgICAgICA8L3RhYmxlPgogICAgPC9ib2R5Pgo8L2h0bWw+",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAoYnkgYm9yZGVyIHdpZHRoKTogJ291dHNldCcgdnMuICdkYXNoZWQnIC0gYm9yZGVyIHN0eWxlIHdpdGggbGFyZ2VzdCB3aWR0aCBpcyB0aGUgZG9taW5hbnQgYm9yZGVyPC90aXRsZT4KICAgICAgICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9IlczQyIgaHJlZj0iaHR0cDovL3d3dy53M2Mub3JnLyI+CiAgICAgICAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJNaWNyb3NvZnQiIGhyZWY9Imh0dHA6Ly93d3cubWljcm9zb2Z0LmNvbS8iPgogICAgICAgIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjYm9yZGVyLWNvbmZsaWN0LXJlc29sdXRpb24iPgogICAgICAgIDxtZXRhIG5hbWU9ImZsYWdzIiBjb250ZW50PSIiPgogICAgICAgIDxtZXRhIG5hbWU9ImFzc2VydCIgY29udGVudD0iVGhlIHdpZGVzdCBib3JkZXIgaXMgZG9taW5hbnQgd2hlbiB0d28gY2VsbCBib3JkZXJzIGNvbGxhcHNlLiI+CiAgICAgICAgPHN0eWxlIHR5cGU9InRleHQvY3NzIj4KICAgICAgICAgICAgdGFibGUKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsKICAgICAgICAgICAgfQogICAgICAgICAgICB0ZAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXI6IDVweCBvdXRzZXQgYmxhY2s7CiAgICAgICAgICAgICAgICBoZWlnaHQ6IDNlbTsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDMKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyOiAxMHB4IGRhc2hlZCBibGFjazsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDEKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWJvdHRvbS1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsNAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItbGVmdC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsNQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItdG9wLWNvbG9yOiByZWQ7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGwyCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1yaWdodC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgPC9zdHlsZT4KICAgIDwvaGVhZD4KICAgIDxib2R5PgogICAgICAgIDxwPlRlc3QgcGFzc2VzIGlmIHRoZXJlIGlzIG5vIHJlZCB2aXNpYmxlIG9uIHRoZSBwYWdlLjwvcD4KICAgICAgICA8dGFibGU+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD5vdXRzZXQ8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMSI+b3V0c2V0PC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5vdXRzZXQ8L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQgaWQ9ImNlbGwyIj5vdXRzZXQ8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMyI+ZGFzaGVkPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDQiPm91dHNldDwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD5vdXRzZXQ8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsNSI+b3V0c2V0PC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5vdXRzZXQ8L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgIDwvdGFibGU+CiAgICA8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAoYnkgYm9yZGVyIHdpZHRoKTogJ291dHNldCcgdnMuICdkb3R0ZWQnIC0gYm9yZGVyIHN0eWxlIHdpdGggbGFyZ2VzdCB3aWR0aCBpcyB0aGUgZG9taW5hbnQgYm9yZGVyPC90aXRsZT4KICAgICAgICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9IlczQyIgaHJlZj0iaHR0cDovL3d3dy53M2Mub3JnLyI+CiAgICAgICAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJNaWNyb3NvZnQiIGhyZWY9Imh0dHA6Ly93d3cubWljcm9zb2Z0LmNvbS8iPgogICAgICAgIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjYm9yZGVyLWNvbmZsaWN0LXJlc29sdXRpb24iPgogICAgICAgIDxtZXRhIG5hbWU9ImZsYWdzIiBjb250ZW50PSIiPgogICAgICAgIDxtZXRhIG5hbWU9ImFzc2VydCIgY29udGVudD0iVGhlIHdpZGVzdCBib3JkZXIgaXMgZG9taW5hbnQgd2hlbiB0d28gY2VsbCBib3JkZXJzIGNvbGxhcHNlLiI+CiAgICAgICAgPHN0eWxlIHR5cGU9InRleHQvY3NzIj4KICAgICAgICAgICAgdGFibGUKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsKICAgICAgICAgICAgfQogICAgICAgICAgICB0ZAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXI6IDVweCBvdXRzZXQgYmxhY2s7CiAgICAgICAgICAgICAgICBoZWlnaHQ6IDNlbTsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDMKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyOiAxMHB4IGRvdHRlZCBibGFjazsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDEKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWJvdHRvbS1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsNAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItbGVmdC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsNQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItdG9wLWNvbG9yOiByZWQ7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGwyCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1yaWdodC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgPC9zdHlsZT4KICAgIDwvaGVhZD4KICAgIDxib2R5PgogICAgICAgIDxwPlRlc3QgcGFzc2VzIGlmIHRoZXJlIGlzIG5vIHJlZCB2aXNpYmxlIG9uIHRoZSBwYWdlLjwvcD4KICAgICAgICA8dGFibGU+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD5vdXRzZXQ8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMSI+b3V0c2V0PC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5vdXRzZXQ8L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQgaWQ9ImNlbGwyIj5vdXRzZXQ8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMyI+ZG90dGVkPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDQiPm91dHNldDwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD5vdXRzZXQ8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsNSI+b3V0c2V0PC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5vdXRzZXQ8L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgIDwvdGFibGU+CiAgICA8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAoYnkgYm9yZGVyIHdpZHRoKTogJ291dHNldCcgdnMuICdkb3VibGUnIC0gYm9yZGVyIHN0eWxlIHdpdGggbGFyZ2VzdCB3aWR0aCBpcyB0aGUgZG9taW5hbnQgYm9yZGVyPC90aXRsZT4KICAgICAgICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9IlczQyIgaHJlZj0iaHR0cDovL3d3dy53M2Mub3JnLyI+CiAgICAgICAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJNaWNyb3NvZnQiIGhyZWY9Imh0dHA6Ly93d3cubWljcm9zb2Z0LmNvbS8iPgogICAgICAgIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjYm9yZGVyLWNvbmZsaWN0LXJlc29sdXRpb24iPgogICAgICAgIDxtZXRhIG5hbWU9ImZsYWdzIiBjb250ZW50PSIiPgogICAgICAgIDxtZXRhIG5hbWU9ImFzc2VydCIgY29udGVudD0iVGhlIHdpZGVzdCBib3JkZXIgaXMgZG9taW5hbnQgd2hlbiB0d28gY2VsbCBib3JkZXJzIGNvbGxhcHNlLiI+CiAgICAgICAgPHN0eWxlIHR5cGU9InRleHQvY3NzIj4KICAgICAgICAgICAgdGFibGUKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsKICAgICAgICAgICAgfQogICAgICAgICAgICB0ZAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXI6IDVweCBvdXRzZXQgYmxhY2s7CiAgICAgICAgICAgICAgICBoZWlnaHQ6IDNlbTsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDMKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyOiAxMHB4IGRvdWJsZSBibGFjazsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDEKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWJvdHRvbS1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsNAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItbGVmdC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsNQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItdG9wLWNvbG9yOiByZWQ7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGwyCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1yaWdodC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgPC9zdHlsZT4KICAgIDwvaGVhZD4KICAgIDxib2R5PgogICAgICAgIDxwPlRlc3QgcGFzc2VzIGlmIHRoZXJlIGlzIG5vIHJlZCB2aXNpYmxlIG9uIHRoZSBwYWdlLjwvcD4KICAgICAgICA8dGFibGU+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD5vdXRzZXQ8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMSI+b3V0c2V0PC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5vdXRzZXQ8L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQgaWQ9ImNlbGwyIj5vdXRzZXQ8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMyI+ZG91YmxlPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDQiPm91dHNldDwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD5vdXRzZXQ8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsNSI+b3V0c2V0PC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5vdXRzZXQ8L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgIDwvdGFibGU+CiAgICA8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAoYnkgYm9yZGVyIHdpZHRoKTogJ291dHNldCcgdnMuICdncm9vdmUnIC0gYm9yZGVyIHN0eWxlIHdpdGggbGFyZ2VzdCB3aWR0aCBpcyB0aGUgZG9taW5hbnQgYm9yZGVyPC90aXRsZT4KICAgICAgICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9IlczQyIgaHJlZj0iaHR0cDovL3d3dy53M2Mub3JnLyI+CiAgICAgICAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJNaWNyb3NvZnQiIGhyZWY9Imh0dHA6Ly93d3cubWljcm9zb2Z0LmNvbS8iPgogICAgICAgIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjYm9yZGVyLWNvbmZsaWN0LXJlc29sdXRpb24iPgogICAgICAgIDxtZXRhIG5hbWU9ImZsYWdzIiBjb250ZW50PSIiPgogICAgICAgIDxtZXRhIG5hbWU9ImFzc2VydCIgY29udGVudD0iVGhlIHdpZGVzdCBib3JkZXIgaXMgZG9taW5hbnQgd2hlbiB0d28gY2VsbCBib3JkZXJzIGNvbGxhcHNlLiI+CiAgICAgICAgPHN0eWxlIHR5cGU9InRleHQvY3NzIj4KICAgICAgICAgICAgdGFibGUKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsKICAgICAgICAgICAgfQogICAgICAgICAgICB0ZAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXI6IDVweCBvdXRzZXQgYmxhY2s7CiAgICAgICAgICAgICAgICBoZWlnaHQ6IDNlbTsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDMKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyOiAxMHB4IGdyb292ZSBibGFjazsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDEKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWJvdHRvbS1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsNAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItbGVmdC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsNQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItdG9wLWNvbG9yOiByZWQ7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGwyCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1yaWdodC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgPC9zdHlsZT4KICAgIDwvaGVhZD4KICAgIDxib2R5PgogICAgICAgIDxwPlRlc3QgcGFzc2VzIGlmIHRoZXJlIGlzIG5vIHJlZCB2aXNpYmxlIG9uIHRoZSBwYWdlLjwvcD4KICAgICAgICA8dGFibGU+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD5vdXRzZXQ8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMSI+b3V0c2V0PC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5vdXRzZXQ8L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQgaWQ9ImNlbGwyIj5vdXRzZXQ8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMyI+Z3Jvb3ZlPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDQiPm91dHNldDwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD5vdXRzZXQ8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsNSI+b3V0c2V0PC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5vdXRzZXQ8L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgIDwvdGFibGU+CiAgICA8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAoYnkgYm9yZGVyIHdpZHRoKTogJ291dHNldCcgdnMuICdoaWRkZW4nIC0gYSBib3JkZXIgc3R5bGUgb2YgJ2hpZGRlbicgaXMgYWx3YXlzIHRoZSBkb21pbmFudCBib3JkZXI8L3RpdGxlPgogICAgICAgIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iVzNDIiBocmVmPSJodHRwOi8vd3d3LnczYy5vcmcvIj4KICAgICAgICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9Ik1pY3Jvc29mdCIgaHJlZj0iaHR0cDovL3d3dy5taWNyb3NvZnQuY29tLyI+CiAgICAgICAgPGxpbmsgcmVsPSJoZWxwIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCNib3JkZXItY29uZmxpY3QtcmVzb2x1dGlvbiI+CiAgICAgICAgPG1ldGEgbmFtZT0iZmxhZ3MiIGNvbnRlbnQ9IiI+CiAgICAgICAgPG1ldGEgbmFtZT0iYXNzZXJ0IiBjb250ZW50PSJUaGUgJ2hpZGRlbicgYm9yZGVyIHN0eWxlIHRha2VzIHByZWNlZGVuY2Ugb3ZlciBhbGwgc3R5bGUgYW5kIHdpZHRoIGRlZmluaXRpb25zLiI+CiAgICAgICAgPHN0eWxlIHR5cGU9InRleHQvY3NzIj4KICAgICAgICAgICAgdGFibGUKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsKICAgICAgICAgICAgfQogICAgICAgICAgICB0ZAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXI6IDVweCBvdXRzZXQgYmxhY2s7CiAgICAgICAgICAgICAgICBoZWlnaHQ6IDNlbTsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDMKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyOiAxMHB4IGhpZGRlbiBibGFjazsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDEKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWJvdHRvbS1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsNAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItbGVmdC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsNQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItdG9wLWNvbG9yOiByZWQ7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGwyCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1yaWdodC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgPC9zdHlsZT4KICAgIDwvaGVhZD4KICAgIDxib2R5PgogICAgICAgIDxwPlRlc3QgcGFzc2VzIGlmIHRoZXJlIGlzIG5vIHJlZCB2aXNpYmxlIG9uIHRoZSBwYWdlLjwvcD4KICAgICAgICA8dGFibGU+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD5vdXRzZXQ8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMSI+b3V0c2V0PC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5vdXRzZXQ8L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQgaWQ9ImNlbGwyIj5vdXRzZXQ8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMyI+aGlkZGVuPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDQiPm91dHNldDwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD5vdXRzZXQ8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsNSI+b3V0c2V0PC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5vdXRzZXQ8L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgIDwvdGFibGU+CiAgICA8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAoYnkgYm9yZGVyIHdpZHRoKTogJ291dHNldCcgdnMuICdpbnNldCcgLSBib3JkZXIgc3R5bGUgd2l0aCBsYXJnZXN0IHdpZHRoIGlzIHRoZSBkb21pbmFudCBib3JkZXI8L3RpdGxlPgogICAgICAgIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iVzNDIiBocmVmPSJodHRwOi8vd3d3LnczYy5vcmcvIj4KICAgICAgICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9Ik1pY3Jvc29mdCIgaHJlZj0iaHR0cDovL3d3dy5taWNyb3NvZnQuY29tLyI+CiAgICAgICAgPGxpbmsgcmVsPSJoZWxwIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCNib3JkZXItY29uZmxpY3QtcmVzb2x1dGlvbiI+CiAgICAgICAgPG1ldGEgbmFtZT0iZmxhZ3MiIGNvbnRlbnQ9IiI+CiAgICAgICAgPG1ldGEgbmFtZT0iYXNzZXJ0IiBjb250ZW50PSJUaGUgd2lkZXN0IGJvcmRlciBpcyBkb21pbmFudCB3aGVuIHR3byBjZWxsIGJvcmRlcnMgY29sbGFwc2UuIj4KICAgICAgICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgogICAgICAgICAgICB0YWJsZQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHRkCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlcjogNXB4IG91dHNldCBibGFjazsKICAgICAgICAgICAgICAgIGhlaWdodDogM2VtOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsMwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXI6IDEwcHggaW5zZXQgYmxhY2s7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGwxCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1ib3R0b20tY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDQKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWxlZnQtY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDUKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLXRvcC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsMgogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItcmlnaHQtY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgIDwvc3R5bGU+CiAgICA8L2hlYWQ+CiAgICA8Ym9keT4KICAgICAgICA8cD5UZXN0IHBhc3NlcyBpZiB0aGVyZSBpcyBubyByZWQgdmlzaWJsZSBvbiB0aGUgcGFnZS48L3A+CiAgICAgICAgPHRhYmxlPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQ+b3V0c2V0PC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDEiPm91dHNldDwvdGQ+CiAgICAgICAgICAgICAgICA8dGQ+b3V0c2V0PC90ZD4KICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMiI+b3V0c2V0PC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDMiPmluc2V0PC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDQiPm91dHNldDwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD5vdXRzZXQ8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsNSI+b3V0c2V0PC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5vdXRzZXQ8L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgIDwvdGFibGU+CiAgICA8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAoYnkgYm9yZGVyIHdpZHRoKTogJ291dHNldCcgdnMuICdub25lJyAtIGJvcmRlciBzdHlsZSB3aXRoIGxhcmdlc3Qgd2lkdGggaXMgdGhlIGRvbWluYW50IGJvcmRlcjwvdGl0bGU+CiAgICAgICAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJXM0MiIGhyZWY9Imh0dHA6Ly93d3cudzNjLm9yZy8iPgogICAgICAgIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iTWljcm9zb2Z0IiBocmVmPSJodHRwOi8vd3d3Lm1pY3Jvc29mdC5jb20vIj4KICAgICAgICA8bGluayByZWw9ImhlbHAiIGhyZWY9Imh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL3RhYmxlcy5odG1sI2JvcmRlci1jb25mbGljdC1yZXNvbHV0aW9uIj4KICAgICAgICA8bWV0YSBuYW1lPSJmbGFncyIgY29udGVudD0iIj4KICAgICAgICA8bWV0YSBuYW1lPSJhc3NlcnQiIGNvbnRlbnQ9IlRoZSB3aWRlc3QgYm9yZGVyIGlzIGRvbWluYW50IHdoZW4gdHdvIGNlbGwgYm9yZGVycyBjb2xsYXBzZS4iPgogICAgICAgIDxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+CiAgICAgICAgICAgIHRhYmxlCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgdGQKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyOiA1cHggb3V0c2V0IGJsYWNrOwogICAgICAgICAgICAgICAgaGVpZ2h0OiAzZW07CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGwxCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlcjogMTBweCBub25lIHJlZDsKICAgICAgICAgICAgfQogICAgICAgIDwvc3R5bGU+CiAgICA8L2hlYWQ+CiAgICA8Ym9keT4KICAgICAgICA8cD5UZXN0IHBhc3NlcyBpZiB0aGVyZSBpcyBubyByZWQgdmlzaWJsZSBvbiB0aGUgcGFnZS48L3A+CiAgICAgICAgPHRhYmxlPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQ+b3V0c2V0PC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5vdXRzZXQ8L3RkPgogICAgICAgICAgICAgICAgPHRkPm91dHNldDwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD5vdXRzZXQ8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMSI+bm9uZTwvdGQ+CiAgICAgICAgICAgICAgICA8dGQ+b3V0c2V0PC90ZD4KICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkPm91dHNldDwvdGQ+CiAgICAgICAgICAgICAgICA8dGQ+b3V0c2V0PC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5vdXRzZXQ8L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgIDwvdGFibGU+CiAgICA8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAoYnkgYm9yZGVyIHdpZHRoKTogJ291dHNldCcgdnMuICdvdXRzZXQnIC0gYm9yZGVyIHN0eWxlIHdpdGggbGFyZ2VzdCB3aWR0aCBpcyB0aGUgZG9taW5hbnQgYm9yZGVyPC90aXRsZT4KICAgICAgICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9IlczQyIgaHJlZj0iaHR0cDovL3d3dy53M2Mub3JnLyI+CiAgICAgICAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJNaWNyb3NvZnQiIGhyZWY9Imh0dHA6Ly93d3cubWljcm9zb2Z0LmNvbS8iPgogICAgICAgIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjYm9yZGVyLWNvbmZsaWN0LXJlc29sdXRpb24iPgogICAgICAgIDxtZXRhIG5hbWU9ImZsYWdzIiBjb250ZW50PSIiPgogICAgICAgIDxtZXRhIG5hbWU9ImFzc2VydCIgY29udGVudD0iVGhlIHdpZGVzdCBib3JkZXIgaXMgZG9taW5hbnQgd2hlbiB0d28gY2VsbCBib3JkZXJzIGNvbGxhcHNlLiI+CiAgICAgICAgPHN0eWxlIHR5cGU9InRleHQvY3NzIj4KICAgICAgICAgICAgdGFibGUKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsKICAgICAgICAgICAgfQogICAgICAgICAgICB0ZAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXI6IDVweCBvdXRzZXQgYmxhY2s7CiAgICAgICAgICAgICAgICBoZWlnaHQ6IDNlbTsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDMKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyOiAxMHB4IG91dHNldCBibGFjazsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDEKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWJvdHRvbS1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsNAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItbGVmdC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsNQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItdG9wLWNvbG9yOiByZWQ7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGwyCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1yaWdodC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgPC9zdHlsZT4KICAgIDwvaGVhZD4KICAgIDxib2R5PgogICAgICAgIDxwPlRlc3QgcGFzc2VzIGlmIHRoZXJlIGlzIG5vIHJlZCB2aXNpYmxlIG9uIHRoZSBwYWdlLjwvcD4KICAgICAgICA8dGFibGU+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD5vdXRzZXQ8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMSI+b3V0c2V0PC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5vdXRzZXQ8L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQgaWQ9ImNlbGwyIj5vdXRzZXQ8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMyI+b3V0c2V0PC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDQiPm91dHNldDwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD5vdXRzZXQ8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsNSI+b3V0c2V0PC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5vdXRzZXQ8L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgIDwvdGFibGU+CiAgICA8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAoYnkgYm9yZGVyIHdpZHRoKTogJ291dHNldCcgdnMuICdyaWRnZScgLSBib3JkZXIgc3R5bGUgd2l0aCBsYXJnZXN0IHdpZHRoIGlzIHRoZSBkb21pbmFudCBib3JkZXI8L3RpdGxlPgogICAgICAgIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iVzNDIiBocmVmPSJodHRwOi8vd3d3LnczYy5vcmcvIj4KICAgICAgICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9Ik1pY3Jvc29mdCIgaHJlZj0iaHR0cDovL3d3dy5taWNyb3NvZnQuY29tLyI+CiAgICAgICAgPGxpbmsgcmVsPSJoZWxwIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCNib3JkZXItY29uZmxpY3QtcmVzb2x1dGlvbiI+CiAgICAgICAgPG1ldGEgbmFtZT0iZmxhZ3MiIGNvbnRlbnQ9IiI+CiAgICAgICAgPG1ldGEgbmFtZT0iYXNzZXJ0IiBjb250ZW50PSJUaGUgd2lkZXN0IGJvcmRlciBpcyBkb21pbmFudCB3aGVuIHR3byBjZWxsIGJvcmRlcnMgY29sbGFwc2UuIj4KICAgICAgICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgogICAgICAgICAgICB0YWJsZQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHRkCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlcjogNXB4IG91dHNldCBibGFjazsKICAgICAgICAgICAgICAgIGhlaWdodDogM2VtOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsMwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXI6IDEwcHggcmlkZ2UgYmxhY2s7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGwxCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1ib3R0b20tY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDQKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWxlZnQtY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDUKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLXRvcC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsMgogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItcmlnaHQtY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgIDwvc3R5bGU+CiAgICA8L2hlYWQ+CiAgICA8Ym9keT4KICAgICAgICA8cD5UZXN0IHBhc3NlcyBpZiB0aGVyZSBpcyBubyByZWQgdmlzaWJsZSBvbiB0aGUgcGFnZS48L3A+CiAgICAgICAgPHRhYmxlPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQ+b3V0c2V0PC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDEiPm91dHNldDwvdGQ+CiAgICAgICAgICAgICAgICA8dGQ+b3V0c2V0PC90ZD4KICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMiI+b3V0c2V0PC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDMiPnJpZGdlPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDQiPm91dHNldDwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD5vdXRzZXQ8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsNSI+b3V0c2V0PC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5vdXRzZXQ8L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgIDwvdGFibGU+CiAgICA8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAoYnkgYm9yZGVyIHdpZHRoKTogJ291dHNldCcgdnMuICdzb2xpZCcgLSBib3JkZXIgc3R5bGUgd2l0aCBsYXJnZXN0IHdpZHRoIGlzIHRoZSBkb21pbmFudCBib3JkZXI8L3RpdGxlPgogICAgICAgIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iVzNDIiBocmVmPSJodHRwOi8vd3d3LnczYy5vcmcvIj4KICAgICAgICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9Ik1pY3Jvc29mdCIgaHJlZj0iaHR0cDovL3d3dy5taWNyb3NvZnQuY29tLyI+CiAgICAgICAgPGxpbmsgcmVsPSJoZWxwIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCNib3JkZXItY29uZmxpY3QtcmVzb2x1dGlvbiI+CiAgICAgICAgPG1ldGEgbmFtZT0iZmxhZ3MiIGNvbnRlbnQ9IiI+CiAgICAgICAgPG1ldGEgbmFtZT0iYXNzZXJ0IiBjb250ZW50PSJUaGUgd2lkZXN0IGJvcmRlciBpcyBkb21pbmFudCB3aGVuIHR3byBjZWxsIGJvcmRlcnMgY29sbGFwc2UuIj4KICAgICAgICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgogICAgICAgICAgICB0YWJsZQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHRkCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlcjogNXB4IG91dHNldCBibGFjazsKICAgICAgICAgICAgICAgIGhlaWdodDogM2VtOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsMwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXI6IDEwcHggc29saWQgYmxhY2s7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGwxCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1ib3R0b20tY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDQKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWxlZnQtY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDUKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLXRvcC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsMgogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItcmlnaHQtY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgIDwvc3R5bGU+CiAgICA8L2hlYWQ+CiAgICA8Ym9keT4KICAgICAgICA8cD5UZXN0IHBhc3NlcyBpZiB0aGVyZSBpcyBubyByZWQgdmlzaWJsZSBvbiB0aGUgcGFnZS48L3A+CiAgICAgICAgPHRhYmxlPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQ+b3V0c2V0PC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDEiPm91dHNldDwvdGQ+CiAgICAgICAgICAgICAgICA8dGQ+b3V0c2V0PC90ZD4KICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMiI+b3V0c2V0PC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDMiPnNvbGlkPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDQiPm91dHNldDwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD5vdXRzZXQ8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsNSI+b3V0c2V0PC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5vdXRzZXQ8L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgIDwvdGFibGU+CiAgICA8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAoYnkgYm9yZGVyIHdpZHRoKTogJ3JpZGdlJyB2cy4gJ2Rhc2hlZCcgLSBib3JkZXIgc3R5bGUgd2l0aCBsYXJnZXN0IHdpZHRoIGlzIHRoZSBkb21pbmFudCBib3JkZXI8L3RpdGxlPgogICAgICAgIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iVzNDIiBocmVmPSJodHRwOi8vd3d3LnczYy5vcmcvIj4KICAgICAgICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9Ik1pY3Jvc29mdCIgaHJlZj0iaHR0cDovL3d3dy5taWNyb3NvZnQuY29tLyI+CiAgICAgICAgPGxpbmsgcmVsPSJoZWxwIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCNib3JkZXItY29uZmxpY3QtcmVzb2x1dGlvbiI+CiAgICAgICAgPG1ldGEgbmFtZT0iZmxhZ3MiIGNvbnRlbnQ9IiI+CiAgICAgICAgPG1ldGEgbmFtZT0iYXNzZXJ0IiBjb250ZW50PSJUaGUgd2lkZXN0IGJvcmRlciBpcyBkb21pbmFudCB3aGVuIHR3byBjZWxsIGJvcmRlcnMgY29sbGFwc2UuIj4KICAgICAgICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgogICAgICAgICAgICB0YWJsZQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHRkCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlcjogNXB4IHJpZGdlIGJsYWNrOwogICAgICAgICAgICAgICAgaGVpZ2h0OiAzZW07CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGwzCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlcjogMTBweCBkYXNoZWQgYmxhY2s7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGwxCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1ib3R0b20tY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDQKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWxlZnQtY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDUKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLXRvcC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsMgogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItcmlnaHQtY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgIDwvc3R5bGU+CiAgICA8L2hlYWQ+CiAgICA8Ym9keT4KICAgICAgICA8cD5UZXN0IHBhc3NlcyBpZiB0aGVyZSBpcyBubyByZWQgdmlzaWJsZSBvbiB0aGUgcGFnZS48L3A+CiAgICAgICAgPHRhYmxlPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQ+cmlkZ2U8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMSI+cmlkZ2U8L3RkPgogICAgICAgICAgICAgICAgPHRkPnJpZGdlPC90ZD4KICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMiI+cmlkZ2U8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMyI+ZGFzaGVkPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDQiPnJpZGdlPC90ZD4KICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkPnJpZGdlPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDUiPnJpZGdlPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5yaWRnZTwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgPC90YWJsZT4KICAgIDwvYm9keT4KPC9odG1sPg==",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAoYnkgYm9yZGVyIHdpZHRoKTogJ3JpZGdlJyB2cy4gJ2RvdHRlZCcgLSBib3JkZXIgc3R5bGUgd2l0aCBsYXJnZXN0IHdpZHRoIGlzIHRoZSBkb21pbmFudCBib3JkZXI8L3RpdGxlPgogICAgICAgIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iVzNDIiBocmVmPSJodHRwOi8vd3d3LnczYy5vcmcvIj4KICAgICAgICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9Ik1pY3Jvc29mdCIgaHJlZj0iaHR0cDovL3d3dy5taWNyb3NvZnQuY29tLyI+CiAgICAgICAgPGxpbmsgcmVsPSJoZWxwIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCNib3JkZXItY29uZmxpY3QtcmVzb2x1dGlvbiI+CiAgICAgICAgPG1ldGEgbmFtZT0iZmxhZ3MiIGNvbnRlbnQ9IiI+CiAgICAgICAgPG1ldGEgbmFtZT0iYXNzZXJ0IiBjb250ZW50PSJUaGUgd2lkZXN0IGJvcmRlciBpcyBkb21pbmFudCB3aGVuIHR3byBjZWxsIGJvcmRlcnMgY29sbGFwc2UuIj4KICAgICAgICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgogICAgICAgICAgICB0YWJsZQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHRkCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlcjogNXB4IHJpZGdlIGJsYWNrOwogICAgICAgICAgICAgICAgaGVpZ2h0OiAzZW07CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGwzCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlcjogMTBweCBkb3R0ZWQgYmxhY2s7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGwxCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1ib3R0b20tY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDQKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWxlZnQtY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDUKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLXRvcC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsMgogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItcmlnaHQtY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgIDwvc3R5bGU+CiAgICA8L2hlYWQ+CiAgICA8Ym9keT4KICAgICAgICA8cD5UZXN0IHBhc3NlcyBpZiB0aGVyZSBpcyBubyByZWQgdmlzaWJsZSBvbiB0aGUgcGFnZS48L3A+CiAgICAgICAgPHRhYmxlPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQ+cmlkZ2U8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMSI+cmlkZ2U8L3RkPgogICAgICAgICAgICAgICAgPHRkPnJpZGdlPC90ZD4KICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMiI+cmlkZ2U8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMyI+ZG90dGVkPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDQiPnJpZGdlPC90ZD4KICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkPnJpZGdlPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDUiPnJpZGdlPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5yaWRnZTwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgPC90YWJsZT4KICAgIDwvYm9keT4KPC9odG1sPg==",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAoYnkgYm9yZGVyIHdpZHRoKTogJ3JpZGdlJyB2cy4gJ2RvdWJsZScgLSBib3JkZXIgc3R5bGUgd2l0aCBsYXJnZXN0IHdpZHRoIGlzIHRoZSBkb21pbmFudCBib3JkZXI8L3RpdGxlPgogICAgICAgIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iVzNDIiBocmVmPSJodHRwOi8vd3d3LnczYy5vcmcvIj4KICAgICAgICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9Ik1pY3Jvc29mdCIgaHJlZj0iaHR0cDovL3d3dy5taWNyb3NvZnQuY29tLyI+CiAgICAgICAgPGxpbmsgcmVsPSJoZWxwIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCNib3JkZXItY29uZmxpY3QtcmVzb2x1dGlvbiI+CiAgICAgICAgPG1ldGEgbmFtZT0iZmxhZ3MiIGNvbnRlbnQ9IiI+CiAgICAgICAgPG1ldGEgbmFtZT0iYXNzZXJ0IiBjb250ZW50PSJUaGUgd2lkZXN0IGJvcmRlciBpcyBkb21pbmFudCB3aGVuIHR3byBjZWxsIGJvcmRlcnMgY29sbGFwc2UuIj4KICAgICAgICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgogICAgICAgICAgICB0YWJsZQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHRkCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlcjogNXB4IHJpZGdlIGJsYWNrOwogICAgICAgICAgICAgICAgaGVpZ2h0OiAzZW07CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGwzCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlcjogMTBweCBkb3VibGUgYmxhY2s7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGwxCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1ib3R0b20tY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDQKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWxlZnQtY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDUKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLXRvcC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsMgogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItcmlnaHQtY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgIDwvc3R5bGU+CiAgICA8L2hlYWQ+CiAgICA8Ym9keT4KICAgICAgICA8cD5UZXN0IHBhc3NlcyBpZiB0aGVyZSBpcyBubyByZWQgdmlzaWJsZSBvbiB0aGUgcGFnZS48L3A+CiAgICAgICAgPHRhYmxlPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQ+cmlkZ2U8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMSI+cmlkZ2U8L3RkPgogICAgICAgICAgICAgICAgPHRkPnJpZGdlPC90ZD4KICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMiI+cmlkZ2U8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMyI+ZG91YmxlPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDQiPnJpZGdlPC90ZD4KICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkPnJpZGdlPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDUiPnJpZGdlPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5yaWRnZTwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgPC90YWJsZT4KICAgIDwvYm9keT4KPC9odG1sPg==",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAoYnkgYm9yZGVyIHdpZHRoKTogJ3JpZGdlJyB2cy4gJ2dyb292ZScgLSBib3JkZXIgc3R5bGUgd2l0aCBsYXJnZXN0IHdpZHRoIGlzIHRoZSBkb21pbmFudCBib3JkZXI8L3RpdGxlPgogICAgICAgIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iVzNDIiBocmVmPSJodHRwOi8vd3d3LnczYy5vcmcvIj4KICAgICAgICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9Ik1pY3Jvc29mdCIgaHJlZj0iaHR0cDovL3d3dy5taWNyb3NvZnQuY29tLyI+CiAgICAgICAgPGxpbmsgcmVsPSJoZWxwIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCNib3JkZXItY29uZmxpY3QtcmVzb2x1dGlvbiI+CiAgICAgICAgPG1ldGEgbmFtZT0iZmxhZ3MiIGNvbnRlbnQ9IiI+CiAgICAgICAgPG1ldGEgbmFtZT0iYXNzZXJ0IiBjb250ZW50PSJUaGUgd2lkZXN0IGJvcmRlciBpcyBkb21pbmFudCB3aGVuIHR3byBjZWxsIGJvcmRlcnMgY29sbGFwc2UuIj4KICAgICAgICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgogICAgICAgICAgICB0YWJsZQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHRkCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlcjogNXB4IHJpZGdlIGJsYWNrOwogICAgICAgICAgICAgICAgaGVpZ2h0OiAzZW07CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGwzCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlcjogMTBweCBncm9vdmUgYmxhY2s7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGwxCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1ib3R0b20tY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDQKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWxlZnQtY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDUKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLXRvcC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsMgogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItcmlnaHQtY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgIDwvc3R5bGU+CiAgICA8L2hlYWQ+CiAgICA8Ym9keT4KICAgICAgICA8cD5UZXN0IHBhc3NlcyBpZiB0aGVyZSBpcyBubyByZWQgdmlzaWJsZSBvbiB0aGUgcGFnZS48L3A+CiAgICAgICAgPHRhYmxlPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQ+cmlkZ2U8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMSI+cmlkZ2U8L3RkPgogICAgICAgICAgICAgICAgPHRkPnJpZGdlPC90ZD4KICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMiI+cmlkZ2U8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMyI+Z3Jvb3ZlPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDQiPnJpZGdlPC90ZD4KICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkPnJpZGdlPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDUiPnJpZGdlPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5yaWRnZTwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgPC90YWJsZT4KICAgIDwvYm9keT4KPC9odG1sPg==",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAoYnkgYm9yZGVyIHdpZHRoKTogJ3JpZGdlJyB2cy4gJ2hpZGRlbicgLSBhIGJvcmRlciBzdHlsZSBvZiAnaGlkZGVuJyBpcyBhbHdheXMgdGhlIGRvbWluYW50IGJvcmRlcjwvdGl0bGU+CiAgICAgICAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJXM0MiIGhyZWY9Imh0dHA6Ly93d3cudzNjLm9yZy8iPgogICAgICAgIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iTWljcm9zb2Z0IiBocmVmPSJodHRwOi8vd3d3Lm1pY3Jvc29mdC5jb20vIj4KICAgICAgICA8bGluayByZWw9ImhlbHAiIGhyZWY9Imh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL3RhYmxlcy5odG1sI2JvcmRlci1jb25mbGljdC1yZXNvbHV0aW9uIj4KICAgICAgICA8bWV0YSBuYW1lPSJmbGFncyIgY29udGVudD0iIj4KICAgICAgICA8bWV0YSBuYW1lPSJhc3NlcnQiIGNvbnRlbnQ9IlRoZSAnaGlkZGVuJyBib3JkZXIgc3R5bGUgdGFrZXMgcHJlY2VkZW5jZSBvdmVyIGFsbCBzdHlsZSBhbmQgd2lkdGggZGVmaW5pdGlvbnMuIj4KICAgICAgICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgogICAgICAgICAgICB0YWJsZQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHRkCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlcjogNXB4IHJpZGdlIGJsYWNrOwogICAgICAgICAgICAgICAgaGVpZ2h0OiAzZW07CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGwzCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlcjogMTBweCBoaWRkZW4gYmxhY2s7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGwxCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1ib3R0b20tY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDQKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWxlZnQtY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDUKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLXRvcC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsMgogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItcmlnaHQtY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgIDwvc3R5bGU+CiAgICA8L2hlYWQ+CiAgICA8Ym9keT4KICAgICAgICA8cD5UZXN0IHBhc3NlcyBpZiB0aGVyZSBpcyBubyByZWQgdmlzaWJsZSBvbiB0aGUgcGFnZS48L3A+CiAgICAgICAgPHRhYmxlPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQ+cmlkZ2U8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMSI+cmlkZ2U8L3RkPgogICAgICAgICAgICAgICAgPHRkPnJpZGdlPC90ZD4KICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMiI+cmlkZ2U8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMyI+aGlkZGVuPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDQiPnJpZGdlPC90ZD4KICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkPnJpZGdlPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDUiPnJpZGdlPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5yaWRnZTwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgPC90YWJsZT4KICAgIDwvYm9keT4KPC9odG1sPg==",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAoYnkgYm9yZGVyIHdpZHRoKTogJ3JpZGdlJyB2cy4gJ2luc2V0JyAtIGJvcmRlciBzdHlsZSB3aXRoIGxhcmdlc3Qgd2lkdGggaXMgdGhlIGRvbWluYW50IGJvcmRlcjwvdGl0bGU+CiAgICAgICAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJXM0MiIGhyZWY9Imh0dHA6Ly93d3cudzNjLm9yZy8iPgogICAgICAgIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iTWljcm9zb2Z0IiBocmVmPSJodHRwOi8vd3d3Lm1pY3Jvc29mdC5jb20vIj4KICAgICAgICA8bGluayByZWw9ImhlbHAiIGhyZWY9Imh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL3RhYmxlcy5odG1sI2JvcmRlci1jb25mbGljdC1yZXNvbHV0aW9uIj4KICAgICAgICA8bWV0YSBuYW1lPSJmbGFncyIgY29udGVudD0iIj4KICAgICAgICA8bWV0YSBuYW1lPSJhc3NlcnQiIGNvbnRlbnQ9IlRoZSB3aWRlc3QgYm9yZGVyIGlzIGRvbWluYW50IHdoZW4gdHdvIGNlbGwgYm9yZGVycyBjb2xsYXBzZS4iPgogICAgICAgIDxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+CiAgICAgICAgICAgIHRhYmxlCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgdGQKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyOiA1cHggcmlkZ2UgYmxhY2s7CiAgICAgICAgICAgICAgICBoZWlnaHQ6IDNlbTsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDMKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyOiAxMHB4IGluc2V0IGJsYWNrOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsMQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItYm90dG9tLWNvbG9yOiByZWQ7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGw0CiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1sZWZ0LWNvbG9yOiByZWQ7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGw1CiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci10b3AtY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDIKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLXJpZ2h0LWNvbG9yOiByZWQ7CiAgICAgICAgICAgIH0KICAgICAgICA8L3N0eWxlPgogICAgPC9oZWFkPgogICAgPGJvZHk+CiAgICAgICAgPHA+VGVzdCBwYXNzZXMgaWYgdGhlcmUgaXMgbm8gcmVkIHZpc2libGUgb24gdGhlIHBhZ2UuPC9wPgogICAgICAgIDx0YWJsZT4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkPnJpZGdlPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDEiPnJpZGdlPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5yaWRnZTwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDIiPnJpZGdlPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDMiPmluc2V0PC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDQiPnJpZGdlPC90ZD4KICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkPnJpZGdlPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDUiPnJpZGdlPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5yaWRnZTwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgPC90YWJsZT4KICAgIDwvYm9keT4KPC9odG1sPg==",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAoYnkgYm9yZGVyIHdpZHRoKTogJ3JpZGdlJyB2cy4gJ25vbmUnIC0gYm9yZGVyIHN0eWxlIHdpdGggbGFyZ2VzdCB3aWR0aCBpcyB0aGUgZG9taW5hbnQgYm9yZGVyPC90aXRsZT4KICAgICAgICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9IlczQyIgaHJlZj0iaHR0cDovL3d3dy53M2Mub3JnLyI+CiAgICAgICAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJNaWNyb3NvZnQiIGhyZWY9Imh0dHA6Ly93d3cubWljcm9zb2Z0LmNvbS8iPgogICAgICAgIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjYm9yZGVyLWNvbmZsaWN0LXJlc29sdXRpb24iPgogICAgICAgIDxtZXRhIG5hbWU9ImZsYWdzIiBjb250ZW50PSIiPgogICAgICAgIDxtZXRhIG5hbWU9ImFzc2VydCIgY29udGVudD0iVGhlIHdpZGVzdCBib3JkZXIgaXMgZG9taW5hbnQgd2hlbiB0d28gY2VsbCBib3JkZXJzIGNvbGxhcHNlLiI+CiAgICAgICAgPHN0eWxlIHR5cGU9InRleHQvY3NzIj4KICAgICAgICAgICAgdGFibGUKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsKICAgICAgICAgICAgfQogICAgICAgICAgICB0ZAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXI6IDVweCByaWRnZSBibGFjazsKICAgICAgICAgICAgICAgIGhlaWdodDogM2VtOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsMQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXI6IDEwcHggbm9uZSByZWQ7CiAgICAgICAgICAgIH0KICAgICAgICA8L3N0eWxlPgogICAgPC9oZWFkPgogICAgPGJvZHk+CiAgICAgICAgPHA+VGVzdCBwYXNzZXMgaWYgdGhlcmUgaXMgbm8gcmVkIHZpc2libGUgb24gdGhlIHBhZ2UuPC9wPgogICAgICAgIDx0YWJsZT4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkPnJpZGdlPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5yaWRnZTwvdGQ+CiAgICAgICAgICAgICAgICA8dGQ+cmlkZ2U8L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQ+cmlkZ2U8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMSI+bm9uZTwvdGQ+CiAgICAgICAgICAgICAgICA8dGQ+cmlkZ2U8L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQ+cmlkZ2U8L3RkPgogICAgICAgICAgICAgICAgPHRkPnJpZGdlPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5yaWRnZTwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgPC90YWJsZT4KICAgIDwvYm9keT4KPC9odG1sPg==",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAoYnkgYm9yZGVyIHdpZHRoKTogJ3JpZGdlJyB2cy4gJ291dHNldCcgLSBib3JkZXIgc3R5bGUgd2l0aCBsYXJnZXN0IHdpZHRoIGlzIHRoZSBkb21pbmFudCBib3JkZXI8L3RpdGxlPgogICAgICAgIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iVzNDIiBocmVmPSJodHRwOi8vd3d3LnczYy5vcmcvIj4KICAgICAgICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9Ik1pY3Jvc29mdCIgaHJlZj0iaHR0cDovL3d3dy5taWNyb3NvZnQuY29tLyI+CiAgICAgICAgPGxpbmsgcmVsPSJoZWxwIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCNib3JkZXItY29uZmxpY3QtcmVzb2x1dGlvbiI+CiAgICAgICAgPG1ldGEgbmFtZT0iZmxhZ3MiIGNvbnRlbnQ9IiI+CiAgICAgICAgPG1ldGEgbmFtZT0iYXNzZXJ0IiBjb250ZW50PSJUaGUgd2lkZXN0IGJvcmRlciBpcyBkb21pbmFudCB3aGVuIHR3byBjZWxsIGJvcmRlcnMgY29sbGFwc2UuIj4KICAgICAgICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgogICAgICAgICAgICB0YWJsZQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHRkCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlcjogNXB4IHJpZGdlIGJsYWNrOwogICAgICAgICAgICAgICAgaGVpZ2h0OiAzZW07CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGwzCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlcjogMTBweCBvdXRzZXQgYmxhY2s7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGwxCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1ib3R0b20tY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDQKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWxlZnQtY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDUKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLXRvcC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsMgogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItcmlnaHQtY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgIDwvc3R5bGU+CiAgICA8L2hlYWQ+CiAgICA8Ym9keT4KICAgICAgICA8cD5UZXN0IHBhc3NlcyBpZiB0aGVyZSBpcyBubyByZWQgdmlzaWJsZSBvbiB0aGUgcGFnZS48L3A+CiAgICAgICAgPHRhYmxlPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQ+cmlkZ2U8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMSI+cmlkZ2U8L3RkPgogICAgICAgICAgICAgICAgPHRkPnJpZGdlPC90ZD4KICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMiI+cmlkZ2U8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMyI+b3V0c2V0PC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDQiPnJpZGdlPC90ZD4KICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkPnJpZGdlPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDUiPnJpZGdlPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5yaWRnZTwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgPC90YWJsZT4KICAgIDwvYm9keT4KPC9odG1sPg==",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAoYnkgYm9yZGVyIHdpZHRoKTogJ3JpZGdlJyB2cy4gJ3JpZGdlJyAtIGJvcmRlciBzdHlsZSB3aXRoIGxhcmdlc3Qgd2lkdGggaXMgdGhlIGRvbWluYW50IGJvcmRlcjwvdGl0bGU+CiAgICAgICAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJXM0MiIGhyZWY9Imh0dHA6Ly93d3cudzNjLm9yZy8iPgogICAgICAgIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iTWljcm9zb2Z0IiBocmVmPSJodHRwOi8vd3d3Lm1pY3Jvc29mdC5jb20vIj4KICAgICAgICA8bGluayByZWw9ImhlbHAiIGhyZWY9Imh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL3RhYmxlcy5odG1sI2JvcmRlci1jb25mbGljdC1yZXNvbHV0aW9uIj4KICAgICAgICA8bWV0YSBuYW1lPSJmbGFncyIgY29udGVudD0iIj4KICAgICAgICA8bWV0YSBuYW1lPSJhc3NlcnQiIGNvbnRlbnQ9IlRoZSB3aWRlc3QgYm9yZGVyIGlzIGRvbWluYW50IHdoZW4gdHdvIGNlbGwgYm9yZGVycyBjb2xsYXBzZS4iPgogICAgICAgIDxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+CiAgICAgICAgICAgIHRhYmxlCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgdGQKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyOiA1cHggcmlkZ2UgYmxhY2s7CiAgICAgICAgICAgICAgICBoZWlnaHQ6IDNlbTsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDMKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyOiAxMHB4IHJpZGdlIGJsYWNrOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsMQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItYm90dG9tLWNvbG9yOiByZWQ7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGw0CiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1sZWZ0LWNvbG9yOiByZWQ7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGw1CiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci10b3AtY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDIKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLXJpZ2h0LWNvbG9yOiByZWQ7CiAgICAgICAgICAgIH0KICAgICAgICA8L3N0eWxlPgogICAgPC9oZWFkPgogICAgPGJvZHk+CiAgICAgICAgPHA+VGVzdCBwYXNzZXMgaWYgdGhlcmUgaXMgbm8gcmVkIHZpc2libGUgb24gdGhlIHBhZ2UuPC9wPgogICAgICAgIDx0YWJsZT4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkPnJpZGdlPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDEiPnJpZGdlPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5yaWRnZTwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDIiPnJpZGdlPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDMiPnJpZGdlPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDQiPnJpZGdlPC90ZD4KICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkPnJpZGdlPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDUiPnJpZGdlPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5yaWRnZTwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgPC90YWJsZT4KICAgIDwvYm9keT4KPC9odG1sPg==",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAoYnkgYm9yZGVyIHdpZHRoKTogJ3JpZGdlJyB2cy4gJ3NvbGlkJyAtIGJvcmRlciBzdHlsZSB3aXRoIGxhcmdlc3Qgd2lkdGggaXMgdGhlIGRvbWluYW50IGJvcmRlcjwvdGl0bGU+CiAgICAgICAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJXM0MiIGhyZWY9Imh0dHA6Ly93d3cudzNjLm9yZy8iPgogICAgICAgIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iTWljcm9zb2Z0IiBocmVmPSJodHRwOi8vd3d3Lm1pY3Jvc29mdC5jb20vIj4KICAgICAgICA8bGluayByZWw9ImhlbHAiIGhyZWY9Imh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL3RhYmxlcy5odG1sI2JvcmRlci1jb25mbGljdC1yZXNvbHV0aW9uIj4KICAgICAgICA8bWV0YSBuYW1lPSJmbGFncyIgY29udGVudD0iIj4KICAgICAgICA8bWV0YSBuYW1lPSJhc3NlcnQiIGNvbnRlbnQ9IlRoZSB3aWRlc3QgYm9yZGVyIGlzIGRvbWluYW50IHdoZW4gdHdvIGNlbGwgYm9yZGVycyBjb2xsYXBzZS4iPgogICAgICAgIDxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+CiAgICAgICAgICAgIHRhYmxlCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgdGQKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyOiA1cHggcmlkZ2UgYmxhY2s7CiAgICAgICAgICAgICAgICBoZWlnaHQ6IDNlbTsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDMKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyOiAxMHB4IHNvbGlkIGJsYWNrOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsMQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItYm90dG9tLWNvbG9yOiByZWQ7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGw0CiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1sZWZ0LWNvbG9yOiByZWQ7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGw1CiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci10b3AtY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDIKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLXJpZ2h0LWNvbG9yOiByZWQ7CiAgICAgICAgICAgIH0KICAgICAgICA8L3N0eWxlPgogICAgPC9oZWFkPgogICAgPGJvZHk+CiAgICAgICAgPHA+VGVzdCBwYXNzZXMgaWYgdGhlcmUgaXMgbm8gcmVkIHZpc2libGUgb24gdGhlIHBhZ2UuPC9wPgogICAgICAgIDx0YWJsZT4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkPnJpZGdlPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDEiPnJpZGdlPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5yaWRnZTwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDIiPnJpZGdlPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDMiPnNvbGlkPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDQiPnJpZGdlPC90ZD4KICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkPnJpZGdlPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDUiPnJpZGdlPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5yaWRnZTwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgPC90YWJsZT4KICAgIDwvYm9keT4KPC9odG1sPg==",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAoYnkgYm9yZGVyIHdpZHRoKTogJ3NvbGlkJyB2cy4gJ2Rhc2hlZCcgLSBib3JkZXIgc3R5bGUgd2l0aCBsYXJnZXN0IHdpZHRoIGlzIHRoZSBkb21pbmFudCBib3JkZXI8L3RpdGxlPgogICAgICAgIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iVzNDIiBocmVmPSJodHRwOi8vd3d3LnczYy5vcmcvIj4KICAgICAgICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9Ik1pY3Jvc29mdCIgaHJlZj0iaHR0cDovL3d3dy5taWNyb3NvZnQuY29tLyI+CiAgICAgICAgPGxpbmsgcmVsPSJoZWxwIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCNib3JkZXItY29uZmxpY3QtcmVzb2x1dGlvbiI+CiAgICAgICAgPG1ldGEgbmFtZT0iZmxhZ3MiIGNvbnRlbnQ9IiI+CiAgICAgICAgPG1ldGEgbmFtZT0iYXNzZXJ0IiBjb250ZW50PSJUaGUgd2lkZXN0IGJvcmRlciBpcyBkb21pbmFudCB3aGVuIHR3byBjZWxsIGJvcmRlcnMgY29sbGFwc2UuIj4KICAgICAgICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgogICAgICAgICAgICB0YWJsZQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHRkCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlcjogNXB4IHNvbGlkIGJsYWNrOwogICAgICAgICAgICAgICAgaGVpZ2h0OiAzZW07CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGwzCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlcjogMTBweCBkYXNoZWQgYmxhY2s7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGwxCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1ib3R0b20tY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDQKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWxlZnQtY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDUKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLXRvcC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsMgogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItcmlnaHQtY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgIDwvc3R5bGU+CiAgICA8L2hlYWQ+CiAgICA8Ym9keT4KICAgICAgICA8cD5UZXN0IHBhc3NlcyBpZiB0aGVyZSBpcyBubyByZWQgdmlzaWJsZSBvbiB0aGUgcGFnZS48L3A+CiAgICAgICAgPHRhYmxlPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQ+c29saWQ8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMSI+c29saWQ8L3RkPgogICAgICAgICAgICAgICAgPHRkPnNvbGlkPC90ZD4KICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMiI+c29saWQ8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMyI+ZGFzaGVkPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDQiPnNvbGlkPC90ZD4KICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkPnNvbGlkPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDUiPnNvbGlkPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5zb2xpZDwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgPC90YWJsZT4KICAgIDwvYm9keT4KPC9odG1sPg==",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAoYnkgYm9yZGVyIHdpZHRoKTogJ3NvbGlkJyB2cy4gJ2RvdHRlZCcgLSBib3JkZXIgc3R5bGUgd2l0aCBsYXJnZXN0IHdpZHRoIGlzIHRoZSBkb21pbmFudCBib3JkZXI8L3RpdGxlPgogICAgICAgIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iVzNDIiBocmVmPSJodHRwOi8vd3d3LnczYy5vcmcvIj4KICAgICAgICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9Ik1pY3Jvc29mdCIgaHJlZj0iaHR0cDovL3d3dy5taWNyb3NvZnQuY29tLyI+CiAgICAgICAgPGxpbmsgcmVsPSJoZWxwIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCNib3JkZXItY29uZmxpY3QtcmVzb2x1dGlvbiI+CiAgICAgICAgPG1ldGEgbmFtZT0iZmxhZ3MiIGNvbnRlbnQ9IiI+CiAgICAgICAgPG1ldGEgbmFtZT0iYXNzZXJ0IiBjb250ZW50PSJUaGUgd2lkZXN0IGJvcmRlciBpcyBkb21pbmFudCB3aGVuIHR3byBjZWxsIGJvcmRlcnMgY29sbGFwc2UuIj4KICAgICAgICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgogICAgICAgICAgICB0YWJsZQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHRkCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlcjogNXB4IHNvbGlkIGJsYWNrOwogICAgICAgICAgICAgICAgaGVpZ2h0OiAzZW07CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGwzCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlcjogMTBweCBkb3R0ZWQgYmxhY2s7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGwxCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1ib3R0b20tY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDQKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWxlZnQtY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDUKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLXRvcC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsMgogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItcmlnaHQtY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgIDwvc3R5bGU+CiAgICA8L2hlYWQ+CiAgICA8Ym9keT4KICAgICAgICA8cD5UZXN0IHBhc3NlcyBpZiB0aGVyZSBpcyBubyByZWQgdmlzaWJsZSBvbiB0aGUgcGFnZS48L3A+CiAgICAgICAgPHRhYmxlPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQ+c29saWQ8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMSI+c29saWQ8L3RkPgogICAgICAgICAgICAgICAgPHRkPnNvbGlkPC90ZD4KICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMiI+c29saWQ8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMyI+ZG90dGVkPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDQiPnNvbGlkPC90ZD4KICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkPnNvbGlkPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDUiPnNvbGlkPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5zb2xpZDwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgPC90YWJsZT4KICAgIDwvYm9keT4KPC9odG1sPg==",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAoYnkgYm9yZGVyIHdpZHRoKTogJ3NvbGlkJyB2cy4gJ2RvdWJsZScgLSBib3JkZXIgc3R5bGUgd2l0aCBsYXJnZXN0IHdpZHRoIGlzIHRoZSBkb21pbmFudCBib3JkZXI8L3RpdGxlPgogICAgICAgIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iVzNDIiBocmVmPSJodHRwOi8vd3d3LnczYy5vcmcvIj4KICAgICAgICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9Ik1pY3Jvc29mdCIgaHJlZj0iaHR0cDovL3d3dy5taWNyb3NvZnQuY29tLyI+CiAgICAgICAgPGxpbmsgcmVsPSJoZWxwIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCNib3JkZXItY29uZmxpY3QtcmVzb2x1dGlvbiI+CiAgICAgICAgPG1ldGEgbmFtZT0iZmxhZ3MiIGNvbnRlbnQ9IiI+CiAgICAgICAgPG1ldGEgbmFtZT0iYXNzZXJ0IiBjb250ZW50PSJUaGUgd2lkZXN0IGJvcmRlciBpcyBkb21pbmFudCB3aGVuIHR3byBjZWxsIGJvcmRlcnMgY29sbGFwc2UuIj4KICAgICAgICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgogICAgICAgICAgICB0YWJsZQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHRkCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlcjogNXB4IHNvbGlkIGJsYWNrOwogICAgICAgICAgICAgICAgaGVpZ2h0OiAzZW07CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGwzCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlcjogMTBweCBkb3VibGUgYmxhY2s7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGwxCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1ib3R0b20tY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDQKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWxlZnQtY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDUKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLXRvcC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsMgogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItcmlnaHQtY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgIDwvc3R5bGU+CiAgICA8L2hlYWQ+CiAgICA8Ym9keT4KICAgICAgICA8cD5UZXN0IHBhc3NlcyBpZiB0aGVyZSBpcyBubyByZWQgdmlzaWJsZSBvbiB0aGUgcGFnZS48L3A+CiAgICAgICAgPHRhYmxlPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQ+c29saWQ8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMSI+c29saWQ8L3RkPgogICAgICAgICAgICAgICAgPHRkPnNvbGlkPC90ZD4KICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMiI+c29saWQ8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMyI+ZG91YmxlPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDQiPnNvbGlkPC90ZD4KICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkPnNvbGlkPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDUiPnNvbGlkPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5zb2xpZDwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgPC90YWJsZT4KICAgIDwvYm9keT4KPC9odG1sPg==",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAoYnkgYm9yZGVyIHdpZHRoKTogJ3NvbGlkJyB2cy4gJ2dyb292ZScgLSBib3JkZXIgc3R5bGUgd2l0aCBsYXJnZXN0IHdpZHRoIGlzIHRoZSBkb21pbmFudCBib3JkZXI8L3RpdGxlPgogICAgICAgIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iVzNDIiBocmVmPSJodHRwOi8vd3d3LnczYy5vcmcvIj4KICAgICAgICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9Ik1pY3Jvc29mdCIgaHJlZj0iaHR0cDovL3d3dy5taWNyb3NvZnQuY29tLyI+CiAgICAgICAgPGxpbmsgcmVsPSJoZWxwIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCNib3JkZXItY29uZmxpY3QtcmVzb2x1dGlvbiI+CiAgICAgICAgPG1ldGEgbmFtZT0iZmxhZ3MiIGNvbnRlbnQ9IiI+CiAgICAgICAgPG1ldGEgbmFtZT0iYXNzZXJ0IiBjb250ZW50PSJUaGUgd2lkZXN0IGJvcmRlciBpcyBkb21pbmFudCB3aGVuIHR3byBjZWxsIGJvcmRlcnMgY29sbGFwc2UuIj4KICAgICAgICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgogICAgICAgICAgICB0YWJsZQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHRkCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlcjogNXB4IHNvbGlkIGJsYWNrOwogICAgICAgICAgICAgICAgaGVpZ2h0OiAzZW07CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGwzCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlcjogMTBweCBncm9vdmUgYmxhY2s7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGwxCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1ib3R0b20tY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDQKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWxlZnQtY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDUKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLXRvcC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsMgogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItcmlnaHQtY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgIDwvc3R5bGU+CiAgICA8L2hlYWQ+CiAgICA8Ym9keT4KICAgICAgICA8cD5UZXN0IHBhc3NlcyBpZiB0aGVyZSBpcyBubyByZWQgdmlzaWJsZSBvbiB0aGUgcGFnZS48L3A+CiAgICAgICAgPHRhYmxlPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQ+c29saWQ8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMSI+c29saWQ8L3RkPgogICAgICAgICAgICAgICAgPHRkPnNvbGlkPC90ZD4KICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMiI+c29saWQ8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMyI+Z3Jvb3ZlPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDQiPnNvbGlkPC90ZD4KICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkPnNvbGlkPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDUiPnNvbGlkPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5zb2xpZDwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgPC90YWJsZT4KICAgIDwvYm9keT4KPC9odG1sPg==",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAoYnkgYm9yZGVyIHdpZHRoKTogJ3NvbGlkJyB2cy4gJ2hpZGRlbicgLSBhIGJvcmRlciBzdHlsZSBvZiAnaGlkZGVuJyBpcyBhbHdheXMgdGhlIGRvbWluYW50IGJvcmRlcjwvdGl0bGU+CiAgICAgICAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJXM0MiIGhyZWY9Imh0dHA6Ly93d3cudzNjLm9yZy8iPgogICAgICAgIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iTWljcm9zb2Z0IiBocmVmPSJodHRwOi8vd3d3Lm1pY3Jvc29mdC5jb20vIj4KICAgICAgICA8bGluayByZWw9ImhlbHAiIGhyZWY9Imh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL3RhYmxlcy5odG1sI2JvcmRlci1jb25mbGljdC1yZXNvbHV0aW9uIj4KICAgICAgICA8bWV0YSBuYW1lPSJmbGFncyIgY29udGVudD0iIj4KICAgICAgICA8bWV0YSBuYW1lPSJhc3NlcnQiIGNvbnRlbnQ9IlRoZSAnaGlkZGVuJyBib3JkZXIgc3R5bGUgdGFrZXMgcHJlY2VkZW5jZSBvdmVyIGFsbCBzdHlsZSBhbmQgd2lkdGggZGVmaW5pdGlvbnMuIj4KICAgICAgICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgogICAgICAgICAgICB0YWJsZQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHRkCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlcjogNXB4IHNvbGlkIGJsYWNrOwogICAgICAgICAgICAgICAgaGVpZ2h0OiAzZW07CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGwzCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlcjogMTBweCBoaWRkZW4gYmxhY2s7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGwxCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1ib3R0b20tY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDQKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWxlZnQtY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDUKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLXRvcC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsMgogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItcmlnaHQtY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgIDwvc3R5bGU+CiAgICA8L2hlYWQ+CiAgICA8Ym9keT4KICAgICAgICA8cD5UZXN0IHBhc3NlcyBpZiB0aGVyZSBpcyBubyByZWQgdmlzaWJsZSBvbiB0aGUgcGFnZS48L3A+CiAgICAgICAgPHRhYmxlPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQ+c29saWQ8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMSI+c29saWQ8L3RkPgogICAgICAgICAgICAgICAgPHRkPnNvbGlkPC90ZD4KICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMiI+c29saWQ8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMyI+aGlkZGVuPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDQiPnNvbGlkPC90ZD4KICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkPnNvbGlkPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDUiPnNvbGlkPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5zb2xpZDwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgPC90YWJsZT4KICAgIDwvYm9keT4KPC9odG1sPg==",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAoYnkgYm9yZGVyIHdpZHRoKTogJ3NvbGlkJyB2cy4gJ2luc2V0JyAtIGJvcmRlciBzdHlsZSB3aXRoIGxhcmdlc3Qgd2lkdGggaXMgdGhlIGRvbWluYW50IGJvcmRlcjwvdGl0bGU+CiAgICAgICAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJXM0MiIGhyZWY9Imh0dHA6Ly93d3cudzNjLm9yZy8iPgogICAgICAgIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iTWljcm9zb2Z0IiBocmVmPSJodHRwOi8vd3d3Lm1pY3Jvc29mdC5jb20vIj4KICAgICAgICA8bGluayByZWw9ImhlbHAiIGhyZWY9Imh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL3RhYmxlcy5odG1sI2JvcmRlci1jb25mbGljdC1yZXNvbHV0aW9uIj4KICAgICAgICA8bWV0YSBuYW1lPSJmbGFncyIgY29udGVudD0iIj4KICAgICAgICA8bWV0YSBuYW1lPSJhc3NlcnQiIGNvbnRlbnQ9IlRoZSB3aWRlc3QgYm9yZGVyIGlzIGRvbWluYW50IHdoZW4gdHdvIGNlbGwgYm9yZGVycyBjb2xsYXBzZS4iPgogICAgICAgIDxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+CiAgICAgICAgICAgIHRhYmxlCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgdGQKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyOiA1cHggc29saWQgYmxhY2s7CiAgICAgICAgICAgICAgICBoZWlnaHQ6IDNlbTsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDMKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyOiAxMHB4IGluc2V0IGJsYWNrOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsMQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItYm90dG9tLWNvbG9yOiByZWQ7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGw0CiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1sZWZ0LWNvbG9yOiByZWQ7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGw1CiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci10b3AtY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDIKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLXJpZ2h0LWNvbG9yOiByZWQ7CiAgICAgICAgICAgIH0KICAgICAgICA8L3N0eWxlPgogICAgPC9oZWFkPgogICAgPGJvZHk+CiAgICAgICAgPHA+VGVzdCBwYXNzZXMgaWYgdGhlcmUgaXMgbm8gcmVkIHZpc2libGUgb24gdGhlIHBhZ2UuPC9wPgogICAgICAgIDx0YWJsZT4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkPnNvbGlkPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDEiPnNvbGlkPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5zb2xpZDwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDIiPnNvbGlkPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDMiPmluc2V0PC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDQiPnNvbGlkPC90ZD4KICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkPnNvbGlkPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDUiPnNvbGlkPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5zb2xpZDwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgPC90YWJsZT4KICAgIDwvYm9keT4KPC9odG1sPg==",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAoYnkgYm9yZGVyIHdpZHRoKTogJ3NvbGlkJyB2cy4gJ25vbmUnIC0gYm9yZGVyIHN0eWxlIHdpdGggbGFyZ2VzdCB3aWR0aCBzaG91bGQgYmUgdGhlIGRvbWluYW50IGJvcmRlcjwvdGl0bGU+CiAgICAgICAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJXM0MiIGhyZWY9Imh0dHA6Ly93d3cudzNjLm9yZy8iPgogICAgICAgIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iTWljcm9zb2Z0IiBocmVmPSJodHRwOi8vd3d3Lm1pY3Jvc29mdC5jb20vIj4KICAgICAgICA8bGluayByZWw9ImhlbHAiIGhyZWY9Imh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL3RhYmxlcy5odG1sI2JvcmRlci1jb25mbGljdC1yZXNvbHV0aW9uIj4KICAgICAgICA8bWV0YSBuYW1lPSJmbGFncyIgY29udGVudD0iIj4KICAgICAgICA8bWV0YSBuYW1lPSJhc3NlcnQiIGNvbnRlbnQ9IlRoZSB3aWRlc3QgYm9yZGVyIGlzIGRvbWluYW50IHdoZW4gdHdvIGNlbGwgYm9yZGVycyBjb2xsYXBzZS4iPgogICAgICAgIDxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+CiAgICAgICAgICAgIHRhYmxlCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgdGQKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyOiA1cHggc29saWQgYmxhY2s7CiAgICAgICAgICAgICAgICBoZWlnaHQ6IDNlbTsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDEKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyOiAxMHB4IG5vbmUgcmVkOwogICAgICAgICAgICB9CiAgICAgICAgPC9zdHlsZT4KICAgIDwvaGVhZD4KICAgIDxib2R5PgogICAgICAgIDxwPlRlc3QgcGFzc2VzIGlmIHRoZXJlIGlzIG5vIHJlZCB2aXNpYmxlIG9uIHRoZSBwYWdlLjwvcD4KICAgICAgICA8dGFibGU+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD5zb2xpZDwvdGQ+CiAgICAgICAgICAgICAgICA8dGQ+c29saWQ8L3RkPgogICAgICAgICAgICAgICAgPHRkPnNvbGlkPC90ZD4KICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkPnNvbGlkPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDEiPm5vbmU8L3RkPgogICAgICAgICAgICAgICAgPHRkPnNvbGlkPC90ZD4KICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkPnNvbGlkPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5zb2xpZDwvdGQ+CiAgICAgICAgICAgICAgICA8dGQ+c29saWQ8L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgIDwvdGFibGU+CiAgICA8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAoYnkgYm9yZGVyIHdpZHRoKTogJ3NvbGlkJyB2cy4gJ291dHNldCcgLSBib3JkZXIgc3R5bGUgd2l0aCBsYXJnZXN0IHdpZHRoIGlzIHRoZSBkb21pbmFudCBib3JkZXI8L3RpdGxlPgogICAgICAgIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iVzNDIiBocmVmPSJodHRwOi8vd3d3LnczYy5vcmcvIj4KICAgICAgICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9Ik1pY3Jvc29mdCIgaHJlZj0iaHR0cDovL3d3dy5taWNyb3NvZnQuY29tLyI+CiAgICAgICAgPGxpbmsgcmVsPSJoZWxwIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCNib3JkZXItY29uZmxpY3QtcmVzb2x1dGlvbiI+CiAgICAgICAgPG1ldGEgbmFtZT0iZmxhZ3MiIGNvbnRlbnQ9IiI+CiAgICAgICAgPG1ldGEgbmFtZT0iYXNzZXJ0IiBjb250ZW50PSJUaGUgd2lkZXN0IGJvcmRlciBpcyBkb21pbmFudCB3aGVuIHR3byBjZWxsIGJvcmRlcnMgY29sbGFwc2UuIj4KICAgICAgICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgogICAgICAgICAgICB0YWJsZQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHRkCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlcjogNXB4IHNvbGlkIGJsYWNrOwogICAgICAgICAgICAgICAgaGVpZ2h0OiAzZW07CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGwzCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlcjogMTBweCBvdXRzZXQgYmxhY2s7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGwxCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1ib3R0b20tY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDQKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLWxlZnQtY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDUKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLXRvcC1jb2xvcjogcmVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsMgogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItcmlnaHQtY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgIDwvc3R5bGU+CiAgICA8L2hlYWQ+CiAgICA8Ym9keT4KICAgICAgICA8cD5UZXN0IHBhc3NlcyBpZiB0aGVyZSBpcyBubyByZWQgdmlzaWJsZSBvbiB0aGUgcGFnZS48L3A+CiAgICAgICAgPHRhYmxlPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQ+c29saWQ8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMSI+c29saWQ8L3RkPgogICAgICAgICAgICAgICAgPHRkPnNvbGlkPC90ZD4KICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMiI+c29saWQ8L3RkPgogICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsMyI+b3V0c2V0PC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDQiPnNvbGlkPC90ZD4KICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkPnNvbGlkPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDUiPnNvbGlkPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5zb2xpZDwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgPC90YWJsZT4KICAgIDwvYm9keT4KPC9odG1sPg==",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAoYnkgYm9yZGVyIHdpZHRoKTogJ3NvbGlkJyB2cy4gJ3JpZGdlJyAtIGJvcmRlciBzdHlsZSB3aXRoIGxhcmdlc3Qgd2lkdGggaXMgdGhlIGRvbWluYW50IGJvcmRlcjwvdGl0bGU+CiAgICAgICAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJXM0MiIGhyZWY9Imh0dHA6Ly93d3cudzNjLm9yZy8iPgogICAgICAgIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iTWljcm9zb2Z0IiBocmVmPSJodHRwOi8vd3d3Lm1pY3Jvc29mdC5jb20vIj4KICAgICAgICA8bGluayByZWw9ImhlbHAiIGhyZWY9Imh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL3RhYmxlcy5odG1sI2JvcmRlci1jb25mbGljdC1yZXNvbHV0aW9uIj4KICAgICAgICA8bWV0YSBuYW1lPSJmbGFncyIgY29udGVudD0iIj4KICAgICAgICA8bWV0YSBuYW1lPSJhc3NlcnQiIGNvbnRlbnQ9IlRoZSB3aWRlc3QgYm9yZGVyIGlzIGRvbWluYW50IHdoZW4gdHdvIGNlbGwgYm9yZGVycyBjb2xsYXBzZS4iPgogICAgICAgIDxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+CiAgICAgICAgICAgIHRhYmxlCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgdGQKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyOiA1cHggc29saWQgYmxhY2s7CiAgICAgICAgICAgICAgICBoZWlnaHQ6IDNlbTsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDMKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyOiAxMHB4IHJpZGdlIGJsYWNrOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsMQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItYm90dG9tLWNvbG9yOiByZWQ7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGw0CiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1sZWZ0LWNvbG9yOiByZWQ7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGw1CiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci10b3AtY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDIKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLXJpZ2h0LWNvbG9yOiByZWQ7CiAgICAgICAgICAgIH0KICAgICAgICA8L3N0eWxlPgogICAgPC9oZWFkPgogICAgPGJvZHk+CiAgICAgICAgPHA+VGVzdCBwYXNzZXMgaWYgdGhlcmUgaXMgbm8gcmVkIHZpc2libGUgb24gdGhlIHBhZ2UuPC9wPgogICAgICAgIDx0YWJsZT4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkPnNvbGlkPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDEiPnNvbGlkPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5zb2xpZDwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDIiPnNvbGlkPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDMiPnJpZGdlPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDQiPnNvbGlkPC90ZD4KICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkPnNvbGlkPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDUiPnNvbGlkPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5zb2xpZDwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgPC90YWJsZT4KICAgIDwvYm9keT4KPC9odG1sPg==",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXIgQ29uZmxpY3QgUmVzb2x1dGlvbiAoYnkgYm9yZGVyIHdpZHRoKTogJ3NvbGlkJyB2cy4gJ3NvbGlkJyAtIGJvcmRlciBzdHlsZSB3aXRoIGxhcmdlc3Qgd2lkdGggaXMgdGhlIGRvbWluYW50IGJvcmRlcjwvdGl0bGU+CiAgICAgICAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJXM0MiIGhyZWY9Imh0dHA6Ly93d3cudzNjLm9yZy8iPgogICAgICAgIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iTWljcm9zb2Z0IiBocmVmPSJodHRwOi8vd3d3Lm1pY3Jvc29mdC5jb20vIj4KICAgICAgICA8bGluayByZWw9ImhlbHAiIGhyZWY9Imh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL3RhYmxlcy5odG1sI2JvcmRlci1jb25mbGljdC1yZXNvbHV0aW9uIj4KICAgICAgICA8bWV0YSBuYW1lPSJmbGFncyIgY29udGVudD0iIj4KICAgICAgICA8bWV0YSBuYW1lPSJhc3NlcnQiIGNvbnRlbnQ9IlRoZSB3aWRlc3QgYm9yZGVyIGlzIGRvbWluYW50IHdoZW4gdHdvIGNlbGwgYm9yZGVycyBjb2xsYXBzZS4iPgogICAgICAgIDxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+CiAgICAgICAgICAgIHRhYmxlCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgdGQKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyOiA1cHggc29saWQgYmxhY2s7CiAgICAgICAgICAgICAgICBoZWlnaHQ6IDNlbTsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDMKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyOiAxMHB4IHNvbGlkIGJsYWNrOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsMQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItYm90dG9tLWNvbG9yOiByZWQ7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGw0CiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1sZWZ0LWNvbG9yOiByZWQ7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NlbGw1CiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci10b3AtY29sb3I6IHJlZDsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbDIKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLXJpZ2h0LWNvbG9yOiByZWQ7CiAgICAgICAgICAgIH0KICAgICAgICA8L3N0eWxlPgogICAgPC9oZWFkPgogICAgPGJvZHk+CiAgICAgICAgPHA+VGVzdCBwYXNzZXMgaWYgdGhlcmUgaXMgbm8gcmVkIHZpc2libGUgb24gdGhlIHBhZ2UuPC9wPgogICAgICAgIDx0YWJsZT4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkPnNvbGlkPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDEiPnNvbGlkPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5zb2xpZDwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDIiPnNvbGlkPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDMiPnNvbGlkPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDQiPnNvbGlkPC90ZD4KICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkPnNvbGlkPC90ZD4KICAgICAgICAgICAgICAgIDx0ZCBpZD0iY2VsbDUiPnNvbGlkPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5zb2xpZDwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgPC90YWJsZT4KICAgIDwvYm9keT4KPC9odG1sPg==",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXItc3BhY2luZyB1c2luZyBwaXhlbHMgd2l0aCBhIG1pbmltdW0gbWludXMgb25lIHZhbHVlLCAtMXB4PC90aXRsZT4KICAgICAgICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9Ik1pY3Jvc29mdCIgaHJlZj0iaHR0cDovL3d3dy5taWNyb3NvZnQuY29tLyI+CiAgICAgICAgPGxpbmsgcmVsPSJoZWxwIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCNwcm9wZGVmLWJvcmRlci1zcGFjaW5nIj4KICAgICAgICA8bGluayByZWw9ImhlbHAiIGhyZWY9Imh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL3RhYmxlcy5odG1sI3NlcGFyYXRlZC1ib3JkZXJzIj4KICAgICAgICA8bWV0YSBuYW1lPSJmbGFncyIgY29udGVudD0iIj4KICAgICAgICA8bWV0YSBuYW1lPSJhc3NlcnQiIGNvbnRlbnQ9IlNldHRpbmcgYm9yZGVyLXNwYWNpbmcgdG8gYSB2YWx1ZSBiZWxvdyB0aGUgbWluaW11bSBpbiBwaXhlbHMgZmFsbHMgYmFjayB0byB0aGUgZGVmYXVsdCB2YWx1ZS4iPgogICAgICAgIDxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+CiAgICAgICAgICAgIHRhYmxlCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IGJsYWNrOwogICAgICAgICAgICAgICAgZm9udC1zaXplOiAxMnB0OwogICAgICAgICAgICAgICAgbWFyZ2luLXRvcDogMTBweDsKICAgICAgICAgICAgfQogICAgICAgICAgICAjdGVzdAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItc3BhY2luZzogLTFweDsKICAgICAgICAgICAgfQogICAgICAgICAgICB0ZAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBoZWlnaHQ6IDEwMHB4OwogICAgICAgICAgICAgICAgcGFkZGluZzogMDsKICAgICAgICAgICAgICAgIHdpZHRoOiAxMDBweDsKICAgICAgICAgICAgfQogICAgICAgIDwvc3R5bGU+CiAgICA8L2hlYWQ+CiAgICA8Ym9keT4KICAgICAgICA8cD5UZXN0IHBhc3NlcyBpZiB0aGUgdHdvIGJveGVzIGJlbG93IGFyZSB0aGUgc2FtZSB3aWR0aC48L3A+CiAgICAgICAgPHRhYmxlIGlkPSJ0ZXN0Ij4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkPjwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgPC90YWJsZT4KICAgICAgICA8dGFibGU+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD48L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgIDwvdGFibGU+CiAgICA8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXItc3BhY2luZyB1c2luZyBwb2ludHMgd2l0aCBhIG5vbWluYWwgdmFsdWUsIDcycHQ8L3RpdGxlPgogICAgICAgIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iTWljcm9zb2Z0IiBocmVmPSJodHRwOi8vd3d3Lm1pY3Jvc29mdC5jb20vIj4KICAgICAgICA8bGluayByZWw9ImhlbHAiIGhyZWY9Imh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL3RhYmxlcy5odG1sI3Byb3BkZWYtYm9yZGVyLXNwYWNpbmciPgogICAgICAgIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjc2VwYXJhdGVkLWJvcmRlcnMiPgogICAgICAgIDxtZXRhIG5hbWU9ImZsYWdzIiBjb250ZW50PSJhaGVtIj4KICAgICAgICA8bWV0YSBuYW1lPSJhc3NlcnQiIGNvbnRlbnQ9IkJvcmRlci1zcGFjaW5nIGNhbiBiZSBzZXQgdG8gbm9taW5hbCBsZW5ndGggaW4gcG9pbnRzLiI+CiAgICAgICAgPHN0eWxlIHR5cGU9InRleHQvY3NzIj4KICAgICAgICAgICAgZGl2LCB0YWJsZQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBmb250OiAyMHB4LzEgQWhlbTsKICAgICAgICAgICAgfQogICAgICAgICAgICBkaXYKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYmFja2dyb3VuZDogYmxhY2s7CiAgICAgICAgICAgICAgICBoZWlnaHQ6IDFlbTsKICAgICAgICAgICAgICAgIGxlZnQ6IDE2MnB0OwogICAgICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlOwogICAgICAgICAgICAgICAgdG9wOiA3MnB0OwogICAgICAgICAgICAgICAgd2lkdGg6IDcycHQ7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgdGFibGUKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLXNwYWNpbmc6IDcycHQ7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgdGQKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgcGFkZGluZzogMDsKICAgICAgICAgICAgfQogICAgICAgIDwvc3R5bGU+CiAgICA8L2hlYWQ+CiAgICA8Ym9keT4KICAgICAgICA8cD5UZXN0IHBhc3NlcyBpZiB0aGUgbWlkZGxlIGJhciBpcyBhcyB3aWRlIGFzIHRoZSBzcGFjZSBiZXR3ZWVuIHRoZSBmaXJzdCBhbmQgbGFzdCBiYXJzLjwvcD4KICAgICAgICA8ZGl2PjwvZGl2PgogICAgICAgIDx0YWJsZT4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkPlhYWFhYWDwvdGQ+CiAgICAgICAgICAgICAgICA8dGQ+WFhYWFhYPC90ZD4KICAgICAgICAgICAgPC90cj4KICAgICAgICA8L3RhYmxlPgogICAgPC9ib2R5Pgo8L2h0bWw+",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXItc3BhY2luZyB1c2luZyBpbmNoZXMgd2l0aCBhIG1pbmltdW0gdmFsdWUsIDBpbjwvdGl0bGU+CiAgICAgICAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJNaWNyb3NvZnQiIGhyZWY9Imh0dHA6Ly93d3cubWljcm9zb2Z0LmNvbS8iPgogICAgICAgIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjcHJvcGRlZi1ib3JkZXItc3BhY2luZyI+CiAgICAgICAgPGxpbmsgcmVsPSJoZWxwIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCNzZXBhcmF0ZWQtYm9yZGVycyI+CiAgICAgICAgPG1ldGEgbmFtZT0iZmxhZ3MiIGNvbnRlbnQ9ImFoZW0iPgogICAgICAgIDxtZXRhIG5hbWU9ImFzc2VydCIgY29udGVudD0iQm9yZGVyLXNwYWNpbmcgY2FuIGJlIHNldCB0byB0aGUgbWluaW11bSB2YWx1ZSB3aXRoIGluY2hlcy4iPgogICAgICAgIDxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+CiAgICAgICAgICAgIHRhYmxlCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1zcGFjaW5nOiAwaW47CiAgICAgICAgICAgICAgICBmb250OiAyMHB4LzEgQWhlbTsKICAgICAgICAgICAgfQogICAgICAgICAgICB0ZAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBwYWRkaW5nOiAwOwogICAgICAgICAgICB9CiAgICAgICAgPC9zdHlsZT4KICAgIDwvaGVhZD4KICAgIDxib2R5PgogICAgICAgIDxwPlRlc3QgcGFzc2VzIGlmIHRoZXJlIGlzIG9ubHkgb25lIGJhciBiZWxvdyB0aGlzIGxpbmUuPC9wPgogICAgICAgIDx0YWJsZT4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkPlhYWFhYPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5YWFhYWDwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgPC90YWJsZT4KICAgIDwvYm9keT4KPC9odG1sPg==",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXItc3BhY2luZyB1c2luZyAnZW0nIHVuaXRzIHdpdGggYSBtaW5pbXVtIHBsdXMgb25lIHZhbHVlLCAxZW08L3RpdGxlPgogICAgICAgIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iTWljcm9zb2Z0IiBocmVmPSJodHRwOi8vd3d3Lm1pY3Jvc29mdC5jb20vIj4KICAgICAgICA8bGluayByZWw9ImhlbHAiIGhyZWY9Imh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL3RhYmxlcy5odG1sI3Byb3BkZWYtYm9yZGVyLXNwYWNpbmciPgogICAgICAgIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjc2VwYXJhdGVkLWJvcmRlcnMiPgogICAgICAgIDxtZXRhIG5hbWU9ImZsYWdzIiBjb250ZW50PSJhaGVtIj4KICAgICAgICA8bWV0YSBuYW1lPSJhc3NlcnQiIGNvbnRlbnQ9IkJvcmRlci1zcGFjaW5nIGNhbiBiZSBzZXQgb25lIGFib3ZlIHRoZSBtaW5pbXVtIGluICdlbScgdW5pdHMuIj4KICAgICAgICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgogICAgICAgICAgICBkaXYsIHRhYmxlCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGZvbnQ6IDIwcHgvMSBBaGVtOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGRpdgogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiBibGFjazsKICAgICAgICAgICAgICAgIGhlaWdodDogMWVtOwogICAgICAgICAgICAgICAgbGVmdDogN2VtOwogICAgICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlOwogICAgICAgICAgICAgICAgdG9wOiAxZW07CiAgICAgICAgICAgICAgICB3aWR0aDogMWVtOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHRhYmxlCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1zcGFjaW5nOiAxZW07CiAgICAgICAgICAgIH0KICAgICAgICAgICAgdGQKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgcGFkZGluZzogMDsKICAgICAgICAgICAgfQogICAgICAgIDwvc3R5bGU+CiAgICA8L2hlYWQ+CiAgICA8Ym9keT4KICAgICAgICA8cD5UZXN0IHBhc3NlcyBpZiB0aGUgbWlkZGxlIGJsb2NrIGlzIGFzIHdpZGUgYXMgdGhlIHNwYWNlIGJldHdlZW4gdGhlIGZpcnN0IGFuZCBsYXN0IGJhcnMuPC9wPgogICAgICAgIDxkaXY+PC9kaXY+CiAgICAgICAgPHRhYmxlPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQ+WFhYWFhYPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5YWFhYWFg8L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgIDwvdGFibGU+CiAgICA8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXItc3BhY2luZyBzZXQgdG8gemVybyB1c2luZyAnZW0nIHVuaXRzIHdpdGggYSBtaW51cyBzaWduLCAtMGVtPC90aXRsZT4KICAgICAgICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9Ik1pY3Jvc29mdCIgaHJlZj0iaHR0cDovL3d3dy5taWNyb3NvZnQuY29tLyI+CiAgICAgICAgPGxpbmsgcmVsPSJoZWxwIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCNwcm9wZGVmLWJvcmRlci1zcGFjaW5nIj4KICAgICAgICA8bGluayByZWw9ImhlbHAiIGhyZWY9Imh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL3RhYmxlcy5odG1sI3NlcGFyYXRlZC1ib3JkZXJzIj4KICAgICAgICA8bWV0YSBuYW1lPSJmbGFncyIgY29udGVudD0iYWhlbSI+CiAgICAgICAgPG1ldGEgbmFtZT0iYXNzZXJ0IiBjb250ZW50PSJCb3JkZXItc3BhY2luZyBjYW4gYmUgc2V0IHRvIHRoZSBtaW5pbXVtIHZhbHVlLCB1c2luZyB6ZXJvIHdpdGggYSBtaW51cyBzaWduLCBpbiAnZW0nIHVuaXRzLiI+CiAgICAgICAgPHN0eWxlIHR5cGU9InRleHQvY3NzIj4KICAgICAgICAgICAgdGFibGUKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLXNwYWNpbmc6IC0wZW07CiAgICAgICAgICAgICAgICBmb250OiAyMHB4LzEgQWhlbTsKICAgICAgICAgICAgfQogICAgICAgICAgICB0ZAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBwYWRkaW5nOiAwOwogICAgICAgICAgICB9CiAgICAgICAgPC9zdHlsZT4KICAgIDwvaGVhZD4KICAgIDxib2R5PgogICAgICAgIDxwPlRlc3QgcGFzc2VzIGlmIHRoZXJlIGlzIG9ubHkgb25lIGJhciBiZWxvdyB0aGlzIGxpbmUuPC9wPgogICAgICAgIDx0YWJsZT4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkPlhYWFg8L3RkPgogICAgICAgICAgICAgICAgPHRkPlhYWFg8L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgIDwvdGFibGU+CiAgICA8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXItc3BhY2luZyBzZXQgdG8gemVybyB1c2luZyAnZW0nIHVuaXRzIHdpdGggYSBwbHVzIHNpZ24sICswZW08L3RpdGxlPgogICAgICAgIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iTWljcm9zb2Z0IiBocmVmPSJodHRwOi8vd3d3Lm1pY3Jvc29mdC5jb20vIj4KICAgICAgICA8bGluayByZWw9ImhlbHAiIGhyZWY9Imh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL3RhYmxlcy5odG1sI3Byb3BkZWYtYm9yZGVyLXNwYWNpbmciPgogICAgICAgIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjc2VwYXJhdGVkLWJvcmRlcnMiPgogICAgICAgIDxtZXRhIG5hbWU9ImZsYWdzIiBjb250ZW50PSJhaGVtIj4KICAgICAgICA8bWV0YSBuYW1lPSJhc3NlcnQiIGNvbnRlbnQ9IkJvcmRlci1zcGFjaW5nIGNhbiBiZSBzZXQgdG8gdGhlIG1pbmltdW0gdmFsdWUsIHVzaW5nIHplcm8gd2l0aCBhIHBsdXMgc2lnbiwgaW4gJ2VtJyB1bml0cy4iPgogICAgICAgIDxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+CiAgICAgICAgICAgIHRhYmxlCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1zcGFjaW5nOiArMGVtOwogICAgICAgICAgICAgICAgZm9udDogMjBweC8xIEFoZW07CiAgICAgICAgICAgIH0KICAgICAgICAgICAgdGQKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgcGFkZGluZzogMDsKICAgICAgICAgICAgfQogICAgICAgIDwvc3R5bGU+CiAgICA8L2hlYWQ+CiAgICA8Ym9keT4KICAgICAgICA8cD5UZXN0IHBhc3NlcyBpZiB0aGVyZSBpcyBvbmx5IG9uZSBiYXIgYmVsb3cgdGhpcyBsaW5lLjwvcD4KICAgICAgICA8dGFibGU+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD5YWFhYPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5YWFhYPC90ZD4KICAgICAgICAgICAgPC90cj4KICAgICAgICA8L3RhYmxlPgogICAgPC9ib2R5Pgo8L2h0bWw+",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXItc3BhY2luZyB1c2luZyAnZW0nIHVuaXRzIHdpdGggYSBub21pbmFsIHZhbHVlLCA2ZW08L3RpdGxlPgogICAgICAgIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iTWljcm9zb2Z0IiBocmVmPSJodHRwOi8vd3d3Lm1pY3Jvc29mdC5jb20vIj4KICAgICAgICA8bGluayByZWw9ImhlbHAiIGhyZWY9Imh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL3RhYmxlcy5odG1sI3Byb3BkZWYtYm9yZGVyLXNwYWNpbmciPgogICAgICAgIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjc2VwYXJhdGVkLWJvcmRlcnMiPgogICAgICAgIDxtZXRhIG5hbWU9ImZsYWdzIiBjb250ZW50PSJhaGVtIj4KICAgICAgICA8bWV0YSBuYW1lPSJhc3NlcnQiIGNvbnRlbnQ9IkJvcmRlci1zcGFjaW5nIGNhbiBiZSBzZXQgdG8gbm9taW5hbCBsZW5ndGggaW4gJ2VtJyB1bml0cy4iPgogICAgICAgIDxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+CiAgICAgICAgICAgIGRpdiwgdGFibGUKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgZm9udDogMjBweC8xIEFoZW07CiAgICAgICAgICAgIH0KICAgICAgICAgICAgZGl2CiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IGJsYWNrOwogICAgICAgICAgICAgICAgaGVpZ2h0OiAxZW07CiAgICAgICAgICAgICAgICBsZWZ0OiAxMmVtOwogICAgICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlOwogICAgICAgICAgICAgICAgdG9wOiA2ZW07CiAgICAgICAgICAgICAgICB3aWR0aDogNmVtOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHRhYmxlCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1zcGFjaW5nOiA2ZW07CiAgICAgICAgICAgIH0KICAgICAgICAgICAgdGQKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgcGFkZGluZzogMDsKICAgICAgICAgICAgfQogICAgICAgIDwvc3R5bGU+CiAgICA8L2hlYWQ+CiAgICA8Ym9keT4KICAgICAgICA8cD5UZXN0IHBhc3NlcyBpZiB0aGUgbWlkZGxlIGJhciBpcyBhcyB3aWRlIGFzIHRoZSBzcGFjZSBiZXR3ZWVuIHRoZSBmaXJzdCBhbmQgbGFzdCBiYXJzLjwvcD4KICAgICAgICA8ZGl2PjwvZGl2PgogICAgICAgIDx0YWJsZT4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkPlhYWFhYWDwvdGQ+CiAgICAgICAgICAgICAgICA8dGQ+WFhYWFhYPC90ZD4KICAgICAgICAgICAgPC90cj4KICAgICAgICA8L3RhYmxlPgogICAgPC9ib2R5Pgo8L2h0bWw+",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXItc3BhY2luZyB1c2luZyAnZW0nIHVuaXRzIHdpdGggYSBub21pbmFsIHZhbHVlIHdpdGggYSBwbHVzIHNpZ24sICs2ZW08L3RpdGxlPgogICAgICAgIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iTWljcm9zb2Z0IiBocmVmPSJodHRwOi8vd3d3Lm1pY3Jvc29mdC5jb20vIj4KICAgICAgICA8bGluayByZWw9ImhlbHAiIGhyZWY9Imh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL3RhYmxlcy5odG1sI3Byb3BkZWYtYm9yZGVyLXNwYWNpbmciPgogICAgICAgIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjc2VwYXJhdGVkLWJvcmRlcnMiPgogICAgICAgIDxtZXRhIG5hbWU9ImZsYWdzIiBjb250ZW50PSJhaGVtIj4KICAgICAgICA8bWV0YSBuYW1lPSJhc3NlcnQiIGNvbnRlbnQ9IkJvcmRlci1zcGFjaW5nIGNhbiBiZSBzZXQgdG8gYSBub21pbmFsIGxlbmd0aCAod2l0aCBwbHVzIHNpZ24pIGluICdlbScgdW5pdHMuIj4KICAgICAgICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgogICAgICAgICAgICBkaXYsIHRhYmxlCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGZvbnQ6IDIwcHgvMSBBaGVtOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGRpdgogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiBibGFjazsKICAgICAgICAgICAgICAgIGhlaWdodDogMWVtOwogICAgICAgICAgICAgICAgbGVmdDogMTJlbTsKICAgICAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsKICAgICAgICAgICAgICAgIHRvcDogNmVtOwogICAgICAgICAgICAgICAgd2lkdGg6IDZlbTsKICAgICAgICAgICAgfQogICAgICAgICAgICB0YWJsZQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXItc3BhY2luZzogKzZlbTsKICAgICAgICAgICAgfQogICAgICAgICAgICB0ZAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBwYWRkaW5nOiAwOwogICAgICAgICAgICB9CiAgICAgICAgPC9zdHlsZT4KICAgIDwvaGVhZD4KICAgIDxib2R5PgogICAgICAgIDxwPlRlc3QgcGFzc2VzIGlmIHRoZSBtaWRkbGUgYmFyIGlzIGFzIHdpZGUgYXMgdGhlIHNwYWNlIGJldHdlZW4gdGhlIGZpcnN0IGFuZCBsYXN0IGJhcnMuPC9wPgogICAgICAgIDxkaXY+PC9kaXY+CiAgICAgICAgPHRhYmxlPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQ+WFhYWFhYPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5YWFhYWFg8L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgIDwvdGFibGU+CiAgICA8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXItc3BhY2luZyB1c2luZyAnZXgnIHVuaXRzIHdpdGggYSBtaW5pbXVtIG1pbnVzIG9uZSB2YWx1ZSwgLTFleDwvdGl0bGU+CiAgICAgICAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJNaWNyb3NvZnQiIGhyZWY9Imh0dHA6Ly93d3cubWljcm9zb2Z0LmNvbS8iPgogICAgICAgIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjcHJvcGRlZi1ib3JkZXItc3BhY2luZyI+CiAgICAgICAgPGxpbmsgcmVsPSJoZWxwIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCNzZXBhcmF0ZWQtYm9yZGVycyI+CiAgICAgICAgPG1ldGEgbmFtZT0iZmxhZ3MiIGNvbnRlbnQ9IiI+CiAgICAgICAgPG1ldGEgbmFtZT0iYXNzZXJ0IiBjb250ZW50PSJTZXR0aW5nIGJvcmRlci1zcGFjaW5nIHRvIGEgdmFsdWUgYmVsb3cgdGhlIG1pbmltdW0gaW4gJ2V4JyB1bml0cyBmYWxscyBiYWNrIHRvIHRoZSBkZWZhdWx0IHZhbHVlLiI+CiAgICAgICAgPHN0eWxlIHR5cGU9InRleHQvY3NzIj4KICAgICAgICAgICAgdGFibGUKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogYmxhY2s7CiAgICAgICAgICAgICAgICBmb250LXNpemU6IDEycHQ7CiAgICAgICAgICAgICAgICBtYXJnaW4tdG9wOiAxMHB4OwogICAgICAgICAgICB9CiAgICAgICAgICAgICN0ZXN0CiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1zcGFjaW5nOiAtMWV4OwogICAgICAgICAgICB9CiAgICAgICAgICAgIHRkCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGhlaWdodDogMTAwcHg7CiAgICAgICAgICAgICAgICBwYWRkaW5nOiAwOwogICAgICAgICAgICAgICAgd2lkdGg6IDEwMHB4OwogICAgICAgICAgICB9CiAgICAgICAgPC9zdHlsZT4KICAgIDwvaGVhZD4KICAgIDxib2R5PgogICAgICAgIDxwPlRlc3QgcGFzc2VzIGlmIHRoZSB0d28gYm94ZXMgYmVsb3cgYXJlIHRoZSBzYW1lIHdpZHRoLjwvcD4KICAgICAgICA8dGFibGUgaWQ9InRlc3QiPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQ+PC90ZD4KICAgICAgICAgICAgPC90cj4KICAgICAgICA8L3RhYmxlPgogICAgICAgIDx0YWJsZT4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkPjwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgPC90YWJsZT4KICAgIDwvYm9keT4KPC9odG1sPg==",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXItc3BhY2luZyB1c2luZyAnZXgnIHVuaXRzIHdpdGggYSBtaW5pbXVtIHZhbHVlLCAwZXg8L3RpdGxlPgogICAgICAgIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iTWljcm9zb2Z0IiBocmVmPSJodHRwOi8vd3d3Lm1pY3Jvc29mdC5jb20vIj4KICAgICAgICA8bGluayByZWw9ImhlbHAiIGhyZWY9Imh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL3RhYmxlcy5odG1sI3Byb3BkZWYtYm9yZGVyLXNwYWNpbmciPgogICAgICAgIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjc2VwYXJhdGVkLWJvcmRlcnMiPgogICAgICAgIDxtZXRhIG5hbWU9ImZsYWdzIiBjb250ZW50PSJhaGVtIj4KICAgICAgICA8bWV0YSBuYW1lPSJhc3NlcnQiIGNvbnRlbnQ9IkJvcmRlci1zcGFjaW5nIGNhbiBiZSBzZXQgdG8gdGhlIG1pbmltdW0gdmFsdWUgaW4gJ2V4JyB1bml0cy4iPgogICAgICAgIDxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+CiAgICAgICAgICAgIHRhYmxlCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1zcGFjaW5nOiAwZXg7CiAgICAgICAgICAgICAgICBmb250OiAyMHB4LzEgQWhlbTsKICAgICAgICAgICAgfQogICAgICAgICAgICB0ZAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBwYWRkaW5nOiAwOwogICAgICAgICAgICB9CiAgICAgICAgPC9zdHlsZT4KICAgIDwvaGVhZD4KICAgIDxib2R5PgogICAgICAgIDxwPlRlc3QgcGFzc2VzIGlmIHRoZXJlIGlzIG9ubHkgb25lIGJhciBiZWxvdyB0aGlzIGxpbmUuPC9wPgogICAgICAgIDx0YWJsZT4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkPlhYWFg8L3RkPgogICAgICAgICAgICAgICAgPHRkPlhYWFg8L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgIDwvdGFibGU+CiAgICA8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXItc3BhY2luZyBzZXQgdG8gemVybyB3aXRoIG5vIHVuaXRzLCAwPC90aXRsZT4KICAgICAgICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9Ik1pY3Jvc29mdCIgaHJlZj0iaHR0cDovL3d3dy5taWNyb3NvZnQuY29tLyI+CiAgICAgICAgPGxpbmsgcmVsPSJoZWxwIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCNwcm9wZGVmLWJvcmRlci1zcGFjaW5nIj4KICAgICAgICA8bGluayByZWw9ImhlbHAiIGhyZWY9Imh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL3RhYmxlcy5odG1sI3NlcGFyYXRlZC1ib3JkZXJzIj4KICAgICAgICA8bWV0YSBuYW1lPSJmbGFncyIgY29udGVudD0iYWhlbSI+CiAgICAgICAgPG1ldGEgbmFtZT0iYXNzZXJ0IiBjb250ZW50PSJCb3JkZXItc3BhY2luZyBjYW4gYmUgc2V0IHRvIHRoZSBtaW5pbXVtIHZhbHVlIHdpdGggYW4gaW50ZWdlci4iPgogICAgICAgIDxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+CiAgICAgICAgICAgIHRhYmxlCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1zcGFjaW5nOiAwOwogICAgICAgICAgICAgICAgZm9udDogMjBweC8xIEFoZW07CiAgICAgICAgICAgIH0KICAgICAgICAgICAgdGQKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgcGFkZGluZzogMDsKICAgICAgICAgICAgfQogICAgICAgIDwvc3R5bGU+CiAgICA8L2hlYWQ+CiAgICA8Ym9keT4KICAgICAgICA8cD5UZXN0IHBhc3NlcyBpZiB0aGVyZSBpcyBvbmx5IG9uZSBib3ggYmVsb3cgdGhpcyBsaW5lLjwvcD4KICAgICAgICA8dGFibGU+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD5YWFhYWDwvdGQ+CiAgICAgICAgICAgICAgICA8dGQ+WFhYWFg8L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgIDwvdGFibGU+CiAgICA8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBOZWdhdGl2ZSAnYm9yZGVyLXNwYWNpbmcnIHZhbHVlcyBhcmUgaWdub3JlZDwvdGl0bGU+CiAgICAgICAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJNaWNyb3NvZnQiIGhyZWY9Imh0dHA6Ly93d3cubWljcm9zb2Z0LmNvbS8iPgogICAgICAgIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjc2VwYXJhdGVkLWJvcmRlcnMiPgogICAgICAgIDxtZXRhIG5hbWU9ImZsYWdzIiBjb250ZW50PSIiPgogICAgICAgIDxtZXRhIG5hbWU9ImFzc2VydCIgY29udGVudD0iVGhlICdib3JkZXItc3BhY2luZycgcHJvcGVydHkgaWdub3JlcyBhIG5lZ2F0aXZlIHZhbHVlLiI+CiAgICAgICAgPHN0eWxlIHR5cGU9InRleHQvY3NzIj4KICAgICAgICAgICAgI3RhYmxlMQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiBibHVlOwogICAgICAgICAgICAgICAgYm9yZGVyLXNwYWNpbmc6IC0xMDBweDsKICAgICAgICAgICAgfQogICAgICAgICAgICAjdGFibGUyCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IG9yYW5nZTsKICAgICAgICAgICAgfQogICAgICAgICAgICB0ZAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBoZWlnaHQ6IDUwcHg7CiAgICAgICAgICAgICAgICB3aWR0aDogNTBweDsKICAgICAgICAgICAgfQogICAgICAgIDwvc3R5bGU+CiAgICA8L2hlYWQ+CiAgICA8Ym9keT4KICAgICAgICA8cD5UZXN0IHBhc3NlcyBpZiB0aGUgYmx1ZSBhbmQgb3JhbmdlIHNxdWFyZXMgYmVsb3cgYXJlIHRoZSBzYW1lIHNpemUuPC9wPgogICAgICAgIDx0YWJsZSBpZD0idGFibGUxIj4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkPjwvdGQ+CiAgICAgICAgICAgICAgICA8dGQ+PC90ZD4KICAgICAgICAgICAgICAgIDx0ZD48L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQ+PC90ZD4KICAgICAgICAgICAgICAgIDx0ZD48L3RkPgogICAgICAgICAgICAgICAgPHRkPjwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD48L3RkPgogICAgICAgICAgICAgICAgPHRkPjwvdGQ+CiAgICAgICAgICAgICAgICA8dGQ+PC90ZD4KICAgICAgICAgICAgPC90cj4KICAgICAgICA8L3RhYmxlPgogICAgICAgIDxkaXY+Jm5ic3A7PC9kaXY+CiAgICAgICAgPHRhYmxlIGlkPSJ0YWJsZTIiPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQ+PC90ZD4KICAgICAgICAgICAgICAgIDx0ZD48L3RkPgogICAgICAgICAgICAgICAgPHRkPjwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD48L3RkPgogICAgICAgICAgICAgICAgPHRkPjwvdGQ+CiAgICAgICAgICAgICAgICA8dGQ+PC90ZD4KICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkPjwvdGQ+CiAgICAgICAgICAgICAgICA8dGQ+PC90ZD4KICAgICAgICAgICAgICAgIDx0ZD48L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgIDwvdGFibGU+CiAgICA8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBUYWJsZS1TcGVjaWZpYyBCb3JkZXIgU3R5bGUgQmVoYXZpb3IgKHNlcGFyYXRlZCBib3JkZXIgbW9kZWwvaW5zZXQpPC90aXRsZT4KICAgICAgICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9Ik1pY3Jvc29mdCIgaHJlZj0iaHR0cDovL3d3dy5taWNyb3NvZnQuY29tLyI+CiAgICAgICAgPGxpbmsgcmVsPSJoZWxwIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCN0YWJsZS1ib3JkZXItc3R5bGVzIj4KICAgICAgICA8bWV0YSBuYW1lPSJmbGFncyIgY29udGVudD0iIj4KICAgICAgICA8bWV0YSBuYW1lPSJhc3NlcnQiIGNvbnRlbnQ9IkluIHRoZSBzZXBhcmF0ZWQgYm9yZGVyIG1vZGVsLCB0aGUgJ2luc2V0JyBib3JkZXIgc3R5bGUgbWFrZXMgaXRzIGJveCBsb29rcyBsaWtlIGl0IGlzIGVtYmVkZGVkIGluIHRoZSBjYW52YXMuIj4KICAgICAgICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgogICAgICAgICAgICB0YWJsZQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXI6IDEwcHggaW5zZXQ7CiAgICAgICAgICAgICAgICBib3JkZXItY29sbGFwc2U6IHNlcGFyYXRlOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHRkCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGhlaWdodDogM2VtOwogICAgICAgICAgICAgICAgd2lkdGg6IDZlbTsKICAgICAgICAgICAgfQogICAgICAgIDwvc3R5bGU+CiAgICA8L2hlYWQ+CiAgICA8Ym9keT4KICAgICAgICA8cD5UZXN0IHBhc3NlcyBpZiB0aGUgYm94IGJlbG93IGxvb2tzIGxpa2UgaXQgaXMgZW1iZWRkZWQgaW50byB0aGUgc3VyZmFjZSBvZiB0aGUgcGFnZS48L3A+CiAgICAgICAgPHRhYmxlPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQ+PC90ZD4KICAgICAgICAgICAgPC90cj4KICAgICAgICA8L3RhYmxlPgogICAgPC9ib2R5Pgo8L2h0bWw+",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBUYWJsZS1TcGVjaWZpYyBCb3JkZXIgU3R5bGUgQmVoYXZpb3IgKGNvbGxhcHNpbmcgYm9yZGVyIG1vZGVsL2luc2V0KTwvdGl0bGU+CiAgICAgICAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJNaWNyb3NvZnQiIGhyZWY9Imh0dHA6Ly93d3cubWljcm9zb2Z0LmNvbS8iPgogICAgICAgIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjdGFibGUtYm9yZGVyLXN0eWxlcyI+CiAgICAgICAgPG1ldGEgbmFtZT0iZmxhZ3MiIGNvbnRlbnQ9IiI+CiAgICAgICAgPG1ldGEgbmFtZT0iYXNzZXJ0IiBjb250ZW50PSJJbiB0aGUgY29sbGFwc2luZyBib3JkZXIgbW9kZWwsIHRoZSAnaW5zZXQnIGJvcmRlciBzdHlsZSBsb29rcyB0aGUgc2FtZSBhcyB0aGUgJ3JpZGdlJyBib3JkZXIgc3R5bGUuIj4KICAgICAgICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgogICAgICAgICAgICAjdGFibGUxCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1jb2xsYXBzZTogc2VwYXJhdGU7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI3RhYmxlMgogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXI6IDMwcHggaW5zZXQ7CiAgICAgICAgICAgICAgICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHRkCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGhlaWdodDogNWVtOwogICAgICAgICAgICAgICAgd2lkdGg6IDVlbTsKICAgICAgICAgICAgfQogICAgICAgICAgICAjdGFibGUxIHRkCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlcjogMzBweCByaWRnZTsKICAgICAgICAgICAgfQogICAgICAgICAgICAjdGFibGUyIHRkCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlcjogMzBweCBpbnNldDsKICAgICAgICAgICAgfQogICAgICAgIDwvc3R5bGU+CiAgICA8L2hlYWQ+CiAgICA8Ym9keT4KICAgICAgICA8cD5UZXN0IHBhc3NlcyBpZiB0aGUgdHdvIGJveGVzIGJlbG93IGhhdmUgaWRlbnRpY2FsIGJvcmRlcnMgdGhhdCBsb29rIGFzIGlmIHRoZXkgYXJlIHBvcHBpbmcgb3V0IG9mIHRoZSBjYW52YXMuPC9wPgogICAgICAgIDx0YWJsZSBpZD0idGFibGUxIj4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkPiZuYnNwOzwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgPC90YWJsZT4KICAgICAgICA8ZGl2PiZuYnNwOzwvZGl2PgogICAgICAgIDx0YWJsZSBpZD0idGFibGUyIj4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkPiZuYnNwOzwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgPC90YWJsZT4KICAgIDwvYm9keT4KPC9odG1sPg==",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBUYWJsZS1TcGVjaWZpYyBCb3JkZXIgU3R5bGUgQmVoYXZpb3IgKHNlcGFyYXRlZCBib3JkZXIgbW9kZWwvb3V0c2V0KTwvdGl0bGU+CiAgICAgICAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJNaWNyb3NvZnQiIGhyZWY9Imh0dHA6Ly93d3cubWljcm9zb2Z0LmNvbS8iPgogICAgICAgIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjdGFibGUtYm9yZGVyLXN0eWxlcyI+CiAgICAgICAgPG1ldGEgbmFtZT0iZmxhZ3MiIGNvbnRlbnQ9IiI+CiAgICAgICAgPG1ldGEgbmFtZT0iYXNzZXJ0IiBjb250ZW50PSJJbiB0aGUgc2VwYXJhdGVkIGJvcmRlciBtb2RlbCwgdGhlICdvdXRzZXQnIGJvcmRlciBzdHlsZSBtYWtlcyBpdHMgYm94IGxvb2tzIGxpa2UgaXQgaXMgc3RhbmRpbmcgb2ZmIG9mIHRoZSBjYW52YXMuIj4KICAgICAgICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgogICAgICAgICAgICB0YWJsZQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXI6IDEwcHggb3V0c2V0OwogICAgICAgICAgICAgICAgYm9yZGVyLWNvbGxhcHNlOiBzZXBhcmF0ZTsKICAgICAgICAgICAgfQogICAgICAgICAgICB0ZAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICB3aWR0aDogNmVtOwogICAgICAgICAgICAgICAgaGVpZ2h0OiAzZW07CiAgICAgICAgICAgIH0KICAgICAgICA8L3N0eWxlPgogICAgPC9oZWFkPgogICAgPGJvZHk+CiAgICAgICAgPHA+VGVzdCBwYXNzZXMgaWYgdGhlIGJveCBiZWxvdyBsb29rcyBsaWtlIGl0IHN0aWNrcyBvdXQgb2YgdGhlIHN1cmZhY2Ugb2YgdGhlIHBhZ2UuPC9wPgogICAgICAgIDx0YWJsZT4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkPjwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgPC90YWJsZT4KICAgIDwvYm9keT4KPC9odG1sPg==",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBUYWJsZS1TcGVjaWZpYyBCb3JkZXIgU3R5bGUgQmVoYXZpb3IgKGNvbGxhcHNpbmcgYm9yZGVyIG1vZGVsL291dHNldCk8L3RpdGxlPgogICAgICAgIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iTWljcm9zb2Z0IiBocmVmPSJodHRwOi8vd3d3Lm1pY3Jvc29mdC5jb20vIj4KICAgICAgICA8bGluayByZWw9ImhlbHAiIGhyZWY9Imh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL3RhYmxlcy5odG1sI3RhYmxlLWJvcmRlci1zdHlsZXMiPgogICAgICAgIDxtZXRhIG5hbWU9ImZsYWdzIiBjb250ZW50PSIiPgogICAgICAgIDxtZXRhIG5hbWU9ImFzc2VydCIgY29udGVudD0iSW4gdGhlIGNvbGxhcHNpbmcgYm9yZGVyIG1vZGVsLCB0aGUgJ291dHNldCcgYm9yZGVyIHN0eWxlIGxvb2tzIHRoZSBzYW1lIGFzIHRoZSAnZ3Jvb3ZlJyBib3JkZXIgc3R5bGUuIj4KICAgICAgICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgogICAgICAgICAgICAjdGFibGUxCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1jb2xsYXBzZTogc2VwYXJhdGU7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI3RhYmxlMgogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXI6IDMwcHggb3V0c2V0OwogICAgICAgICAgICAgICAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsKICAgICAgICAgICAgfQogICAgICAgICAgICB0ZAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBoZWlnaHQ6IDVlbTsKICAgICAgICAgICAgICAgIHdpZHRoOiA1ZW07CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI3RhYmxlMSB0ZAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXI6IDMwcHggZ3Jvb3ZlOwogICAgICAgICAgICB9CiAgICAgICAgICAgICN0YWJsZTIgdGQKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyOiAzMHB4IG91dHNldDsKICAgICAgICAgICAgfQogICAgICAgIDwvc3R5bGU+CiAgICA8L2hlYWQ+CiAgICA8Ym9keT4KICAgICAgICA8cD5UZXN0IHBhc3NlcyBpZiB0aGUgdHdvIGJveGVzIGJlbG93IGhhdmUgaWRlbnRpY2FsIGJvcmRlcnMgdGhhdCBsb29rIGFzIGlmIHRoZXkgYXJlIGNhcnZlZCBpbnRvIHRoZSBjYW52YXMuPC9wPgogICAgICAgIDx0YWJsZSBpZD0idGFibGUxIj4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkPjwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgPC90YWJsZT4KICAgICAgICA8ZGl2PiZuYnNwOzwvZGl2PgogICAgICAgIDx0YWJsZSBpZD0idGFibGUyIj4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkPjwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgPC90YWJsZT4KICAgIDwvYm9keT4KPC9odG1sPg==",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBDYXB0aW9uLXNpZGUgc2V0IHRvICd0b3AnPC90aXRsZT4KICAgICAgICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9Ik1pY3Jvc29mdCIgaHJlZj0iaHR0cDovL3d3dy5taWNyb3NvZnQuY29tLyI+CiAgICAgICAgPGxpbmsgcmVsPSJoZWxwIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCNwcm9wZGVmLWNhcHRpb24tc2lkZSI+CiAgICAgICAgPGxpbmsgcmVsPSJoZWxwIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCNjYXB0aW9uLXBvc2l0aW9uIj4KICAgICAgICA8bWV0YSBuYW1lPSJmbGFncyIgY29udGVudD0iIj4KICAgICAgICA8bWV0YSBuYW1lPSJhc3NlcnQiIGNvbnRlbnQ9IkEgY2FwdGlvbiB3aXRoIGEgJ2NhcHRpb24tc2lkZScgdmFsdWUgb2YgJ3RvcCcgd2lsbCBiZSBwb3NpdGlvbmVkIGFib3ZlIGl0cyB0YWJsZS4iPgogICAgICAgIDxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+CiAgICAgICAgICAgIHRhYmxlCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IGJsYWNrOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGNhcHRpb24KICAgICAgICAgICAgewogICAgICAgICAgICAgICAgY2FwdGlvbi1zaWRlOiB0b3A7CiAgICAgICAgICAgIH0KICAgICAgICA8L3N0eWxlPgogICAgPC9oZWFkPgogICAgPGJvZHk+CiAgICAgICAgPHA+VGVzdCBwYXNzZXMgaWYgdGhlICJGaWxsZXIgVGV4dCIgYXBwZWFycyBhYm92ZSB0aGUgYm94LjwvcD4KICAgICAgICA8dGFibGU+CiAgICAgICAgICAgIDxjYXB0aW9uPkZpbGxlciZuYnNwO1RleHQ8L2NhcHRpb24+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD5YWFhYWDwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgPC90YWJsZT4KICAgIDwvYm9keT4KPC9odG1sPg==",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBDYXB0aW9uLXNpZGUgc2V0IHRvICdib3R0b20nPC90aXRsZT4KICAgICAgICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9Ik1pY3Jvc29mdCIgaHJlZj0iaHR0cDovL3d3dy5taWNyb3NvZnQuY29tLyI+CiAgICAgICAgPGxpbmsgcmVsPSJoZWxwIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCNwcm9wZGVmLWNhcHRpb24tc2lkZSI+CiAgICAgICAgPGxpbmsgcmVsPSJoZWxwIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCNjYXB0aW9uLXBvc2l0aW9uIj4KICAgICAgICA8bWV0YSBuYW1lPSJmbGFncyIgY29udGVudD0iIj4KICAgICAgICA8bWV0YSBuYW1lPSJhc3NlcnQiIGNvbnRlbnQ9IkEgY2FwdGlvbiB3aXRoIGEgJ2NhcHRpb24tc2lkZScgdmFsdWUgb2YgJ2JvdHRvbScgd2lsbCBiZSBwb3NpdGlvbmVkIGJlbG93IGl0cyB0YWJsZS4iPgogICAgICAgIDxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+CiAgICAgICAgICAgIHRhYmxlCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IGJsYWNrOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGNhcHRpb24KICAgICAgICAgICAgewogICAgICAgICAgICAgICAgY2FwdGlvbi1zaWRlOiBib3R0b207CiAgICAgICAgICAgIH0KICAgICAgICA8L3N0eWxlPgogICAgPC9oZWFkPgogICAgPGJvZHk+CiAgICAgICAgPHA+VGVzdCBwYXNzZXMgaWYgdGhlICJGaWxsZXIgVGV4dCIgYXBwZWFycyBiZWxvdyB0aGUgYm94LjwvcD4KICAgICAgICA8dGFibGU+CiAgICAgICAgICAgIDxjYXB0aW9uPkZpbGxlciZuYnNwO1RleHQ8L2NhcHRpb24+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD5YWFhYWDwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgPC90YWJsZT4KICAgIDwvYm9keT4KPC9odG1sPg==",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBDYXB0aW9uLXNpZGUgYW5kICdkaXNwbGF5OiBpbmxpbmUnIGVsZW1lbnRzPC90aXRsZT4KICAgICAgICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9Ik1pY3Jvc29mdCIgaHJlZj0iaHR0cDovL3d3dy5taWNyb3NvZnQuY29tLyI+CiAgICAgICAgPGxpbmsgcmVsPSJoZWxwIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCNwcm9wZGVmLWNhcHRpb24tc2lkZSI+CiAgICAgICAgPGxpbmsgcmVsPSJoZWxwIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCNjYXB0aW9uLXBvc2l0aW9uIj4KICAgICAgICA8bWV0YSBuYW1lPSJmbGFncyIgY29udGVudD0iIj4KICAgICAgICA8bWV0YSBuYW1lPSJhc3NlcnQiIGNvbnRlbnQ9IkNhcHRpb24tc2lkZSBkb2VzIG5vdCBhcHBseSB0byAnZGlzcGxheTogaW5saW5lJyBlbGVtZW50cy4iPgogICAgICAgIDxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+CiAgICAgICAgICAgIGRpdiBkaXYKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgY2FwdGlvbi1zaWRlOiBib3R0b207CiAgICAgICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmU7CiAgICAgICAgICAgIH0KICAgICAgICA8L3N0eWxlPgogICAgPC9oZWFkPgogICAgPGJvZHk+CiAgICAgICAgPHA+VGVzdCBwYXNzZXMgaWYgdGhlIHdvcmRzICJGaWxsZXIgVGV4dCIgYmVsb3cgYXJlIGFsbCBvbiB0aGUgc2FtZSBsaW5lLjwvcD4KICAgICAgICA8ZGl2PgogICAgICAgICAgICBGaWxsZXIgVGV4dAogICAgICAgICAgICA8ZGl2PkZpbGxlciBUZXh0PC9kaXY+CiAgICAgICAgICAgIEZpbGxlciBUZXh0CiAgICAgICAgPC9kaXY+CiAgICA8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBDYXB0aW9uLXNpZGUgYW5kICdkaXNwbGF5OiBibG9jaycgZWxlbWVudHM8L3RpdGxlPgogICAgICAgIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iTWljcm9zb2Z0IiBocmVmPSJodHRwOi8vd3d3Lm1pY3Jvc29mdC5jb20vIj4KICAgICAgICA8bGluayByZWw9ImhlbHAiIGhyZWY9Imh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL3RhYmxlcy5odG1sI3Byb3BkZWYtY2FwdGlvbi1zaWRlIj4KICAgICAgICA8bGluayByZWw9ImhlbHAiIGhyZWY9Imh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL3RhYmxlcy5odG1sI2NhcHRpb24tcG9zaXRpb24iPgogICAgICAgIDxtZXRhIG5hbWU9ImZsYWdzIiBjb250ZW50PSIiPgogICAgICAgIDxtZXRhIG5hbWU9ImFzc2VydCIgY29udGVudD0iQ2FwdGlvbi1zaWRlIGRvZXMgbm90IGFwcGx5IHRvICdkaXNwbGF5OiBibG9jaycgZWxlbWVudHMuIj4KICAgICAgICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgogICAgICAgICAgICBzcGFuCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IGJsdWU7CiAgICAgICAgICAgICAgICBjYXB0aW9uLXNpZGU6IGJvdHRvbTsKICAgICAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrOwogICAgICAgICAgICB9CiAgICAgICAgPC9zdHlsZT4KICAgIDwvaGVhZD4KICAgIDxib2R5PgogICAgICAgIDxwPlRlc3QgcGFzc2VzIGlmIHRoZXJlIGFyZSB0aHJlZSBsaW5lcyBvZiAiRmlsbGVyIFRleHQiIGJlbG93IGFuZCB0aGUgbWlkZGxlIGxpbmUgaGFzIGEgYmx1ZSBiYWNrZ3JvdW5kLjwvcD4KICAgICAgICA8ZGl2PgogICAgICAgICAgICBGaWxsZXIgVGV4dAogICAgICAgICAgICA8c3Bhbj5GaWxsZXIgVGV4dDwvc3Bhbj4KICAgICAgICAgICAgRmlsbGVyIFRleHQKICAgICAgICA8L2Rpdj4KICAgIDwvYm9keT4KPC9odG1sPg==",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBDYXB0aW9uLXNpZGUgYW5kICdkaXNwbGF5OiBsaXN0LWl0ZW0nIGVsZW1lbnRzPC90aXRsZT4KICAgICAgICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9Ik1pY3Jvc29mdCIgaHJlZj0iaHR0cDovL3d3dy5taWNyb3NvZnQuY29tLyI+CiAgICAgICAgPGxpbmsgcmVsPSJoZWxwIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCNwcm9wZGVmLWNhcHRpb24tc2lkZSI+CiAgICAgICAgPGxpbmsgcmVsPSJoZWxwIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCNjYXB0aW9uLXBvc2l0aW9uIj4KICAgICAgICA8bWV0YSBuYW1lPSJmbGFncyIgY29udGVudD0iIj4KICAgICAgICA8bWV0YSBuYW1lPSJhc3NlcnQiIGNvbnRlbnQ9IkNhcHRpb24tc2lkZSBkb2VzIG5vdCBhcHBseSB0byAnZGlzcGxheTogbGlzdC1pdGVtJyBlbGVtZW50cy4iPgogICAgICAgIDxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+CiAgICAgICAgICAgIGRpdgogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogMmVtOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHNwYW4KICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYmFja2dyb3VuZDogb3JhbmdlOwogICAgICAgICAgICAgICAgY2FwdGlvbi1zaWRlOiBib3R0b207CiAgICAgICAgICAgICAgICBkaXNwbGF5OiBsaXN0LWl0ZW07CiAgICAgICAgICAgIH0KICAgICAgICA8L3N0eWxlPgogICAgPC9oZWFkPgogICAgPGJvZHk+CiAgICAgICAgPHA+VGVzdCBwYXNzZXMgaWYgdGhlcmUgYXJlIHRocmVlIGxpbmVzIG9mICJGaWxsZXIgVGV4dCIgYmVsb3cgYW5kIGlmIHRoZSBtaWRkbGUgIkZpbGxlciBUZXh0IiBoYXMgYSBvcmFuZ2UgYmFja2dyb3VuZCBhbmQgYSBtYXJrZXIgYnVsbGV0IG9uIGl0cyBsZWZ0LWhhbmQgc2lkZS4gVGhlIG1hcmtlciBidWxsZXQgc2hvdWxkIG5vdCBoYXZlIGFuIG9yYW5nZSBiYWNrZ3JvdW5kLjwvcD4KICAgICAgICA8ZGl2PgogICAgICAgICAgICBGaWxsZXIgVGV4dAogICAgICAgICAgICA8c3Bhbj5GaWxsZXIgVGV4dDwvc3Bhbj4KICAgICAgICAgICAgRmlsbGVyIFRleHQKICAgICAgICA8L2Rpdj4KICAgIDwvYm9keT4KPC9odG1sPg==",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBBbGlnbmluZyBUYWJsZSBEYXRhIChjZWxsIGRhdGEgaXMgdmVydGljYWxseSBhbGlnbmVkKTwvdGl0bGU+CiAgICAgICAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJNaWNyb3NvZnQiIGhyZWY9Imh0dHA6Ly93d3cubWljcm9zb2Z0LmNvbS8iPgogICAgICAgIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjdGFibGVzLWludHJvIj4KICAgICAgICA8bWV0YSBuYW1lPSJmbGFncyIgY29udGVudD0iIj4KICAgICAgICA8bWV0YSBuYW1lPSJhc3NlcnQiIGNvbnRlbnQ9IkNlbGwgZGF0YSBjYW4gYmUgdmVydGljYWxseSBhbGlnbmVkLiI+CiAgICAgICAgPHN0eWxlIHR5cGU9InRleHQvY3NzIj4KICAgICAgICAgICAgdGFibGUKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyOiBzb2xpZDsKICAgICAgICAgICAgfQogICAgICAgICAgICB0ZAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBoZWlnaHQ6IDEwZW07CiAgICAgICAgICAgICAgICB2ZXJ0aWNhbC1hbGlnbjogYm90dG9tOwogICAgICAgICAgICAgICAgd2lkdGg6IDEwZW07CiAgICAgICAgICAgIH0KICAgICAgICA8L3N0eWxlPgogICAgPC9oZWFkPgogICAgPGJvZHk+CiAgICAgICAgPHA+VGVzdCBwYXNzZXMgaWYgdGhlICJGaWxsZXIgVGV4dCIgaXMgYXQgdGhlIGJvdHRvbSBvZiB0aGUgYm94IGJlbG93LjwvcD4KICAgICAgICA8dGFibGU+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD5GaWxsZXIgVGV4dDwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgPC90YWJsZT4KICAgIDwvYm9keT4KIDwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBBbGlnbmluZyBUYWJsZSBEYXRhIChjZWxsIGRhdGEgaXMgaG9yaXpvbnRhbGx5IGFsaWduZWQpPC90aXRsZT4KICAgICAgICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9Ik1pY3Jvc29mdCIgaHJlZj0iaHR0cDovL3d3dy5taWNyb3NvZnQuY29tLyI+CiAgICAgICAgPGxpbmsgcmVsPSJoZWxwIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCN0YWJsZXMtaW50cm8iPgogICAgICAgIDxtZXRhIG5hbWU9ImZsYWdzIiBjb250ZW50PSIiPgogICAgICAgIDxtZXRhIG5hbWU9ImFzc2VydCIgY29udGVudD0iQ2VsbCBkYXRhIGNhbiBiZSBob3Jpem9udGFsbHkgYWxpZ25lZC4iPgogICAgICAgIDxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+CiAgICAgICAgICAgIHRhYmxlCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlcjogc29saWQ7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgdGQKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgaGVpZ2h0OiAxMGVtOwogICAgICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyOwogICAgICAgICAgICAgICAgd2lkdGg6IDEwZW07CiAgICAgICAgICAgIH0KICAgICAgICA8L3N0eWxlPgogICAgPC9oZWFkPgogICAgPGJvZHk+CiAgICAgICAgPHA+VGVzdCBwYXNzZXMgaWYgdGhlICJGaWxsZXIgVGV4dCIgaXMgaG9yaXpvbnRhbGx5IGNlbnRlcmVkIHdpdGhpbiB0aGUgYm94IGJlbG93LjwvcD4KICAgICAgICA8dGFibGU+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD5GaWxsZXIgVGV4dDwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgPC90YWJsZT4KICAgIDwvYm9keT4KIDwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBBbGlnbmluZyBUYWJsZSBEYXRhIChyb3cgZGF0YSBpcyBhbGlnbmVkKTwvdGl0bGU+CiAgICAgICAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJNaWNyb3NvZnQiIGhyZWY9Imh0dHA6Ly93d3cubWljcm9zb2Z0LmNvbS8iPgogICAgICAgIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjdGFibGVzLWludHJvIj4KICAgICAgICA8bWV0YSBuYW1lPSJmbGFncyIgY29udGVudD0iIj4KICAgICAgICA8bWV0YSBuYW1lPSJhc3NlcnQiIGNvbnRlbnQ9IkNlbGwgZGF0YSBpbiBhIHJvdyBjYW4gYmUgaG9yaXpvbnRhbGx5IGFuZCB2ZXJ0aWNhbGx5IGFsaWduZWQuIj4KICAgICAgICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgogICAgICAgICAgICB0cgogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlOwogICAgICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHRkCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIHdpZHRoOiAxMGVtOwogICAgICAgICAgICAgICAgaGVpZ2h0OiAxMGVtOwogICAgICAgICAgICAgICAgYm9yZGVyOiBzb2xpZDsKICAgICAgICAgICAgfQogICAgICAgIDwvc3R5bGU+CiAgICA8L2hlYWQ+CiAgICA8Ym9keT4KICAgICAgICA8cD5UZXN0IHBhc3NlcyBpZiB0aGUgIkZpbGxlciBUZXh0IiBpcyBob3Jpem9udGFsbHkgYW5kIHZlcnRpY2FsbHkgY2VudGVyZWQgaW4gZWFjaCBvZiB0aGUgYm94ZXMgYmVsb3cuPC9wPgogICAgICAgIDx0YWJsZT4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkPkZpbGxlciBUZXh0PC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5GaWxsZXIgVGV4dDwvdGQ+CiAgICAgICAgICAgICAgICA8dGQ+RmlsbGVyIFRleHQ8L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgIDwvdGFibGU+CiAgICA8L2JvZHk+CiA8L2h0bWw+",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBBbGlnbmluZyBUYWJsZSBEYXRhIChjb2x1bW4gZGF0YSBpcyBhbGlnbmVkKTwvdGl0bGU+CiAgICAgICAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJNaWNyb3NvZnQiIGhyZWY9Imh0dHA6Ly93d3cubWljcm9zb2Z0LmNvbS8iPgogICAgICAgIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjdGFibGVzLWludHJvIj4KICAgICAgICA8bWV0YSBuYW1lPSJmbGFncyIgY29udGVudD0iIj4KICAgICAgICA8bWV0YSBuYW1lPSJhc3NlcnQiIGNvbnRlbnQ9IkFsaWdubWVudCBvZiBjZWxsIGRhdGEgaW4gYSBjb2x1bW4gaXMgYWNoaWV2ZWQgYnkgc3BlY2lmeWluZyBhbGlnbm1lbnQgcHJvcGVydGllcyBvbiB0aGUgY2VsbHMgdGhlbXNlbHZlcywgYW5kIG5vdCBvbiB0aGUgY29sdW1uIGVsZW1lbnQgZGlyZWN0bHkuIj4KICAgICAgICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgogICAgICAgICAgICBjb2wKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyOwogICAgICAgICAgICAgICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTsKICAgICAgICAgICAgfQogICAgICAgICAgICB0ZAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXI6IHNvbGlkOwogICAgICAgICAgICAgICAgaGVpZ2h0OiAxMGVtOwogICAgICAgICAgICAgICAgdGV4dC1hbGlnbjogbGVmdDsKICAgICAgICAgICAgICAgIHZlcnRpY2FsLWFsaWduOiB0b3A7CiAgICAgICAgICAgICAgICB3aWR0aDogMTBlbTsKICAgICAgICAgICAgfQogICAgICAgIDwvc3R5bGU+CiAgICA8L2hlYWQ+CiAgICA8Ym9keT4KICAgICAgICA8cD5UZXN0IHBhc3NlcyBpZiB0aGUgIkZpbGxlciBUZXh0IiBpcyBpbiB0aGUgdG9wLWxlZnQgY29ybmVyIG9mIGVhY2ggb2YgdGhlIGJveGVzIGJlbG93LjwvcD4KICAgICAgICA8dGFibGU+CiAgICAgICAgICAgIDxjb2w+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD5GaWxsZXIgVGV4dDwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD5GaWxsZXIgVGV4dDwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD5GaWxsZXIgVGV4dDwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgPC90YWJsZT4KICAgIDwvYm9keT4KIDwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogPGhlYWQ+CiAgPHRpdGxlPkNTUyBUZXN0OiBDU1MgdGFibGUgbW9kZWw6IGVtcHR5LWNlbGxzOiBibG9jayB3aXRoIG1hcmdpbnM8L3RpdGxlPgogIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iSWFuIEhpY2tzb24iIGhyZWY9Im1haWx0bzppYW5AaGl4aWUuY2giPgogIDxsaW5rIHJlbD0iYWx0ZXJuYXRlIiBocmVmPSJodHRwOi8vd3d3LmhpeGllLmNoL3Rlc3RzL2FkaG9jL2Nzcy9ib3gvdGFibGUvZW1wdHktY2VsbHMvMDA4Lmh0bWwiIHR5cGU9InRleHQvaHRtbCI+CiAgPGxpbmsgcmVsPSJoZWxwIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCNlbXB0eS1jZWxscyI+CiAgPHN0eWxlIHR5cGU9InRleHQvY3NzIj4KICAgdGFibGUgeyBiYWNrZ3JvdW5kOiByZWQ7IGJvcmRlci1zcGFjaW5nOiAwOyB9CiAgIHRkIHsgZW1wdHktY2VsbHM6IGhpZGU7IGJhY2tncm91bmQ6IGdyZWVuOyBjb2xvcjogd2hpdGU7IHBhZGRpbmc6IDAgMmVtOyB9CiAgIGRpdiB7IG1hcmdpbjogMWVtIDA7IH0KICA8L3N0eWxlPgogPC9oZWFkPgogPGJvZHk+CiAgPHA+VGhlcmUgc2hvdWxkIGJlIGEgZ3JlZW4gYmxvY2sgYmVsb3cuPC9wPgogIDx0YWJsZT48dHI+PHRkPjxkaXY+PC9kaXY+PC90ZD48L3RyPjwvdGFibGU+CiA8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogPGhlYWQ+CiAgPHRpdGxlPkNTUyBUZXN0OiBDU1MgdGFibGUgbW9kZWw6IGVtcHR5LWNlbGxzOiBibG9jayB3aXRoIHBhZGRpbmc8L3RpdGxlPgogIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iSWFuIEhpY2tzb24iIGhyZWY9Im1haWx0bzppYW5AaGl4aWUuY2giPgogIDxsaW5rIHJlbD0iYWx0ZXJuYXRlIiBocmVmPSJodHRwOi8vd3d3LmhpeGllLmNoL3Rlc3RzL2FkaG9jL2Nzcy9ib3gvdGFibGUvZW1wdHktY2VsbHMvMDA5Lmh0bWwiIHR5cGU9InRleHQvaHRtbCI+CiAgPGxpbmsgcmVsPSJoZWxwIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCNlbXB0eS1jZWxscyI+CiAgPHN0eWxlIHR5cGU9InRleHQvY3NzIj4KICAgdGFibGUgeyBiYWNrZ3JvdW5kOiByZWQ7IGJvcmRlci1zcGFjaW5nOiAwOyB9CiAgIHRkIHsgZW1wdHktY2VsbHM6IGhpZGU7IGJhY2tncm91bmQ6IGdyZWVuOyBjb2xvcjogd2hpdGU7IHBhZGRpbmc6IDAgMmVtOyB9CiAgIGRpdiB7IHBhZGRpbmc6IDFlbSAwOyB9CiAgPC9zdHlsZT4KIDwvaGVhZD4KIDxib2R5PgogIDxwPlRoZXJlIHNob3VsZCBiZSBhIGdyZWVuIGJsb2NrIGJlbG93LjwvcD4KICA8dGFibGU+PHRyPjx0ZD48ZGl2PjwvZGl2PjwvdGQ+PC90cj48L3RhYmxlPgogPC9ib2R5Pgo8L2h0bWw+",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBJbmxpbmUtdGFibGU8L3RpdGxlPgogICAgICAgIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iTWljcm9zb2Z0IiBocmVmPSJodHRwOi8vd3d3Lm1pY3Jvc29mdC5jb20vIj4KICAgICAgICA8bGluayByZWw9ImhlbHAiIGhyZWY9Imh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL3RhYmxlcy5odG1sI3RhYmxlLWRpc3BsYXkiPgogICAgICAgIDxtZXRhIG5hbWU9ImZsYWdzIiBjb250ZW50PSIiPgogICAgICAgIDxtZXRhIG5hbWU9ImFzc2VydCIgY29udGVudD0iQW4gZWxlbWVudCB3aXRoICdkaXNwbGF5OiBpbmxpbmUtdGFibGUnIGlzIHJlbmRlcmVkIGFzIGlmIGl0IHdlcmUgYW4gaW5saW5lLiI+CiAgICAgICAgPHN0eWxlIHR5cGU9InRleHQvY3NzIj4KICAgICAgICAgICAgI3RhYmxlCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IG9yYW5nZTsKICAgICAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZS10YWJsZTsKICAgICAgICAgICAgfQogICAgICAgICAgICAjcm93CiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGRpc3BsYXk6IHRhYmxlLXJvdzsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2VsbAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBkaXNwbGF5OiB0YWJsZS1jZWxsOwogICAgICAgICAgICAgICAgaGVpZ2h0OiAxaW47CiAgICAgICAgICAgICAgICB3aWR0aDogMWluOwogICAgICAgICAgICB9CiAgICAgICAgPC9zdHlsZT4KICAgIDwvaGVhZD4KICAgIDxib2R5PgogICAgICAgIDxwPlRlc3QgcGFzc2VzIGlmIHRoZSAiRmlsbGVyIFRleHQiIGJlbG93IGlzIGFsbCBvbiB0aGUgc2FtZSBsaW5lLjwvcD4KICAgICAgICA8ZGl2PgogICAgICAgICAgICA8c3Bhbj5GaWxsZXIgVGV4dDwvc3Bhbj4KICAgICAgICAgICAgPGRpdiBpZD0idGFibGUiPgogICAgICAgICAgICAgICAgPGRpdiBpZD0icm93Ij4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGlkPSJjZWxsIj5GaWxsZXIgVGV4dDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgPC9ib2R5Pgo8L2h0bWw+",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPjxoZWFkPgo8dGl0bGU+Q1NTIFRlc3Q6IFJlZmVyZW5jZSBmb3IgaW5saW5lLXRhYmxlIHRlc3Q8L3RpdGxlPgo8bGluayByZWw9ImF1dGhvciIgdGl0bGU9IkwuIERhdmlkIEJhcm9uIiBocmVmPSJodHRwOi8vZGJhcm9uLm9yZy8iPgo8bGluayByZWw9ImF1dGhvciIgdGl0bGU9Ik1vemlsbGEgQ29ycG9yYXRpb24iIGhyZWY9Imh0dHA6Ly9tb3ppbGxhLmNvbS8iPgo8L2hlYWQ+Cjxib2R5Pgo8cD5hYmNkZTwvcD4KCgo8L2JvZHk+PC9odG1sPg==",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPjxoZWFkPgo8bGluayByZWw9InJlZmVyZW5jZSIgaHJlZj0iaW5saW5lLXRhYmxlLTAwMi1yZWYueGh0Ij4KPHRpdGxlPkNTUyBUZXN0OiBUZXN0IGZvciBpbmxpbmUtdGFibGU8L3RpdGxlPgo8bGluayByZWw9ImF1dGhvciIgdGl0bGU9IkwuIERhdmlkIEJhcm9uIiBocmVmPSJodHRwOi8vZGJhcm9uLm9yZy8iPgo8bGluayByZWw9ImF1dGhvciIgdGl0bGU9Ik1vemlsbGEgQ29ycG9yYXRpb24iIGhyZWY9Imh0dHA6Ly9tb3ppbGxhLmNvbS8iPgo8bGluayByZWw9ImhlbHAiIGhyZWY9Imh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL3RhYmxlcy5odG1sI3RhYmxlLWRpc3BsYXkiPgo8bWV0YSBuYW1lPSJhc3NlcnQiIGNvbnRlbnQ9Iml0IGlzIGEgcmVjdGFuZ3VsYXIgYmxvY2sgdGhhdCBwYXJ0aWNpcGF0ZXMgaW4gYW4gaW5saW5lIGZvcm1hdHRpbmcgY29udGV4dCkuIj4KPGxpbmsgcmVsPSJoZWxwIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS92aXN1ZGV0Lmh0bWwjbGVhZGluZyI+CjxtZXRhIG5hbWU9ImFzc2VydCIgY29udGVudD0iVGhlIGJhc2VsaW5lIG9mIGFuICdpbmxpbmUtdGFibGUnIGlzIHRoZSBiYXNlbGluZSBvZiB0aGUgZmlyc3Qgcm93IG9mIHRoZSB0YWJsZS4iPgo8bWV0YSBuYW1lPSJmbGFncyIgY29udGVudD0iIj4KPHN0eWxlIHR5cGU9InRleHQvY3NzIj4Kc3BhbiB7IGRpc3BsYXk6IGlubGluZS10YWJsZTsgfQpzcGFuID4gc3BhbiB7IGRpc3BsYXk6IGJsb2NrOyB2aXNpYmlsaXR5OiBoaWRkZW47IH0KPC9zdHlsZT4KPC9oZWFkPgo8Ym9keT4KPHA+YTxzcGFuPmJjZDxzcGFuPng8L3NwYW4+PC9zcGFuPmU8L3A+CgoKPC9ib2R5PjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPjxoZWFkPgo8bGluayByZWw9InJlZmVyZW5jZSIgaHJlZj0iaW5saW5lLXRhYmxlLTAwMi1yZWYueGh0Ij4KPHRpdGxlPkNTUyBUZXN0OiBUZXN0IGZvciBpbmxpbmUtdGFibGU8L3RpdGxlPgo8bGluayByZWw9ImF1dGhvciIgdGl0bGU9IkwuIERhdmlkIEJhcm9uIiBocmVmPSJodHRwOi8vZGJhcm9uLm9yZy8iPgo8bGluayByZWw9ImF1dGhvciIgdGl0bGU9Ik1vemlsbGEgQ29ycG9yYXRpb24iIGhyZWY9Imh0dHA6Ly9tb3ppbGxhLmNvbS8iPgo8bGluayByZWw9ImhlbHAiIGhyZWY9Imh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL3RhYmxlcy5odG1sI3RhYmxlLWRpc3BsYXkiPgo8bWV0YSBuYW1lPSJhc3NlcnQiIGNvbnRlbnQ9Iml0IGlzIGEgcmVjdGFuZ3VsYXIgYmxvY2sgdGhhdCBwYXJ0aWNpcGF0ZXMgaW4gYW4gaW5saW5lIGZvcm1hdHRpbmcgY29udGV4dCkuIj4KPGxpbmsgcmVsPSJoZWxwIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS92aXN1ZGV0Lmh0bWwjbGVhZGluZyI+CjxtZXRhIG5hbWU9ImFzc2VydCIgY29udGVudD0iVGhlIGJhc2VsaW5lIG9mIGFuICdpbmxpbmUtdGFibGUnIGlzIHRoZSBiYXNlbGluZSBvZiB0aGUgZmlyc3Qgcm93IG9mIHRoZSB0YWJsZS4iPgo8bWV0YSBuYW1lPSJmbGFncyIgY29udGVudD0iIj4KPHN0eWxlIHR5cGU9InRleHQvY3NzIj4Kc3BhbiA+IHNwYW4geyBkaXNwbGF5OiB0YWJsZS1jZWxsOyB9CnNwYW4gPiBzcGFuID4gc3BhbiB7IGRpc3BsYXk6IGJsb2NrOyB2aXNpYmlsaXR5OiBoaWRkZW47IH0KPC9zdHlsZT4KPC9oZWFkPgo8Ym9keT4KPHA+PHNwYW4+YTxzcGFuPmJjZDxzcGFuPng8L3NwYW4+PC9zcGFuPmU8L3NwYW4+PC9wPgoKCjwvYm9keT48L2h0bWw+",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPjxoZWFkPgo8dGl0bGU+Q1NTIFRlc3Q6IFJlZmVyZW5jZSBmb3IgaW5saW5lLXRhYmxlIHRlc3Q8L3RpdGxlPgo8bGluayByZWw9ImF1dGhvciIgdGl0bGU9IkwuIERhdmlkIEJhcm9uIiBocmVmPSJodHRwOi8vZGJhcm9uLm9yZy8iPgo8bGluayByZWw9ImF1dGhvciIgdGl0bGU9Ik1vemlsbGEgQ29ycG9yYXRpb24iIGhyZWY9Imh0dHA6Ly9tb3ppbGxhLmNvbS8iPgo8L2hlYWQ+Cjxib2R5Pgo8cD5hYmM8L3A+CgoKPC9ib2R5PjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPjxoZWFkPgo8bGluayByZWw9InJlZmVyZW5jZSIgaHJlZj0iaW5saW5lLXRhYmxlLTAwMy1yZWYueGh0Ij4KPHRpdGxlPkNTUyBUZXN0OiBUZXN0IGZvciBpbmxpbmUtdGFibGU8L3RpdGxlPgo8bGluayByZWw9ImF1dGhvciIgdGl0bGU9IkwuIERhdmlkIEJhcm9uIiBocmVmPSJodHRwOi8vZGJhcm9uLm9yZy8iPgo8bGluayByZWw9ImF1dGhvciIgdGl0bGU9Ik1vemlsbGEgQ29ycG9yYXRpb24iIGhyZWY9Imh0dHA6Ly9tb3ppbGxhLmNvbS8iPgo8bGluayByZWw9ImhlbHAiIGhyZWY9Imh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL3RhYmxlcy5odG1sI3RhYmxlLWRpc3BsYXkiPgo8bWV0YSBuYW1lPSJhc3NlcnQiIGNvbnRlbnQ9Iml0IGlzIGEgcmVjdGFuZ3VsYXIgYmxvY2sgdGhhdCBwYXJ0aWNpcGF0ZXMgaW4gYW4gaW5saW5lIGZvcm1hdHRpbmcgY29udGV4dCkuIj4KPGxpbmsgcmVsPSJoZWxwIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS92aXN1ZGV0Lmh0bWwjbGVhZGluZyI+CjxtZXRhIG5hbWU9ImFzc2VydCIgY29udGVudD0iVGhlIGJhc2VsaW5lIG9mIGFuICdpbmxpbmUtdGFibGUnIGlzIHRoZSBiYXNlbGluZSBvZiB0aGUgZmlyc3Qgcm93IG9mIHRoZSB0YWJsZS4iPgo8bWV0YSBuYW1lPSJmbGFncyIgY29udGVudD0iIj4KPHN0eWxlIHR5cGU9InRleHQvY3NzIj4Kc3BhbiB7IGRpc3BsYXk6IGlubGluZS10YWJsZTsgfQo8L3N0eWxlPgo8L2hlYWQ+Cjxib2R5Pgo8cD5hPHNwYW4+Yjwvc3Bhbj5jPC9wPgoKCjwvYm9keT48L2h0bWw+",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPjxoZWFkPgo8dGl0bGU+Q1NTIFRlc3Q6IFJlZmVyZW5jZSBmb3IgaW5saW5lLXRhYmxlIHRlc3Q8L3RpdGxlPgo8bGluayByZWw9ImF1dGhvciIgdGl0bGU9IkwuIERhdmlkIEJhcm9uIiBocmVmPSJodHRwOi8vZGJhcm9uLm9yZy8iPgo8bGluayByZWw9ImF1dGhvciIgdGl0bGU9Ik1vemlsbGEgQ29ycG9yYXRpb24iIGhyZWY9Imh0dHA6Ly9tb3ppbGxhLmNvbS8iPgo8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgpkaXYgeyBkaXNwbGF5OiB0YWJsZTsgd2lkdGg6IDEwZW07IGJhY2tncm91bmQ6IGdyZWVuOyBjb2xvcjogd2hpdGU7IH0KPC9zdHlsZT4KPC9oZWFkPgo8Ym9keT4KPGRpdj5UZXN0PGJyPlRlc3Q8L2Rpdj4KCgo8L2JvZHk+PC9odG1sPg==",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPjxoZWFkPgo8bGluayByZWw9InJlZmVyZW5jZSIgaHJlZj0iaW5saW5lLXRhYmxlLWhlaWdodC0wMDEtcmVmLnhodCI+Cjx0aXRsZT5DU1MgVGVzdDogVGVzdCBmb3IgJ2hlaWdodDogYXV0bycgb24gaW5saW5lLXRhYmxlPC90aXRsZT4KPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJMLiBEYXZpZCBCYXJvbiIgaHJlZj0iaHR0cDovL2RiYXJvbi5vcmcvIj4KPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJNb3ppbGxhIENvcnBvcmF0aW9uIiBocmVmPSJodHRwOi8vbW96aWxsYS5jb20vIj4KPGxpbmsgcmVsPSJoZWxwIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCN0YWJsZS1kaXNwbGF5Ij4KPG1ldGEgbmFtZT0iYXNzZXJ0IiBjb250ZW50PSJpdCBpcyBhIHJlY3Rhbmd1bGFyIGJsb2NrIHRoYXQgcGFydGljaXBhdGVzIGluIGFuIGlubGluZSBmb3JtYXR0aW5nIGNvbnRleHQpLiI+CjxtZXRhIG5hbWU9ImZsYWdzIiBjb250ZW50PSIiPgo8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgpkaXYgeyBkaXNwbGF5OiBpbmxpbmUtdGFibGU7IHdpZHRoOiAxMGVtOyBiYWNrZ3JvdW5kOiBncmVlbjsgY29sb3I6IHdoaXRlOyB9Cjwvc3R5bGU+CjwvaGVhZD4KPGJvZHk+CjxkaXY+VGVzdDxicj5UZXN0PC9kaXY+CgoKPC9ib2R5PjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPjxoZWFkPgo8dGl0bGU+Q1NTIFRlc3Q6IFJlZmVyZW5jZSBmb3IgaW5saW5lLXRhYmxlIHRlc3Q8L3RpdGxlPgo8bGluayByZWw9ImF1dGhvciIgdGl0bGU9IkwuIERhdmlkIEJhcm9uIiBocmVmPSJodHRwOi8vZGJhcm9uLm9yZy8iPgo8bGluayByZWw9ImF1dGhvciIgdGl0bGU9Ik1vemlsbGEgQ29ycG9yYXRpb24iIGhyZWY9Imh0dHA6Ly9tb3ppbGxhLmNvbS8iPgo8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgpkaXYgeyBkaXNwbGF5OiB0YWJsZTsgaGVpZ2h0OiA1ZW07IGJhY2tncm91bmQ6IGdyZWVuOyBjb2xvcjogd2hpdGU7IH0KPC9zdHlsZT4KPC9oZWFkPgo8Ym9keT4KPGRpdj50ZXN0PC9kaXY+CgoKPC9ib2R5PjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPjxoZWFkPgo8bGluayByZWw9InJlZmVyZW5jZSIgaHJlZj0iaW5saW5lLXRhYmxlLWhlaWdodC0wMDItcmVmLnhodCI+Cjx0aXRsZT5DU1MgVGVzdDogVGVzdCBmb3IgJ2hlaWdodDogJmx0O2xlbmd0aDsmZ3Q7JyBvbiBpbmxpbmUtdGFibGU8L3RpdGxlPgo8bGluayByZWw9ImF1dGhvciIgdGl0bGU9IkwuIERhdmlkIEJhcm9uIiBocmVmPSJodHRwOi8vZGJhcm9uLm9yZy8iPgo8bGluayByZWw9ImF1dGhvciIgdGl0bGU9Ik1vemlsbGEgQ29ycG9yYXRpb24iIGhyZWY9Imh0dHA6Ly9tb3ppbGxhLmNvbS8iPgo8bGluayByZWw9ImhlbHAiIGhyZWY9Imh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL3RhYmxlcy5odG1sI3RhYmxlLWRpc3BsYXkiPgo8bWV0YSBuYW1lPSJhc3NlcnQiIGNvbnRlbnQ9Iml0IGlzIGEgcmVjdGFuZ3VsYXIgYmxvY2sgdGhhdCBwYXJ0aWNpcGF0ZXMgaW4gYW4gaW5saW5lIGZvcm1hdHRpbmcgY29udGV4dCkuIj4KPG1ldGEgbmFtZT0iZmxhZ3MiIGNvbnRlbnQ9IiI+CjxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+CmRpdiB7IGRpc3BsYXk6IGlubGluZS10YWJsZTsgaGVpZ2h0OiA1ZW07IHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTsgYmFja2dyb3VuZDogZ3JlZW47IGNvbG9yOiB3aGl0ZTsgfQo8L3N0eWxlPgo8L2hlYWQ+Cjxib2R5Pgo8ZGl2PnRlc3Q8L2Rpdj4KCgo8L2JvZHk+PC9odG1sPg==",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPjxoZWFkPgo8dGl0bGU+Q1NTIFRlc3Q6IFJlZmVyZW5jZSBmb3IgaW5saW5lLXRhYmxlIHRlc3Q8L3RpdGxlPgo8bGluayByZWw9ImF1dGhvciIgdGl0bGU9IkwuIERhdmlkIEJhcm9uIiBocmVmPSJodHRwOi8vZGJhcm9uLm9yZy8iPgo8bGluayByZWw9ImF1dGhvciIgdGl0bGU9Ik1vemlsbGEgQ29ycG9yYXRpb24iIGhyZWY9Imh0dHA6Ly9tb3ppbGxhLmNvbS8iPgo8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgpzcGFuI3RhYmxlIHsgZGlzcGxheTogaW5saW5lLXRhYmxlOyB9CnNwYW4jcm93Z3JvdXAgeyBkaXNwbGF5OiB0YWJsZS1yb3ctZ3JvdXA7IH0Kc3BhbiNyb3cgeyBkaXNwbGF5OiB0YWJsZS1yb3c7IH0Kc3BhbiNjZWxsIHsgZGlzcGxheTogdGFibGUtY2VsbDsgfQpzcGFuI3RhYmxlLCBzcGFuI3Jvd2dyb3VwLCBzcGFuI3Jvdywgc3BhbiNjZWxsIHsKICBib3JkZXI6IDRweCBzb2xpZCB3aGl0ZTsKICBtYXJnaW46IDNweCAwOwogIGJvcmRlci13aWR0aDogNHB4IDA7CiAgcGFkZGluZzogOXB4IDA7CiAgYm9yZGVyLXNwYWNpbmc6IDAgNXB4Owp9CnNwYW4jYmxvY2sgeyBkaXNwbGF5OiBibG9jazsgdmlzaWJpbGl0eTogaGlkZGVuOyB9Cjwvc3R5bGU+CjwvaGVhZD4KPGJvZHk+Cjx0YWJsZSBib3JkZXI9IiI+PHRib2R5Pjx0cj48dGQ+CjxwPjxzcGFuIGlkPSJ0YWJsZSI+PHNwYW4gaWQ9InJvd2dyb3VwIj48c3BhbiBpZD0icm93Ij48c3BhbiBpZD0iY2VsbCI+YWJjZGU8c3BhbiBpZD0iYmxvY2siPng8L3NwYW4+PC9zcGFuPjwvc3Bhbj48L3NwYW4+PC9zcGFuPjwvcD4KPC90ZD48L3RyPjwvdGJvZHk+PC90YWJsZT4KCgo8L2JvZHk+PC9odG1sPg==",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPjxoZWFkPgo8bGluayByZWw9InJlZmVyZW5jZSIgaHJlZj0iaW5saW5lLXRhYmxlLXZhbGlnbi0wMDEtcmVmLnhodCI+Cjx0aXRsZT5DU1MgVGVzdDogVGVzdCBmb3IgdmVydGljYWwgYWxpZ25tZW50IG9uIGlubGluZS10YWJsZTwvdGl0bGU+CjxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iTC4gRGF2aWQgQmFyb24iIGhyZWY9Imh0dHA6Ly9kYmFyb24ub3JnLyI+CjxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iTW96aWxsYSBDb3Jwb3JhdGlvbiIgaHJlZj0iaHR0cDovL21vemlsbGEuY29tLyI+CjxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjdGFibGUtZGlzcGxheSI+CjxtZXRhIG5hbWU9ImFzc2VydCIgY29udGVudD0iaXQgaXMgYSByZWN0YW5ndWxhciBibG9jayB0aGF0IHBhcnRpY2lwYXRlcyBpbiBhbiBpbmxpbmUgZm9ybWF0dGluZyBjb250ZXh0KS4iPgo8bGluayByZWw9ImhlbHAiIGhyZWY9Imh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL3Zpc3VkZXQuaHRtbCNsZWFkaW5nIj4KPG1ldGEgbmFtZT0iYXNzZXJ0IiBjb250ZW50PSJUaGUgYmFzZWxpbmUgb2YgYW4gJ2lubGluZS10YWJsZScgaXMgdGhlIGJhc2VsaW5lIG9mIHRoZSBmaXJzdCByb3cgb2YgdGhlIHRhYmxlLiI+CjxtZXRhIG5hbWU9ImZsYWdzIiBjb250ZW50PSIiPgo8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgpzcGFuI3RhYmxlIHsgZGlzcGxheTogaW5saW5lLXRhYmxlOyB9CnNwYW4jcm93Z3JvdXAgeyBkaXNwbGF5OiB0YWJsZS1yb3ctZ3JvdXA7IH0Kc3BhbiNyb3cgeyBkaXNwbGF5OiB0YWJsZS1yb3c7IH0Kc3BhbiNjZWxsIHsgZGlzcGxheTogdGFibGUtY2VsbDsgfQpzcGFuI3RhYmxlLCBzcGFuI3Jvd2dyb3VwLCBzcGFuI3Jvdywgc3BhbiNjZWxsIHsKICBib3JkZXI6IDRweCBzb2xpZCB3aGl0ZTsKICBtYXJnaW46IDNweCAwOwogIGJvcmRlci13aWR0aDogNHB4IDA7CiAgcGFkZGluZzogOXB4IDA7CiAgYm9yZGVyLXNwYWNpbmc6IDAgNXB4Owp9CnNwYW4jYmxvY2sgeyBkaXNwbGF5OiBibG9jazsgdmlzaWJpbGl0eTogaGlkZGVuOyB9Cjwvc3R5bGU+CjwvaGVhZD4KPGJvZHk+Cjx0YWJsZSBib3JkZXI9IiI+PHRib2R5Pjx0cj48dGQ+CjxwPmE8c3BhbiBpZD0idGFibGUiPjxzcGFuIGlkPSJyb3dncm91cCI+PHNwYW4gaWQ9InJvdyI+PHNwYW4gaWQ9ImNlbGwiPmJjZDxzcGFuIGlkPSJibG9jayI+eDwvc3Bhbj48L3NwYW4+PC9zcGFuPjwvc3Bhbj48L3NwYW4+ZTwvcD4KPC90ZD48L3RyPjwvdGJvZHk+PC90YWJsZT4KCgo8L2JvZHk+PC9odG1sPg==",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPjxoZWFkPgo8dGl0bGU+Q1NTIFRlc3Q6IFJlZmVyZW5jZSBmb3IgaW5saW5lLXRhYmxlIHRlc3Q8L3RpdGxlPgo8bGluayByZWw9ImF1dGhvciIgdGl0bGU9IkwuIERhdmlkIEJhcm9uIiBocmVmPSJodHRwOi8vZGJhcm9uLm9yZy8iPgo8bGluayByZWw9ImF1dGhvciIgdGl0bGU9Ik1vemlsbGEgQ29ycG9yYXRpb24iIGhyZWY9Imh0dHA6Ly9tb3ppbGxhLmNvbS8iPgo8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgpib2R5ID4gZGl2IHsgd2lkdGg6IDEwZW07IH0KYm9keSA+IGRpdiA+IGRpdiB7IGRpc3BsYXk6IHRhYmxlOyBiYWNrZ3JvdW5kOiBncmVlbjsgY29sb3I6IHdoaXRlOyB9Cjwvc3R5bGU+CjwvaGVhZD4KPGJvZHk+CjxkaXY+eDxkaXY+VGhpcyBpcyBzb21lIHRleHQgdGhhdCBpcyB3aWRlciB0aGFuIDEwZW0gYnV0IGhhcyBubyB3b3JkcyB3aWRlciB0aGFuIDEwZW0uPC9kaXY+ejwvZGl2PgoKCjwvYm9keT48L2h0bWw+",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBSZW5kZXJpbmcgb2YgbWlzc2luZyB0YWJsZSBjZWxsczwvdGl0bGU+CiAgICAgICAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJNaWNyb3NvZnQiIGhyZWY9Imh0dHA6Ly93d3cubWljcm9zb2Z0LmNvbS8iPgogICAgICAgIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjdGFibGUtbGF5ZXJzIj4KICAgICAgICA8bWV0YSBuYW1lPSJmbGFncyIgY29udGVudD0iIj4KICAgICAgICA8bWV0YSBuYW1lPSJhc3NlcnQiIGNvbnRlbnQ9Ik1pc3NpbmcgdGFibGUgY2VsbHMgYXJlIHJlbmRlcmVkIGFzIGlmIHRoZWlyIGdyaWQgcG9zaXRpb24gd2VyZSBvY2N1cGllZCBieSBhbiBhbm9ueW1vdXMgdGFibGUtY2VsbCBib3guIj4KICAgICAgICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgogICAgICAgICAgICAjdGFibGUKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYmFja2dyb3VuZDogb3JhbmdlOwogICAgICAgICAgICAgICAgY29sb3I6IG9yYW5nZTsKICAgICAgICAgICAgICAgIGRpc3BsYXk6IHRhYmxlOwogICAgICAgICAgICB9CiAgICAgICAgICAgIC50cgogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBkaXNwbGF5OiB0YWJsZS1yb3c7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgLnRkCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IGJsYWNrOwogICAgICAgICAgICAgICAgYm9yZGVyOiAxcHggc29saWQgYmxhY2s7CiAgICAgICAgICAgICAgICBjb2xvcjogYmxhY2s7CiAgICAgICAgICAgICAgICBkaXNwbGF5OiB0YWJsZS1jZWxsOwogICAgICAgICAgICB9CiAgICAgICAgPC9zdHlsZT4KICAgIDwvaGVhZD4KICAgIDxib2R5PgogICAgICAgIDxwPlRlc3QgcGFzc2VzIGlmIHRoZXJlIGlzIGEgdHdvLWJ5LXR3byB0YWJsZSBiZWxvdyBhbmQgdGhlIHRvcC1sZWZ0IGFuZCBib3R0b20tcmlnaHQgY29ybmVycyBhcmUgb3JhbmdlLjwvcD4KICAgICAgICA8ZGl2IGlkPSJ0YWJsZSI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InRyIj4KICAgICAgICAgICAgICAgIFhYWFhYCiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZCI+WFhYWFg8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InRyIj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRkIj5YWFhYWDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgIDwvYm9keT4KPC9odG1sPg==",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBSb3cgYW5kIHRoZSAndmlzaWJpbGl0eScgcHJvcGVydHk8L3RpdGxlPgogICAgICAgIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iTWljcm9zb2Z0IiBocmVmPSJodHRwOi8vd3d3Lm1pY3Jvc29mdC5jb20vIj4KICAgICAgICA8bGluayByZWw9ImhlbHAiIGhyZWY9Imh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL3RhYmxlcy5odG1sI2R5bmFtaWMtZWZmZWN0cyI+CiAgICAgICAgPG1ldGEgbmFtZT0iZmxhZ3MiIGNvbnRlbnQ9IiI+CiAgICAgICAgPG1ldGEgbmFtZT0iYXNzZXJ0IiBjb250ZW50PSJBICd2aXNpYmlsaXR5JyB2YWx1ZSBvZiAnY29sbGFwc2UnIGFwcGxpZXMgdG8gdGFibGUgcm93cy4iPgogICAgICAgIDxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+CiAgICAgICAgICAgICN0YWJsZQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBkaXNwbGF5OiB0YWJsZTsKICAgICAgICAgICAgfQogICAgICAgICAgICAjcm93MQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiByZWQ7CiAgICAgICAgICAgICAgICB2aXNpYmlsaXR5OiBjb2xsYXBzZTsKICAgICAgICAgICAgfQogICAgICAgICAgICAjcm93MgogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiBncmVlbjsKICAgICAgICAgICAgfQogICAgICAgICAgICAjcm93MSwgI3JvdzIKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgZGlzcGxheTogdGFibGUtcm93OwogICAgICAgICAgICB9CiAgICAgICAgICAgIC5jZWxsCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGRpc3BsYXk6IHRhYmxlLWNlbGw7CiAgICAgICAgICAgICAgICBoZWlnaHQ6IDFpbjsKICAgICAgICAgICAgICAgIHdpZHRoOiAxaW47CiAgICAgICAgICAgIH0KICAgICAgICA8L3N0eWxlPgogICAgPC9oZWFkPgogICAgPGJvZHk+CiAgICAgICAgPHA+VGVzdCBwYXNzZXMgaWYgdGhlcmUgaXMgbm8gcmVkIHZpc2libGUgb24gdGhlIHBhZ2UuPC9wPgogICAgICAgIDxkaXYgaWQ9InRhYmxlIj4KICAgICAgICAgICAgPGRpdiBpZD0icm93MSI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjZWxsIj48L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgaWQ9InJvdzIiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2VsbCI+PC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgPC9ib2R5Pgo8L2h0bWw+",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBEaXNwbGF5LXRhYmxlPC90aXRsZT4KICAgICAgICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9Ik1pY3Jvc29mdCIgaHJlZj0iaHR0cDovL3d3dy5taWNyb3NvZnQuY29tLyI+CiAgICAgICAgPGxpbmsgcmVsPSJoZWxwIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCN0YWJsZS1kaXNwbGF5Ij4KICAgICAgICA8bWV0YSBuYW1lPSJmbGFncyIgY29udGVudD0iIj4KICAgICAgICA8bWV0YSBuYW1lPSJhc3NlcnQiIGNvbnRlbnQ9IkFuIGVsZW1lbnQgd2l0aCBkaXNwbGF5IHNldCB0byAndGFibGUnIHJlbmRlcnMgYXMgaWYgaXQgd2VyZSBhIHRhYmxlLiI+CiAgICAgICAgPHN0eWxlIHR5cGU9InRleHQvY3NzIj4KICAgICAgICAgICAgI3RhYmxlCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IGJsYWNrOwogICAgICAgICAgICAgICAgZGlzcGxheTogdGFibGU7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgLnRyCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGRpc3BsYXk6IHRhYmxlLXJvdzsKICAgICAgICAgICAgfQogICAgICAgICAgICAudGQKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgZGlzcGxheTogdGFibGUtY2VsbDsKICAgICAgICAgICAgICAgIGhlaWdodDogMmVtOwogICAgICAgICAgICAgICAgd2lkdGg6IDJlbTsKICAgICAgICAgICAgfQogICAgICAgIDwvc3R5bGU+CiAgICA8L2hlYWQ+CiAgICA8Ym9keT4KICAgICAgICA8cD5UZXN0IHBhc3NlcyBpZiB0aGVyZSBpcyBhIHNxdWFyZSBiZWxvdy48L3A+CiAgICAgICAgPGRpdiBpZD0idGFibGUiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ciI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZCI+PC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZCI+PC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ciI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZCI+PC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZCI+PC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgPC9ib2R5Pgo8L2h0bWw+",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBUaGUgYW5vbnltb3VzIGJsb2NrIGJveCBhcm91bmQgYSB0YWJsZSBhbmQgdGhlIHRhYmxlICdtYXJnaW4tcmlnaHQnIHByb3BlcnR5PC90aXRsZT4KICAgICAgICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9Ik1pY3Jvc29mdCIgaHJlZj0iaHR0cDovL3d3dy5taWNyb3NvZnQuY29tLyI+CiAgICAgICAgPGxpbmsgcmVsPSJoZWxwIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCNtb2RlbCI+CiAgICAgICAgPG1ldGEgbmFtZT0iZmxhZ3MiIGNvbnRlbnQ9IiI+CiAgICAgICAgPG1ldGEgbmFtZT0iYXNzZXJ0IiBjb250ZW50PSJUaGUgJ21hcmdpbi1yaWdodCcgcHJvcGVydHkgb2YgYSB0YWJsZSBpcyBhY3R1YWxseSBhcHBsaWVkIHRvIGl0cyBhbm9ueW1vdXMgYmxvY2sgYm94LiI+CiAgICAgICAgPHN0eWxlIHR5cGU9InRleHQvY3NzIj4KICAgICAgICAgICAgdGFibGUKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyLXNwYWNpbmc6IDA7CiAgICAgICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtdGFibGU7CiAgICAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDUwcHg7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgY2FwdGlvbiwgdGQKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYmFja2dyb3VuZDogYmx1ZTsKICAgICAgICAgICAgICAgIGNvbG9yOiBibHVlOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHRkCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIHBhZGRpbmc6IDA7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgZGl2CiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IG9yYW5nZTsKICAgICAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jazsKICAgICAgICAgICAgICAgIGhlaWdodDogNTBweDsKICAgICAgICAgICAgICAgIHdpZHRoOiA1MHB4OwogICAgICAgICAgICB9CiAgICAgICAgPC9zdHlsZT4KICAgIDwvaGVhZD4KICAgIDxib2R5PgogICAgICAgIDxwPlRlc3QgcGFzc2VzIGlmIHRoZXJlIGlzIGEgc2luZ2xlIGJsdWUgYm94IGFuZCBvcmFuZ2Ugc3F1YXJlIGJlbG93LCBhbmQgdGhlIHNwYWNlIGJldHdlZW4gdGhlbSBpcyB0aGUgc2FtZSB3aWR0aCBhcyB0aGUgb3JhbmdlIHNxdWFyZS48L3A+CiAgICAgICAgPHRhYmxlPgogICAgICAgICAgICA8Y2FwdGlvbj5YWFhYWFhYWFgwPC9jYXB0aW9uPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQ+WFhYWFhYWFhYMDwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgPC90YWJsZT4KICAgICAgICA8ZGl2PjwvZGl2PgogICAgPC9ib2R5Pgo8L2h0bWw+",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBUaGUgYW5vbnltb3VzIGJsb2NrIGJveCBhcm91bmQgYSB0YWJsZSBhbmQgdGhlIHRhYmxlICdtYXJnaW4nIHByb3BlcnR5PC90aXRsZT4KICAgICAgICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9Ik1pY3Jvc29mdCIgaHJlZj0iaHR0cDovL3d3dy5taWNyb3NvZnQuY29tLyI+CiAgICAgICAgPGxpbmsgcmVsPSJoZWxwIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCNtb2RlbCI+CiAgICAgICAgPG1ldGEgbmFtZT0iZmxhZ3MiIGNvbnRlbnQ9IiI+CiAgICAgICAgPG1ldGEgbmFtZT0iYXNzZXJ0IiBjb250ZW50PSJUaGUgJ21hcmdpbicgcHJvcGVydHkgb2YgYSB0YWJsZSBpcyBhY3R1YWxseSBhcHBsaWVkIHRvIGl0cyBhbm9ueW1vdXMgYmxvY2sgYm94LiI+CiAgICAgICAgPHN0eWxlIHR5cGU9InRleHQvY3NzIj4KICAgICAgICAgICAgZGl2CiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGNvbG9yOiBncmF5OwogICAgICAgICAgICB9CiAgICAgICAgICAgIHRhYmxlCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1zcGFjaW5nOiAwOwogICAgICAgICAgICAgICAgZGlzcGxheTogaW5saW5lLXRhYmxlOwogICAgICAgICAgICAgICAgbWFyZ2luOiAyMHB4OwogICAgICAgICAgICB9CiAgICAgICAgICAgIGNhcHRpb24KICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYmFja2dyb3VuZDogYmx1ZTsKICAgICAgICAgICAgICAgIGNvbG9yOiBibHVlOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHRkCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IGJsYWNrOwogICAgICAgICAgICAgICAgY29sb3I6IGJsYWNrOwogICAgICAgICAgICB9CiAgICAgICAgPC9zdHlsZT4KICAgIDwvaGVhZD4KICAgIDxib2R5PgogICAgICAgIDxwPlRlc3QgcGFzc2VzIGlmIHRoZSBibHVlIGJveCBpcyBkaXJlY3RseSBvbiB0b3Agb2YgdGhlIGJsYWNrIGJveCBhbmQgdGhlcmUgaXMgIkZpbGxlciBUZXh0IiBhYm92ZSBhbmQgYmVsb3cgdGhlIHN0YWNrZWQgYm94ZXMgYW5kIHRvIHRoZSByaWdodCBhbmQgbGVmdCBvZiB0aGUgYmxhY2sgYm94LjwvcD4KICAgICAgICA8ZGl2PgogICAgICAgICAgICBGaWxsZXIgVGV4dCBGaWxsZXIgVGV4dCBGaWxsZXIgVGV4dCBGaWxsZXIgVGV4dCBGaWxsZXIgVGV4dCBGaWxsZXIgVGV4dCBGaWxsZXIgVGV4dCBGaWxsZXIgVGV4dCBGaWxsZXIgVGV4dCBGaWxsZXIgVGV4dCBGaWxsZXIgVGV4dCBGaWxsZXIgVGV4dAogICAgICAgICAgICBGaWxsZXIgVGV4dCBGaWxsZXIgVGV4dCBGaWxsZXIgVGV4dCBGaWxsZXIgVGV4dCBGaWxsZXIgVGV4dCBGaWxsZXIgVGV4dCBGaWxsZXIgVGV4dCBGaWxsZXIgVGV4dCBGaWxsZXIgVGV4dCBGaWxsZXIgVGV4dCBGaWxsZXIgVGV4dCBGaWxsZXIgVGV4dAogICAgICAgICAgICBGaWxsZXIgVGV4dCBGaWxsZXIgVGV4dCBGaWxsZXIgVGV4dCBGaWxsZXIgVGV4dCBGaWxsZXIgVGV4dCBGaWxsZXIgVGV4dCBGaWxsZXIgVGV4dCBGaWxsZXIgVGV4dCBGaWxsZXIgVGV4dCBGaWxsZXIgVGV4dCBGaWxsZXIgVGV4dCBGaWxsZXIgVGV4dAogICAgICAgICAgICA8dGFibGU+CiAgICAgICAgICAgICAgICA8Y2FwdGlvbj5YWFhYWDwvY2FwdGlvbj4KICAgICAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgICAgICA8dGQ+WFhYWFg8L3RkPgogICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgPC90YWJsZT4KICAgICAgICAgICAgRmlsbGVyIFRleHQgRmlsbGVyIFRleHQgRmlsbGVyIFRleHQgRmlsbGVyIFRleHQgRmlsbGVyIFRleHQgRmlsbGVyIFRleHQgRmlsbGVyIFRleHQgRmlsbGVyIFRleHQgRmlsbGVyIFRleHQgRmlsbGVyIFRleHQgRmlsbGVyIFRleHQgRmlsbGVyIFRleHQKICAgICAgICAgICAgRmlsbGVyIFRleHQgRmlsbGVyIFRleHQgRmlsbGVyIFRleHQgRmlsbGVyIFRleHQgRmlsbGVyIFRleHQgRmlsbGVyIFRleHQgRmlsbGVyIFRleHQgRmlsbGVyIFRleHQgRmlsbGVyIFRleHQgRmlsbGVyIFRleHQgRmlsbGVyIFRleHQgRmlsbGVyIFRleHQKICAgICAgICAgICAgRmlsbGVyIFRleHQgRmlsbGVyIFRleHQgRmlsbGVyIFRleHQgRmlsbGVyIFRleHQgRmlsbGVyIFRleHQgRmlsbGVyIFRleHQgRmlsbGVyIFRleHQgRmlsbGVyIFRleHQgRmlsbGVyIFRleHQgRmlsbGVyIFRleHQgRmlsbGVyIFRleHQgRmlsbGVyIFRleHQKICAgICAgICA8L2Rpdj4KICAgIDwvYm9keT4KPC9odG1sPg==",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogPGhlYWQ+CiAgPHRpdGxlPkNTUyBUZXN0OiBDU1MgVGFibGVzOiBBbm9ueW1vdXMgQ2VsbCBDaGlsZHJlbjwvdGl0bGU+CiAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJJYW4gSGlja3NvbiIgaHJlZj0ibWFpbHRvOmlhbkBoaXhpZS5jaCI+CiAgPGxpbmsgcmVsPSJhbHRlcm5hdGUiIGhyZWY9Imh0dHA6Ly93d3cuaGl4aWUuY2gvdGVzdHMvYWRob2MvY3NzL2JveC90YWJsZS8wMDgueG1sIiB0eXBlPSJhcHBsaWNhdGlvbi94aHRtbCt4bWwiPgogIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjYW5vbnltb3VzLWJveGVzIj4KICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgoKICAgIC8qIGJhc2ljcyAqLwogICAgLnRhYmxlIHsgZGlzcGxheTogdGFibGU7IGhlaWdodDogNWVtOyB3aWR0aDogNWVtOyBiYWNrZ3JvdW5kOiBncmVlbjsgfQogICAgLnRhYmxlID4gKiB7IGRpc3BsYXk6IHRhYmxlLWNlbGw7IGNvbG9yOiB5ZWxsb3c7IGJhY2tncm91bmQ6IHJlZDsgYm9yZGVyOiBzb2xpZCByZWQ7IH0KICAgIC50YWJsZSA+ICo6YWZ0ZXIgeyBjb250ZW50OiAnRkFJTCEhISc7IGNvbG9yOiB5ZWxsb3c7IGJhY2tncm91bmQ6IHJlZDsgIGJvcmRlcjogc29saWQgcmVkOyB9CgogIDwvc3R5bGU+CiA8L2hlYWQ+CiA8Ym9keT4KICA8cD5UaGVyZSBzaG91bGQgYmUgYSBncmVlbiBibG9jayBiZWxvdy48L3A+CiAgPGRpdiBjbGFzcz0idGFibGUiPjwhLS0gZW1wdHkgLS0+PC9kaXY+CiA8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgo8aGVhZD4KCiAgPHRpdGxlPkNTUyBUZXN0OiBBdXRvLWltcG9ydGVkIGZyb20gR2Vja28gdGVzdCAxMjExNDItMWEuaHRtbDwvdGl0bGU+CiAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJCb3JpcyBaYmFyc2t5IiBocmVmPSJtYWlsdG86YnpiYXJza3lAbWl0LmVkdSI+CiAgPGxpbmsgcmVsPSJoZWxwIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCNhbm9ueW1vdXMtYm94ZXMiPgogIDxtZXRhIG5hbWU9ImZsYWdzIiBjb250ZW50PSJkb20iPgo8L2hlYWQ+Cjxib2R5Pgo8cD5UaGVyZSBzaG91bGQgYmUgbm8gcmVkIGJlbG93LCBleGNlcHQgZm9yIGFudGlhbGlhc2luZyBpc3N1ZXMuPC9wPgo8ZGl2IHN0eWxlPSJwb3NpdGlvbjogcmVsYXRpdmU7IGZvbnQtc2l6ZTogMmVtOyI+CjxkaXYgc3R5bGU9InBvc2l0aW9uOiByZWxhdGl2ZTsgei1pbmRleDogMTsgY29sb3I6IHJlZDsgcGFkZGluZzogMXB4OyI+CgogICAgPHNwYW4gc3R5bGU9ImRpc3BsYXk6dGFibGUiPgogICAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTogdGFibGUtcm93LWdyb3VwIj4KICAgICAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTogdGFibGUtcm93Ij4KICAgICAgICAgIDxzcGFuIHN0eWxlPSJkaXNwbGF5OiB0YWJsZS1jZWxsIj4KICAgICAgICAgICAgQ2VsbCAxCiAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICA8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+ZG9jdW1lbnQuYm9keS5vZmZzZXRXaWR0aDwvc2NyaXB0PgogICAgICAgICAgPHNwYW4gc3R5bGU9ImRpc3BsYXk6IHRhYmxlLWNlbGwiPgogICAgICAgICAgICBDZWxsIDIKICAgICAgICAgIDwvc3Bhbj4KICAgICAgICA8L3NwYW4+CiAgICAgIDwvc3Bhbj4KICAgIDwvc3Bhbj4KICA8L2Rpdj4KPGRpdiBzdHlsZT0icG9zaXRpb246IGFic29sdXRlOyB6LWluZGV4OiAyOyB0b3A6IDA7IGNvbG9yOiBncmVlbjsgcGFkZGluZzogMXB4OyI+CgogICAgPHRhYmxlIGNlbGxzcGFjaW5nPSIwIiBjZWxscGFkZGluZz0iMCIgc3R5bGU9ImJvcmRlcjogbm9uZTsgcGFkZGluZzogMDsgbWFyZ2luOiAwIj4KICAgICAgPHRyPgogICAgICAgIDx0ZD5DZWxsIDE8L3RkPgogICAgICAgIDx0ZD5DZWxsIDI8L3RkPgogICAgICA8L3RyPgogICAgPC90YWJsZT4KICA8L2Rpdj4KPC9kaXY+CjwvYm9keT4KPC9odG1sPg==",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgo8aGVhZD4KCiAgPHRpdGxlPkNTUyBUZXN0OiBBdXRvLWltcG9ydGVkIGZyb20gR2Vja28gdGVzdCAxMjExNDItMWEuaHRtbDwvdGl0bGU+CiAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJCb3JpcyBaYmFyc2t5IiBocmVmPSJtYWlsdG86YnpiYXJza3lAbWl0LmVkdSI+CiAgPGxpbmsgcmVsPSJoZWxwIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCNhbm9ueW1vdXMtYm94ZXMiPgogIDxtZXRhIG5hbWU9ImZsYWdzIiBjb250ZW50PSJkb20iPgo8L2hlYWQ+Cjxib2R5Pgo8cD5UaGVyZSBzaG91bGQgYmUgbm8gcmVkIGJlbG93LCBleGNlcHQgZm9yIGFudGlhbGlhc2luZyBpc3N1ZXMuPC9wPgo8ZGl2IHN0eWxlPSJwb3NpdGlvbjogcmVsYXRpdmU7IGZvbnQtc2l6ZTogMmVtOyI+CjxkaXYgc3R5bGU9InBvc2l0aW9uOiBhYnNvbHV0ZTsgei1pbmRleDogMjsgdG9wOiAwOyBjb2xvcjogZ3JlZW47IHBhZGRpbmc6IDFweDsiPgoKICAgIDxzcGFuIHN0eWxlPSJkaXNwbGF5OnRhYmxlIj4KICAgICAgPHNwYW4gc3R5bGU9ImRpc3BsYXk6IHRhYmxlLXJvdy1ncm91cCI+CiAgICAgICAgPHNwYW4gc3R5bGU9ImRpc3BsYXk6IHRhYmxlLXJvdyI+CiAgICAgICAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTogdGFibGUtY2VsbCI+CiAgICAgICAgICAgIENlbGwgMQogICAgICAgICAgPC9zcGFuPgogICAgICAgICAgPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPmRvY3VtZW50LmJvZHkub2Zmc2V0V2lkdGg8L3NjcmlwdD4KICAgICAgICAgIDxzcGFuIHN0eWxlPSJkaXNwbGF5OiB0YWJsZS1jZWxsIj4KICAgICAgICAgICAgQ2VsbCAyCiAgICAgICAgICA8L3NwYW4+CiAgICAgICAgPC9zcGFuPgogICAgICA8L3NwYW4+CiAgICA8L3NwYW4+CiAgPC9kaXY+CjxkaXYgc3R5bGU9InBvc2l0aW9uOiByZWxhdGl2ZTsgei1pbmRleDogMTsgY29sb3I6IHJlZDsgcGFkZGluZzogMXB4OyI+CgogICAgPHRhYmxlIGNlbGxzcGFjaW5nPSIwIiBjZWxscGFkZGluZz0iMCIgc3R5bGU9ImJvcmRlcjogbm9uZTsgcGFkZGluZzogMDsgbWFyZ2luOiAwIj4KICAgICAgPHRyPgogICAgICAgIDx0ZD5DZWxsIDE8L3RkPgogICAgICAgIDx0ZD5DZWxsIDI8L3RkPgogICAgICA8L3RyPgogICAgPC90YWJsZT4KICA8L2Rpdj4KPC9kaXY+CjwvYm9keT4KPC9odG1sPg==",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgo8aGVhZD4KCiAgPHRpdGxlPkNTUyBUZXN0OiBBdXRvLWltcG9ydGVkIGZyb20gR2Vja28gdGVzdCAxMjExNDItMWIuaHRtbDwvdGl0bGU+CiAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJCb3JpcyBaYmFyc2t5IiBocmVmPSJtYWlsdG86YnpiYXJza3lAbWl0LmVkdSI+CiAgPGxpbmsgcmVsPSJoZWxwIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCNhbm9ueW1vdXMtYm94ZXMiPgogIDxtZXRhIG5hbWU9ImZsYWdzIiBjb250ZW50PSJkb20iPgo8L2hlYWQ+Cjxib2R5Pgo8cD5UaGVyZSBzaG91bGQgYmUgbm8gcmVkIGJlbG93LCBleGNlcHQgZm9yIGFudGlhbGlhc2luZyBpc3N1ZXMuPC9wPgo8ZGl2IHN0eWxlPSJwb3NpdGlvbjogcmVsYXRpdmU7IGZvbnQtc2l6ZTogMmVtOyI+CjxkaXYgc3R5bGU9InBvc2l0aW9uOiByZWxhdGl2ZTsgei1pbmRleDogMTsgY29sb3I6IHJlZDsgcGFkZGluZzogMXB4OyI+CgogICAgPHNwYW4gc3R5bGU9ImRpc3BsYXk6dGFibGUiPgogICAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTogdGFibGUtY2VsbCI+CiAgICAgICAgQ2VsbCAxCiAgICAgIDwvc3Bhbj4KICAgICAgPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPmRvY3VtZW50LmJvZHkub2Zmc2V0V2lkdGg8L3NjcmlwdD4KICAgICAgPHNwYW4gc3R5bGU9ImRpc3BsYXk6IHRhYmxlLWNlbGwiPgogICAgICAgIENlbGwgMgogICAgICA8L3NwYW4+CiAgICA8L3NwYW4+CiAgPC9kaXY+CjxkaXYgc3R5bGU9InBvc2l0aW9uOiBhYnNvbHV0ZTsgei1pbmRleDogMjsgdG9wOiAwOyBjb2xvcjogZ3JlZW47IHBhZGRpbmc6IDFweDsiPgoKICAgIDx0YWJsZSBjZWxsc3BhY2luZz0iMCIgY2VsbHBhZGRpbmc9IjAiIHN0eWxlPSJib3JkZXI6IG5vbmU7IHBhZGRpbmc6IDA7IG1hcmdpbjogMCI+CiAgICAgIDx0cj4KICAgICAgICA8dGQ+Q2VsbCAxPC90ZD4KICAgICAgICA8dGQ+Q2VsbCAyPC90ZD4KICAgICAgPC90cj4KICAgIDwvdGFibGU+CiAgPC9kaXY+CjwvZGl2Pgo8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgo8aGVhZD4KCiAgPHRpdGxlPkNTUyBUZXN0OiBBdXRvLWltcG9ydGVkIGZyb20gR2Vja28gdGVzdCAxMjExNDItMWIuaHRtbDwvdGl0bGU+CiAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJCb3JpcyBaYmFyc2t5IiBocmVmPSJtYWlsdG86YnpiYXJza3lAbWl0LmVkdSI+CiAgPGxpbmsgcmVsPSJoZWxwIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCNhbm9ueW1vdXMtYm94ZXMiPgogIDxtZXRhIG5hbWU9ImZsYWdzIiBjb250ZW50PSJkb20iPgo8L2hlYWQ+Cjxib2R5Pgo8cD5UaGVyZSBzaG91bGQgYmUgbm8gcmVkIGJlbG93LCBleGNlcHQgZm9yIGFudGlhbGlhc2luZyBpc3N1ZXMuPC9wPgo8ZGl2IHN0eWxlPSJwb3NpdGlvbjogcmVsYXRpdmU7IGZvbnQtc2l6ZTogMmVtOyI+CjxkaXYgc3R5bGU9InBvc2l0aW9uOiBhYnNvbHV0ZTsgei1pbmRleDogMjsgdG9wOiAwOyBjb2xvcjogZ3JlZW47IHBhZGRpbmc6IDFweDsiPgoKICAgIDxzcGFuIHN0eWxlPSJkaXNwbGF5OnRhYmxlIj4KICAgICAgPHNwYW4gc3R5bGU9ImRpc3BsYXk6IHRhYmxlLWNlbGwiPgogICAgICAgIENlbGwgMQogICAgICA8L3NwYW4+CiAgICAgIDxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij5kb2N1bWVudC5ib2R5Lm9mZnNldFdpZHRoPC9zY3JpcHQ+CiAgICAgIDxzcGFuIHN0eWxlPSJkaXNwbGF5OiB0YWJsZS1jZWxsIj4KICAgICAgICBDZWxsIDIKICAgICAgPC9zcGFuPgogICAgPC9zcGFuPgogIDwvZGl2Pgo8ZGl2IHN0eWxlPSJwb3NpdGlvbjogcmVsYXRpdmU7IHotaW5kZXg6IDE7IGNvbG9yOiByZWQ7IHBhZGRpbmc6IDFweDsiPgoKICAgIDx0YWJsZSBjZWxsc3BhY2luZz0iMCIgY2VsbHBhZGRpbmc9IjAiIHN0eWxlPSJib3JkZXI6IG5vbmU7IHBhZGRpbmc6IDA7IG1hcmdpbjogMCI+CiAgICAgIDx0cj4KICAgICAgICA8dGQ+Q2VsbCAxPC90ZD4KICAgICAgICA8dGQ+Q2VsbCAyPC90ZD4KICAgICAgPC90cj4KICAgIDwvdGFibGU+CiAgPC9kaXY+CjwvZGl2Pgo8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgo8aGVhZD4KCiAgPHRpdGxlPkNTUyBUZXN0OiBBdXRvLWltcG9ydGVkIGZyb20gR2Vja28gdGVzdCAxMjExNDItMi5odG1sPC90aXRsZT4KICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9IkJvcmlzIFpiYXJza3kiIGhyZWY9Im1haWx0bzpiemJhcnNreUBtaXQuZWR1Ij4KICA8bGluayByZWw9ImhlbHAiIGhyZWY9Imh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL3RhYmxlcy5odG1sI2Fub255bW91cy1ib3hlcyI+CiAgPG1ldGEgbmFtZT0iZmxhZ3MiIGNvbnRlbnQ9ImRvbSI+CjwvaGVhZD4KPGJvZHk+CjxwPlRoZXJlIHNob3VsZCBiZSBubyByZWQgYmVsb3csIGV4Y2VwdCBmb3IgYW50aWFsaWFzaW5nIGlzc3Vlcy48L3A+CjxkaXYgc3R5bGU9InBvc2l0aW9uOiByZWxhdGl2ZTsgZm9udC1zaXplOiAyZW07Ij4KPGRpdiBzdHlsZT0icG9zaXRpb246IHJlbGF0aXZlOyB6LWluZGV4OiAxOyBjb2xvcjogcmVkOyBwYWRkaW5nOiAxcHg7Ij4KCiAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTp0YWJsZSI+CiAgICAgIENlbGwgMQogICAgICA8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+ZG9jdW1lbnQuYm9keS5vZmZzZXRXaWR0aDwvc2NyaXB0PgogICAgICBDZWxsIDIKICAgIDwvc3Bhbj4KICA8L2Rpdj4KPGRpdiBzdHlsZT0icG9zaXRpb246IGFic29sdXRlOyB6LWluZGV4OiAyOyB0b3A6IDA7IGNvbG9yOiBncmVlbjsgcGFkZGluZzogMXB4OyI+CgogICAgPHRhYmxlIGNlbGxzcGFjaW5nPSIwIiBjZWxscGFkZGluZz0iMCIgc3R5bGU9ImJvcmRlcjogbm9uZTsgcGFkZGluZzogMDsgbWFyZ2luOiAwIj4KICAgICAgPHRyPgogICAgICAgIDx0ZD5DZWxsIDEgQ2VsbCAyPC90ZD4KICAgICAgPC90cj4KICAgIDwvdGFibGU+CiAgPC9kaXY+CjwvZGl2Pgo8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgo8aGVhZD4KCiAgPHRpdGxlPkNTUyBUZXN0OiBBdXRvLWltcG9ydGVkIGZyb20gR2Vja28gdGVzdCAxMjExNDItMi5odG1sPC90aXRsZT4KICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9IkJvcmlzIFpiYXJza3kiIGhyZWY9Im1haWx0bzpiemJhcnNreUBtaXQuZWR1Ij4KICA8bGluayByZWw9ImhlbHAiIGhyZWY9Imh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL3RhYmxlcy5odG1sI2Fub255bW91cy1ib3hlcyI+CiAgPG1ldGEgbmFtZT0iZmxhZ3MiIGNvbnRlbnQ9ImRvbSI+CjwvaGVhZD4KPGJvZHk+CjxwPlRoZXJlIHNob3VsZCBiZSBubyByZWQgYmVsb3csIGV4Y2VwdCBmb3IgYW50aWFsaWFzaW5nIGlzc3Vlcy48L3A+CjxkaXYgc3R5bGU9InBvc2l0aW9uOiByZWxhdGl2ZTsgZm9udC1zaXplOiAyZW07Ij4KPGRpdiBzdHlsZT0icG9zaXRpb246IGFic29sdXRlOyB6LWluZGV4OiAyOyB0b3A6IDA7IGNvbG9yOiBncmVlbjsgcGFkZGluZzogMXB4OyI+CgogICAgPHNwYW4gc3R5bGU9ImRpc3BsYXk6dGFibGUiPgogICAgICBDZWxsIDEKICAgICAgPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPmRvY3VtZW50LmJvZHkub2Zmc2V0V2lkdGg8L3NjcmlwdD4KICAgICAgQ2VsbCAyCiAgICA8L3NwYW4+CiAgPC9kaXY+CjxkaXYgc3R5bGU9InBvc2l0aW9uOiByZWxhdGl2ZTsgei1pbmRleDogMTsgY29sb3I6IHJlZDsgcGFkZGluZzogMXB4OyI+CgogICAgPHRhYmxlIGNlbGxzcGFjaW5nPSIwIiBjZWxscGFkZGluZz0iMCIgc3R5bGU9ImJvcmRlcjogbm9uZTsgcGFkZGluZzogMDsgbWFyZ2luOiAwIj4KICAgICAgPHRyPgogICAgICAgIDx0ZD5DZWxsIDEgQ2VsbCAyPC90ZD4KICAgICAgPC90cj4KICAgIDwvdGFibGU+CiAgPC9kaXY+CjwvZGl2Pgo8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgo8aGVhZD4KICA8dGl0bGU+Q1NTIFRlc3Q6IEF1dG8taW1wb3J0ZWQgZnJvbSBHZWNrbyB0ZXN0IDE1Njg4OC0yLmh0bWw8L3RpdGxlPgogIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iQm9yaXMgWmJhcnNreSIgaHJlZj0ibWFpbHRvOmJ6YmFyc2t5QG1pdC5lZHUiPgogIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjYW5vbnltb3VzLWJveGVzIj4KICA8bWV0YSBuYW1lPSJmbGFncyIgY29udGVudD0iZG9tIj4KCiAgICA8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICAgIGZ1bmN0aW9uIHRvZ2dsZVJvdyhyb3dJZCkKICAgICAgewogICAgICAgIHZhciByID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQocm93SWQpOwogICAgICAgIGlmIChyLnN0eWxlLmRpc3BsYXkgPT0gIm5vbmUiKQogICAgICAgICAgci5zdHlsZS5kaXNwbGF5ID0gImlubGluZSI7CiAgICAgICAgZWxzZQogICAgICAgICAgci5zdHlsZS5kaXNwbGF5ID0gIm5vbmUiOwogICAgICB9CgogICAgICBmdW5jdGlvbiBkb1Rlc3QoKSB7CiAgICAgICAgdG9nZ2xlUm93KCdyb3c0Jyk7CiAgICAgICAgZG9jdW1lbnQuYm9keS5vZmZzZXRXaWR0aDsKICAgICAgICB0b2dnbGVSb3coJ3JvdzQnKTsKICAgICAgICBkb2N1bWVudC5ib2R5Lm9mZnNldFdpZHRoOwogICAgICAgIHRvZ2dsZVJvdygncm93NCcpOwogICAgICAgIGRvY3VtZW50LmJvZHkub2Zmc2V0V2lkdGg7CiAgICAgICAgdG9nZ2xlUm93KCdyb3c0Jyk7CiAgICAgICAgZG9jdW1lbnQuYm9keS5vZmZzZXRXaWR0aDsKICAgICAgICB0b2dnbGVSb3coJ3JvdzQnKTsKICAgICAgICBkb2N1bWVudC5ib2R5Lm9mZnNldFdpZHRoOwogICAgICAgIHRvZ2dsZVJvdygncm93NCcpOwogICAgICAgIGRvY3VtZW50LmJvZHkub2Zmc2V0V2lkdGg7CiAgICAgICAgdG9nZ2xlUm93KCdyb3c0Jyk7CiAgICAgICAgZG9jdW1lbnQuYm9keS5vZmZzZXRXaWR0aDsKICAgICAgICB0b2dnbGVSb3coJ3JvdzQnKTsKICAgICAgICBkb2N1bWVudC5ib2R5Lm9mZnNldFdpZHRoOwogICAgICAgIHRvZ2dsZVJvdygncm93NCcpOwogICAgICB9CiAgICA8L3NjcmlwdD4KICA8L2hlYWQ+Cjxib2R5IG9ubG9hZD0iZG9UZXN0KCkiPgo8cD5UaGVyZSBzaG91bGQgYmUgbm8gcmVkIGJlbG93LCBleGNlcHQgZm9yIGFudGlhbGlhc2luZyBpc3N1ZXMuPC9wPgo8ZGl2IHN0eWxlPSJwb3NpdGlvbjogcmVsYXRpdmU7IGZvbnQtc2l6ZTogMmVtOyI+CjxkaXYgc3R5bGU9InBvc2l0aW9uOiByZWxhdGl2ZTsgei1pbmRleDogMTsgY29sb3I6IHJlZDsgcGFkZGluZzogMXB4OyI+CgogICAgPHRhYmxlIGJvcmRlcj0iNSI+CiAgICAgIDx0cj4KICAgICAgICA8dGQ+Um93IDE8L3RkPgogICAgICA8L3RyPgogICAgICA8dHI+CiAgICAgICAgPHRkPlJvdyAyPC90ZD4KICAgICAgPC90cj4KICAgICAgPHRyPgogICAgICAgIDx0ZD5Sb3cgMzwvdGQ+CiAgICAgIDwvdHI+CiAgICAgIDx0ciBpZD0icm93NCIgc3R5bGU9ImRpc3BsYXk6IG5vbmUiPgogICAgICAgIDx0ZD5Sb3cgNDwvdGQ+CiAgICAgIDwvdHI+CiAgICA8L3RhYmxlPgogIDwvZGl2Pgo8ZGl2IHN0eWxlPSJwb3NpdGlvbjogYWJzb2x1dGU7IHotaW5kZXg6IDI7IHRvcDogMDsgY29sb3I6IGdyZWVuOyBwYWRkaW5nOiAxcHg7Ij4KCiAgICA8dGFibGUgYm9yZGVyPSI1Ij4KICAgICAgPHRyPgogICAgICAgIDx0ZD5Sb3cgMTwvdGQ+CiAgICAgIDwvdHI+CiAgICAgIDx0cj4KICAgICAgICA8dGQ+Um93IDI8L3RkPgogICAgICA8L3RyPgogICAgICA8dHI+CiAgICAgICAgPHRkPlJvdyAzPC90ZD4KICAgICAgPC90cj4KICAgICAgPHRyIHN0eWxlPSJkaXNwbGF5OiBpbmxpbmUiPgogICAgICAgIDx0ZD5Sb3cgNDwvdGQ+CiAgICAgIDwvdHI+CiAgICA8L3RhYmxlPgogIDwvZGl2Pgo8L2Rpdj4KPC9ib2R5Pgo8L2h0bWw+",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgo8aGVhZD4KICA8dGl0bGU+Q1NTIFRlc3Q6IEF1dG8taW1wb3J0ZWQgZnJvbSBHZWNrbyB0ZXN0IDE1Njg4OC0yLmh0bWw8L3RpdGxlPgogIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iQm9yaXMgWmJhcnNreSIgaHJlZj0ibWFpbHRvOmJ6YmFyc2t5QG1pdC5lZHUiPgogIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjYW5vbnltb3VzLWJveGVzIj4KICA8bWV0YSBuYW1lPSJmbGFncyIgY29udGVudD0iZG9tIj4KCiAgICA8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICAgIGZ1bmN0aW9uIHRvZ2dsZVJvdyhyb3dJZCkKICAgICAgewogICAgICAgIHZhciByID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQocm93SWQpOwogICAgICAgIGlmIChyLnN0eWxlLmRpc3BsYXkgPT0gIm5vbmUiKQogICAgICAgICAgci5zdHlsZS5kaXNwbGF5ID0gImlubGluZSI7CiAgICAgICAgZWxzZQogICAgICAgICAgci5zdHlsZS5kaXNwbGF5ID0gIm5vbmUiOwogICAgICB9CgogICAgICBmdW5jdGlvbiBkb1Rlc3QoKSB7CiAgICAgICAgdG9nZ2xlUm93KCdyb3c0Jyk7CiAgICAgICAgZG9jdW1lbnQuYm9keS5vZmZzZXRXaWR0aDsKICAgICAgICB0b2dnbGVSb3coJ3JvdzQnKTsKICAgICAgICBkb2N1bWVudC5ib2R5Lm9mZnNldFdpZHRoOwogICAgICAgIHRvZ2dsZVJvdygncm93NCcpOwogICAgICAgIGRvY3VtZW50LmJvZHkub2Zmc2V0V2lkdGg7CiAgICAgICAgdG9nZ2xlUm93KCdyb3c0Jyk7CiAgICAgICAgZG9jdW1lbnQuYm9keS5vZmZzZXRXaWR0aDsKICAgICAgICB0b2dnbGVSb3coJ3JvdzQnKTsKICAgICAgICBkb2N1bWVudC5ib2R5Lm9mZnNldFdpZHRoOwogICAgICAgIHRvZ2dsZVJvdygncm93NCcpOwogICAgICAgIGRvY3VtZW50LmJvZHkub2Zmc2V0V2lkdGg7CiAgICAgICAgdG9nZ2xlUm93KCdyb3c0Jyk7CiAgICAgICAgZG9jdW1lbnQuYm9keS5vZmZzZXRXaWR0aDsKICAgICAgICB0b2dnbGVSb3coJ3JvdzQnKTsKICAgICAgICBkb2N1bWVudC5ib2R5Lm9mZnNldFdpZHRoOwogICAgICAgIHRvZ2dsZVJvdygncm93NCcpOwogICAgICB9CiAgICA8L3NjcmlwdD4KICA8L2hlYWQ+Cjxib2R5IG9ubG9hZD0iZG9UZXN0KCkiPgo8cD5UaGVyZSBzaG91bGQgYmUgbm8gcmVkIGJlbG93LCBleGNlcHQgZm9yIGFudGlhbGlhc2luZyBpc3N1ZXMuPC9wPgo8ZGl2IHN0eWxlPSJwb3NpdGlvbjogcmVsYXRpdmU7IGZvbnQtc2l6ZTogMmVtOyI+CjxkaXYgc3R5bGU9InBvc2l0aW9uOiBhYnNvbHV0ZTsgei1pbmRleDogMjsgdG9wOiAwOyBjb2xvcjogZ3JlZW47IHBhZGRpbmc6IDFweDsiPgoKICAgIDx0YWJsZSBib3JkZXI9IjUiPgogICAgICA8dHI+CiAgICAgICAgPHRkPlJvdyAxPC90ZD4KICAgICAgPC90cj4KICAgICAgPHRyPgogICAgICAgIDx0ZD5Sb3cgMjwvdGQ+CiAgICAgIDwvdHI+CiAgICAgIDx0cj4KICAgICAgICA8dGQ+Um93IDM8L3RkPgogICAgICA8L3RyPgogICAgICA8dHIgaWQ9InJvdzQiIHN0eWxlPSJkaXNwbGF5OiBub25lIj4KICAgICAgICA8dGQ+Um93IDQ8L3RkPgogICAgICA8L3RyPgogICAgPC90YWJsZT4KICA8L2Rpdj4KPGRpdiBzdHlsZT0icG9zaXRpb246IHJlbGF0aXZlOyB6LWluZGV4OiAxOyBjb2xvcjogcmVkOyBwYWRkaW5nOiAxcHg7Ij4KCiAgICA8dGFibGUgYm9yZGVyPSI1Ij4KICAgICAgPHRyPgogICAgICAgIDx0ZD5Sb3cgMTwvdGQ+CiAgICAgIDwvdHI+CiAgICAgIDx0cj4KICAgICAgICA8dGQ+Um93IDI8L3RkPgogICAgICA8L3RyPgogICAgICA8dHI+CiAgICAgICAgPHRkPlJvdyAzPC90ZD4KICAgICAgPC90cj4KICAgICAgPHRyIHN0eWxlPSJkaXNwbGF5OiBpbmxpbmUiPgogICAgICAgIDx0ZD5Sb3cgNDwvdGQ+CiAgICAgIDwvdHI+CiAgICA8L3RhYmxlPgogIDwvZGl2Pgo8L2Rpdj4KPC9ib2R5Pgo8L2h0bWw+",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgo8aGVhZD4KICA8dGl0bGU+Q1NTIFRlc3Q6IEF1dG8taW1wb3J0ZWQgZnJvbSBHZWNrbyB0ZXN0IDIwMzkyMy0xLmh0bWw8L3RpdGxlPgogIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iQm9yaXMgWmJhcnNreSIgaHJlZj0ibWFpbHRvOmJ6YmFyc2t5QG1pdC5lZHUiPgogIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjYW5vbnltb3VzLWJveGVzIj4KICA8bWV0YSBuYW1lPSJmbGFncyIgY29udGVudD0iZG9tIj4KCiAgPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgZnVuY3Rpb24gZG9UZXN0KCkgewogICAgICB2YXIgYyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoInNwYW4iKTsKICAgICAgYy5zdHlsZS5kaXNwbGF5ID0gInRhYmxlLWNlbGwiOwogICAgICBjLmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKCJiYyIpKTsKICAgICAgdmFyIHQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgidCIpOwogICAgICB0LnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGMsIHQpOwogICAgICBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xhc3NOYW1lID0gIiI7CiAgICB9CiAgPC9zY3JpcHQ+CjwvaGVhZD4KPGJvZHkgb25sb2FkPSJkb1Rlc3QoKSI+CjxwPlRoZXJlIHNob3VsZCBiZSBubyByZWQgYmVsb3csIGV4Y2VwdCBmb3IgYW50aWFsaWFzaW5nIGlzc3Vlcy48L3A+CjxkaXYgc3R5bGU9InBvc2l0aW9uOiByZWxhdGl2ZTsgZm9udC1zaXplOiAyZW07Ij4KPGRpdiBzdHlsZT0icG9zaXRpb246IHJlbGF0aXZlOyB6LWluZGV4OiAxOyBjb2xvcjogcmVkOyBwYWRkaW5nOiAxcHg7Ij4KCiAgPHNwYW4gc3R5bGU9ImRpc3BsYXk6IGJsb2NrIj4KICAgIDxzcGFuIHN0eWxlPSJkaXNwbGF5OiB0YWJsZS1jZWxsIj5hPC9zcGFuPgogICAgPHNwYW4gc3R5bGU9ImRpc3BsYXk6IHRhYmxlLWNlbGw7IHdoaXRlLXNwYWNlOiBwcmUiPiA8L3NwYW4+CiAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTogdGFibGUtY2VsbDsgd2hpdGUtc3BhY2U6IHByZSIgaWQ9InQiPiA8L3NwYW4+CiAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTogdGFibGUtY2VsbCI+ZDwvc3Bhbj4KPC9zcGFuPjwvZGl2Pgo8ZGl2IHN0eWxlPSJwb3NpdGlvbjogYWJzb2x1dGU7IHotaW5kZXg6IDI7IHRvcDogMDsgY29sb3I6IGdyZWVuOyBwYWRkaW5nOiAxcHg7Ij4KCiAgICBhIGJjIGQKICA8L2Rpdj4KPC9kaXY+CjwvYm9keT4KPC9odG1sPg==",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgo8aGVhZD4KICA8dGl0bGU+Q1NTIFRlc3Q6IEF1dG8taW1wb3J0ZWQgZnJvbSBHZWNrbyB0ZXN0IDIwMzkyMy0xLmh0bWw8L3RpdGxlPgogIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iQm9yaXMgWmJhcnNreSIgaHJlZj0ibWFpbHRvOmJ6YmFyc2t5QG1pdC5lZHUiPgogIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjYW5vbnltb3VzLWJveGVzIj4KICA8bWV0YSBuYW1lPSJmbGFncyIgY29udGVudD0iZG9tIj4KCiAgPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgZnVuY3Rpb24gZG9UZXN0KCkgewogICAgICB2YXIgYyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoInNwYW4iKTsKICAgICAgYy5zdHlsZS5kaXNwbGF5ID0gInRhYmxlLWNlbGwiOwogICAgICBjLmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKCJiYyIpKTsKICAgICAgdmFyIHQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgidCIpOwogICAgICB0LnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGMsIHQpOwogICAgICBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xhc3NOYW1lID0gIiI7CiAgICB9CiAgPC9zY3JpcHQ+CjwvaGVhZD4KPGJvZHkgb25sb2FkPSJkb1Rlc3QoKSI+CjxwPlRoZXJlIHNob3VsZCBiZSBubyByZWQgYmVsb3csIGV4Y2VwdCBmb3IgYW50aWFsaWFzaW5nIGlzc3Vlcy48L3A+CjxkaXYgc3R5bGU9InBvc2l0aW9uOiByZWxhdGl2ZTsgZm9udC1zaXplOiAyZW07Ij4KPGRpdiBzdHlsZT0icG9zaXRpb246IGFic29sdXRlOyB6LWluZGV4OiAyOyB0b3A6IDA7IGNvbG9yOiBncmVlbjsgcGFkZGluZzogMXB4OyI+CgogIDxzcGFuIHN0eWxlPSJkaXNwbGF5OiBibG9jayI+CiAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTogdGFibGUtY2VsbCI+YTwvc3Bhbj4KICAgIDxzcGFuIHN0eWxlPSJkaXNwbGF5OiB0YWJsZS1jZWxsOyB3aGl0ZS1zcGFjZTogcHJlIj4gPC9zcGFuPgogICAgPHNwYW4gc3R5bGU9ImRpc3BsYXk6IHRhYmxlLWNlbGw7IHdoaXRlLXNwYWNlOiBwcmUiIGlkPSJ0Ij4gPC9zcGFuPgogICAgPHNwYW4gc3R5bGU9ImRpc3BsYXk6IHRhYmxlLWNlbGwiPmQ8L3NwYW4+Cjwvc3Bhbj48L2Rpdj4KPGRpdiBzdHlsZT0icG9zaXRpb246IHJlbGF0aXZlOyB6LWluZGV4OiAxOyBjb2xvcjogcmVkOyBwYWRkaW5nOiAxcHg7Ij4KCiAgICBhIGJjIGQKICA8L2Rpdj4KPC9kaXY+CjwvYm9keT4KPC9odG1sPg==",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgo8aGVhZD4KICA8dGl0bGU+Q1NTIFRlc3Q6IEF1dG8taW1wb3J0ZWQgZnJvbSBHZWNrbyB0ZXN0IDIwMzkyMy0yLmh0bWw8L3RpdGxlPgogIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iQm9yaXMgWmJhcnNreSIgaHJlZj0ibWFpbHRvOmJ6YmFyc2t5QG1pdC5lZHUiPgogIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjYW5vbnltb3VzLWJveGVzIj4KICA8bWV0YSBuYW1lPSJmbGFncyIgY29udGVudD0iZG9tIj4KCiAgPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgZnVuY3Rpb24gZG9UZXN0KCkgewogICAgICB2YXIgdCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJ0Iik7CiAgICAgIHQuc3R5bGUuZGlzcGxheSA9ICJub25lIjsKICAgICAgZG9jdW1lbnQuYm9keS5vZmZzZXRXaWR0aDsKICAgICAgdC5zdHlsZS5kaXNwbGF5ID0gInRhYmxlLWNlbGwiOwogICAgICBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xhc3NOYW1lID0gIiI7CiAgICB9CiAgPC9zY3JpcHQ+CjwvaGVhZD4KPGJvZHkgb25sb2FkPSJkb1Rlc3QoKSI+CjxwPlRoZXJlIHNob3VsZCBiZSBubyByZWQgYmVsb3csIGV4Y2VwdCBmb3IgYW50aWFsaWFzaW5nIGlzc3Vlcy48L3A+CjxkaXYgc3R5bGU9InBvc2l0aW9uOiByZWxhdGl2ZTsgZm9udC1zaXplOiAyZW07Ij4KPGRpdiBzdHlsZT0icG9zaXRpb246IHJlbGF0aXZlOyB6LWluZGV4OiAxOyBjb2xvcjogcmVkOyBwYWRkaW5nOiAxcHg7Ij4KCiAgPHNwYW4gc3R5bGU9ImRpc3BsYXk6IGJsb2NrIj4KICAgIDxzcGFuIHN0eWxlPSJkaXNwbGF5OiB0YWJsZS1jZWxsIj5hPC9zcGFuPgogICAgPHNwYW4gc3R5bGU9ImRpc3BsYXk6IHRhYmxlLWNlbGw7IHdoaXRlLXNwYWNlOiBwcmUiPiA8L3NwYW4+CiAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTogdGFibGUtY2VsbDsiIGlkPSJ0Ij5iYzwvc3Bhbj4KICAgIDxzcGFuIHN0eWxlPSJkaXNwbGF5OiB0YWJsZS1jZWxsOyB3aGl0ZS1zcGFjZTogcHJlIj4gPC9zcGFuPgogICAgPHNwYW4gc3R5bGU9ImRpc3BsYXk6IHRhYmxlLWNlbGwiPmQ8L3NwYW4+Cjwvc3Bhbj48L2Rpdj4KPGRpdiBzdHlsZT0icG9zaXRpb246IGFic29sdXRlOyB6LWluZGV4OiAyOyB0b3A6IDA7IGNvbG9yOiBncmVlbjsgcGFkZGluZzogMXB4OyI+CgogICAgYSBiYyBkCiAgPC9kaXY+CjwvZGl2Pgo8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgo8aGVhZD4KICA8dGl0bGU+Q1NTIFRlc3Q6IEF1dG8taW1wb3J0ZWQgZnJvbSBHZWNrbyB0ZXN0IDIwMzkyMy0yLmh0bWw8L3RpdGxlPgogIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iQm9yaXMgWmJhcnNreSIgaHJlZj0ibWFpbHRvOmJ6YmFyc2t5QG1pdC5lZHUiPgogIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjYW5vbnltb3VzLWJveGVzIj4KICA8bWV0YSBuYW1lPSJmbGFncyIgY29udGVudD0iZG9tIj4KCiAgPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgZnVuY3Rpb24gZG9UZXN0KCkgewogICAgICB2YXIgdCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJ0Iik7CiAgICAgIHQuc3R5bGUuZGlzcGxheSA9ICJub25lIjsKICAgICAgZG9jdW1lbnQuYm9keS5vZmZzZXRXaWR0aDsKICAgICAgdC5zdHlsZS5kaXNwbGF5ID0gInRhYmxlLWNlbGwiOwogICAgICBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xhc3NOYW1lID0gIiI7CiAgICB9CiAgPC9zY3JpcHQ+CjwvaGVhZD4KPGJvZHkgb25sb2FkPSJkb1Rlc3QoKSI+CjxwPlRoZXJlIHNob3VsZCBiZSBubyByZWQgYmVsb3csIGV4Y2VwdCBmb3IgYW50aWFsaWFzaW5nIGlzc3Vlcy48L3A+CjxkaXYgc3R5bGU9InBvc2l0aW9uOiByZWxhdGl2ZTsgZm9udC1zaXplOiAyZW07Ij4KPGRpdiBzdHlsZT0icG9zaXRpb246IGFic29sdXRlOyB6LWluZGV4OiAyOyB0b3A6IDA7IGNvbG9yOiBncmVlbjsgcGFkZGluZzogMXB4OyI+CgogIDxzcGFuIHN0eWxlPSJkaXNwbGF5OiBibG9jayI+CiAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTogdGFibGUtY2VsbCI+YTwvc3Bhbj4KICAgIDxzcGFuIHN0eWxlPSJkaXNwbGF5OiB0YWJsZS1jZWxsOyB3aGl0ZS1zcGFjZTogcHJlIj4gPC9zcGFuPgogICAgPHNwYW4gc3R5bGU9ImRpc3BsYXk6IHRhYmxlLWNlbGw7IiBpZD0idCI+YmM8L3NwYW4+CiAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTogdGFibGUtY2VsbDsgd2hpdGUtc3BhY2U6IHByZSI+IDwvc3Bhbj4KICAgIDxzcGFuIHN0eWxlPSJkaXNwbGF5OiB0YWJsZS1jZWxsIj5kPC9zcGFuPgo8L3NwYW4+PC9kaXY+CjxkaXYgc3R5bGU9InBvc2l0aW9uOiByZWxhdGl2ZTsgei1pbmRleDogMTsgY29sb3I6IHJlZDsgcGFkZGluZzogMXB4OyI+CgogICAgYSBiYyBkCiAgPC9kaXY+CjwvZGl2Pgo8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgo8aGVhZD4KICA8dGl0bGU+Q1NTIFRlc3Q6IEF1dG8taW1wb3J0ZWQgZnJvbSBHZWNrbyB0ZXN0IDIwODMwNS0xLmh0bWw8L3RpdGxlPgogIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iQm9yaXMgWmJhcnNreSIgaHJlZj0ibWFpbHRvOmJ6YmFyc2t5QG1pdC5lZHUiPgogIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjYW5vbnltb3VzLWJveGVzIj4KICA8bWV0YSBuYW1lPSJmbGFncyIgY29udGVudD0iZG9tIj4KCjxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+Ci5jZWxsIHtkaXNwbGF5OnRhYmxlLWNlbGx9Cjwvc3R5bGU+CjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KZnVuY3Rpb24gZG9UZXN0KCkgewpzcyA9IGRvY3VtZW50LnN0eWxlU2hlZXRzWzBdOwpzcy5jc3NSdWxlc1swXS5zdHlsZS5kaXNwbGF5PSJibG9jayI7Cn0KPC9zY3JpcHQ+CjwvaGVhZD4KPGJvZHkgb25sb2FkPSJkb1Rlc3QoKSI+CjxwPlRoZXJlIHNob3VsZCBiZSBubyByZWQgYmVsb3csIGV4Y2VwdCBmb3IgYW50aWFsaWFzaW5nIGlzc3Vlcy48L3A+CjxkaXYgc3R5bGU9InBvc2l0aW9uOiByZWxhdGl2ZTsgZm9udC1zaXplOiAyZW07Ij4KPGRpdiBzdHlsZT0icG9zaXRpb246IHJlbGF0aXZlOyB6LWluZGV4OiAxOyBjb2xvcjogcmVkOyBwYWRkaW5nOiAxcHg7Ij4KCjxkaXYgY2xhc3M9ImNlbGwiPmZvbzwvZGl2PjxkaXYgY2xhc3M9ImNlbGwiPmJhcjwvZGl2PjxkaXYgY2xhc3M9ImNlbGwiPmJhejwvZGl2Pgo8L2Rpdj4KPGRpdiBzdHlsZT0icG9zaXRpb246IGFic29sdXRlOyB6LWluZGV4OiAyOyB0b3A6IDA7IGNvbG9yOiBncmVlbjsgcGFkZGluZzogMXB4OyI+Cgo8ZGl2PmZvbzwvZGl2PjxkaXY+YmFyPC9kaXY+PGRpdj5iYXo8L2Rpdj4KPC9kaXY+CjwvZGl2Pgo8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgo8aGVhZD4KICA8dGl0bGU+Q1NTIFRlc3Q6IEF1dG8taW1wb3J0ZWQgZnJvbSBHZWNrbyB0ZXN0IDIwODMwNS0xLmh0bWw8L3RpdGxlPgogIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iQm9yaXMgWmJhcnNreSIgaHJlZj0ibWFpbHRvOmJ6YmFyc2t5QG1pdC5lZHUiPgogIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjYW5vbnltb3VzLWJveGVzIj4KICA8bWV0YSBuYW1lPSJmbGFncyIgY29udGVudD0iZG9tIj4KCjxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+Ci5jZWxsIHtkaXNwbGF5OnRhYmxlLWNlbGx9Cjwvc3R5bGU+CjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KZnVuY3Rpb24gZG9UZXN0KCkgewpzcyA9IGRvY3VtZW50LnN0eWxlU2hlZXRzWzBdOwpzcy5jc3NSdWxlc1swXS5zdHlsZS5kaXNwbGF5PSJibG9jayI7Cn0KPC9zY3JpcHQ+CjwvaGVhZD4KPGJvZHkgb25sb2FkPSJkb1Rlc3QoKSI+CjxwPlRoZXJlIHNob3VsZCBiZSBubyByZWQgYmVsb3csIGV4Y2VwdCBmb3IgYW50aWFsaWFzaW5nIGlzc3Vlcy48L3A+CjxkaXYgc3R5bGU9InBvc2l0aW9uOiByZWxhdGl2ZTsgZm9udC1zaXplOiAyZW07Ij4KPGRpdiBzdHlsZT0icG9zaXRpb246IGFic29sdXRlOyB6LWluZGV4OiAyOyB0b3A6IDA7IGNvbG9yOiBncmVlbjsgcGFkZGluZzogMXB4OyI+Cgo8ZGl2IGNsYXNzPSJjZWxsIj5mb288L2Rpdj48ZGl2IGNsYXNzPSJjZWxsIj5iYXI8L2Rpdj48ZGl2IGNsYXNzPSJjZWxsIj5iYXo8L2Rpdj4KPC9kaXY+CjxkaXYgc3R5bGU9InBvc2l0aW9uOiByZWxhdGl2ZTsgei1pbmRleDogMTsgY29sb3I6IHJlZDsgcGFkZGluZzogMXB4OyI+Cgo8ZGl2PmZvbzwvZGl2PjxkaXY+YmFyPC9kaXY+PGRpdj5iYXo8L2Rpdj4KPC9kaXY+CjwvZGl2Pgo8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgo8aGVhZD4KICA8dGl0bGU+Q1NTIFRlc3Q6IEF1dG8taW1wb3J0ZWQgZnJvbSBHZWNrbyB0ZXN0IDIwODMwNS0yLmh0bWw8L3RpdGxlPgogIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iQm9yaXMgWmJhcnNreSIgaHJlZj0ibWFpbHRvOmJ6YmFyc2t5QG1pdC5lZHUiPgogIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjYW5vbnltb3VzLWJveGVzIj4KICA8bWV0YSBuYW1lPSJmbGFncyIgY29udGVudD0iZG9tIj4KCiAgICA8c3R5bGUgaWQ9InMiIHR5cGU9InRleHQvY3NzIj4KICAgICAgc3BhbiB7IGRpc3BsYXk6IGJsb2NrICEgaW1wb3J0YW50IH0KICAgIDwvc3R5bGU+CiAgICA8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICAgIGZ1bmN0aW9uIGRvVGVzdCgpIHsKICAgICAgICB2YXIgcyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJzIik7CiAgICAgICAgcy5kaXNhYmxlZCA9IHRydWU7CiAgICAgICAgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmNsYXNzTmFtZSA9ICIiOwogICAgICB9CiAgICA8L3NjcmlwdD4KICA8L2hlYWQ+Cjxib2R5IG9ubG9hZD0iZG9UZXN0KCkiPgo8cD5UaGVyZSBzaG91bGQgYmUgbm8gcmVkIGJlbG93LCBleGNlcHQgZm9yIGFudGlhbGlhc2luZyBpc3N1ZXMuPC9wPgo8ZGl2IHN0eWxlPSJwb3NpdGlvbjogcmVsYXRpdmU7IGZvbnQtc2l6ZTogMmVtOyI+CjxkaXYgc3R5bGU9InBvc2l0aW9uOiBhYnNvbHV0ZTsgei1pbmRleDogMjsgdG9wOiAwOyBjb2xvcjogZ3JlZW47IHBhZGRpbmc6IDFweDsiPgoKICAgIDxzcGFuIHN0eWxlPSJkaXNwbGF5OiB0YWJsZS1jZWxsIj5hIGI8L3NwYW4+CiAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTogdGFibGUtY2VsbCI+YyBkPC9zcGFuPgogIDwvZGl2Pgo8ZGl2IHN0eWxlPSJwb3NpdGlvbjogcmVsYXRpdmU7IHotaW5kZXg6IDE7IGNvbG9yOiByZWQ7IHBhZGRpbmc6IDFweDsiPgoKICAgIGEgYmMgZAogIDwvZGl2Pgo8L2Rpdj4KPC9ib2R5Pgo8L2h0bWw+",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgo8aGVhZD4KICA8dGl0bGU+Q1NTIFRlc3Q6IEF1dG8taW1wb3J0ZWQgZnJvbSBHZWNrbyB0ZXN0IDIwODMwNS0zLmh0bWw8L3RpdGxlPgogIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iQm9yaXMgWmJhcnNreSIgaHJlZj0ibWFpbHRvOmJ6YmFyc2t5QG1pdC5lZHUiPgogIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjYW5vbnltb3VzLWJveGVzIj4KICA8bWV0YSBuYW1lPSJmbGFncyIgY29udGVudD0iIj4KCiAgICA8c3R5bGUgaWQ9InMiIHR5cGU9InRleHQvY3NzIj4KICAgICAgc3BhbiB7IGRpc3BsYXk6IHRhYmxlLWNlbGwgISBpbXBvcnRhbnQgfQogICAgPC9zdHlsZT4KICA8L2hlYWQ+Cjxib2R5Pgo8cD5UaGVyZSBzaG91bGQgYmUgbm8gcmVkIGJlbG93LCBleGNlcHQgZm9yIGFudGlhbGlhc2luZyBpc3N1ZXMuPC9wPgo8ZGl2IHN0eWxlPSJwb3NpdGlvbjogcmVsYXRpdmU7IGZvbnQtc2l6ZTogMmVtOyI+CjxkaXYgc3R5bGU9InBvc2l0aW9uOiBhYnNvbHV0ZTsgei1pbmRleDogMjsgdG9wOiAwOyBjb2xvcjogZ3JlZW47IHBhZGRpbmc6IDFweDsiPgoKICAgIDxzcGFuIHN0eWxlPSJkaXNwbGF5OiBibG9jayI+YSBiPC9zcGFuPgogICAgPHNwYW4gc3R5bGU9ImRpc3BsYXk6IGJsb2NrIj5jIGQ8L3NwYW4+CiAgPC9kaXY+CjxkaXYgc3R5bGU9InBvc2l0aW9uOiByZWxhdGl2ZTsgei1pbmRleDogMTsgY29sb3I6IHJlZDsgcGFkZGluZzogMXB4OyI+CgogICAgYSBiYyBkCiAgPC9kaXY+CjwvZGl2Pgo8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgo8aGVhZD4KICA8dGl0bGU+Q1NTIFRlc3Q6IEF1dG8taW1wb3J0ZWQgZnJvbSBHZWNrbyB0ZXN0IDIwODMwNS00Lmh0bWw8L3RpdGxlPgogIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iQm9yaXMgWmJhcnNreSIgaHJlZj0ibWFpbHRvOmJ6YmFyc2t5QG1pdC5lZHUiPgogIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjYW5vbnltb3VzLWJveGVzIj4KICA8bWV0YSBuYW1lPSJmbGFncyIgY29udGVudD0iZG9tIj4KCiAgICA8c3R5bGUgaWQ9InMiIHR5cGU9InRleHQvY3NzIj4KICAgICAgc3BhbiB7IGRpc3BsYXk6IHRhYmxlLWNlbGwgISBpbXBvcnRhbnQgfQogICAgPC9zdHlsZT4KICAgIDxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgICAgZnVuY3Rpb24gZG9UZXN0KCkgewogICAgICAgIHZhciBzID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoInMiKTsKICAgICAgICBzLmRpc2FibGVkID0gdHJ1ZTsKICAgICAgICBkb2N1bWVudC5ib2R5Lm9mZnNldFdpZHRoOwogICAgICAgIHMuZGlzYWJsZWQgPSBmYWxzZTsKICAgICAgICBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xhc3NOYW1lID0gIiI7CiAgICAgIH0KICAgIDwvc2NyaXB0PgogIDwvaGVhZD4KPGJvZHkgb25sb2FkPSJkb1Rlc3QoKSI+CjxwPlRoZXJlIHNob3VsZCBiZSBubyByZWQgYmVsb3csIGV4Y2VwdCBmb3IgYW50aWFsaWFzaW5nIGlzc3Vlcy48L3A+CjxkaXYgc3R5bGU9InBvc2l0aW9uOiByZWxhdGl2ZTsgZm9udC1zaXplOiAyZW07Ij4KPGRpdiBzdHlsZT0icG9zaXRpb246IHJlbGF0aXZlOyB6LWluZGV4OiAxOyBjb2xvcjogcmVkOyBwYWRkaW5nOiAxcHg7Ij4KCiAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTogYmxvY2siPmEgYjwvc3Bhbj4KICAgIDxzcGFuIHN0eWxlPSJkaXNwbGF5OiBibG9jayI+YyBkPC9zcGFuPgogIDwvZGl2Pgo8ZGl2IHN0eWxlPSJwb3NpdGlvbjogYWJzb2x1dGU7IHotaW5kZXg6IDI7IHRvcDogMDsgY29sb3I6IGdyZWVuOyBwYWRkaW5nOiAxcHg7Ij4KCiAgICBhIGJjIGQKICA8L2Rpdj4KPC9kaXY+CjwvYm9keT4KPC9odG1sPg==",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgo8aGVhZD4KICA8dGl0bGU+Q1NTIFRlc3Q6IEF1dG8taW1wb3J0ZWQgZnJvbSBHZWNrbyB0ZXN0IDI3Nzk5NS0xLmh0bWw8L3RpdGxlPgogIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iQm9yaXMgWmJhcnNreSIgaHJlZj0ibWFpbHRvOmJ6YmFyc2t5QG1pdC5lZHUiPgogIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjYW5vbnltb3VzLWJveGVzIj4KICA8bWV0YSBuYW1lPSJmbGFncyIgY29udGVudD0iZG9tIj4KCiAgPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgZnVuY3Rpb24gZG9Nb3JlKGRhdGEpIHsKICAgICAgd2hpbGUoZGF0YS5oYXNDaGlsZE5vZGVzKCkpIAogICAgICAgIGRhdGEucmVtb3ZlQ2hpbGQoZGF0YS5maXJzdENoaWxkKTsKICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCAxMDsgaSsrKSB7CglhcHBlbmQoZGF0YSk7CiAgICAgIH0KICAgIH0KCiAgICBmdW5jdGlvbiBhcHBlbmQoZGF0YSkgewogICAgICB2YXIgcm93ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2Iik7CiAgICAgIHJvdy5zZXRBdHRyaWJ1dGUoImNsYXNzIiwgInJvdyIpOwoKICAgICAgdmFyIGNlbGwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJzcGFuIik7CiAgICAgIGNlbGwuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoIk1vcmUgRGF0YSIpKTsKICAgICAgY2VsbC5zZXRBdHRyaWJ1dGUoImNsYXNzIiwgImNlbGwiKTsKICAgICAgcm93LmFwcGVuZENoaWxkKGNlbGwpOwogICAgICBkYXRhLmFwcGVuZENoaWxkKHJvdyk7CiAgICB9CgogICAgZnVuY3Rpb24gZG9UZXN0KCkgewogICAgICBmb3IgKHZhciBpID0gMDsgaSA8IDEwOyArK2kpIHsKICAgICAgICBkb2N1bWVudC5ib2R5Lm9mZnNldFdpZHRoOwogICAgICAgIGRvTW9yZShkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZGF0YScpKTsKICAgICAgfQogICAgICBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xhc3NOYW1lID0gJyc7CiAgICB9CiAgPC9zY3JpcHQ+CiAgPHN0eWxlIHR5cGU9InRleHQvY3NzIj4KICAgIC50YWJsZSB7CiAgICAgIGRpc3BsYXk6IHRhYmxlOwogICAgfQogICAgLnJvdyB7CiAgICAgIGRpc3BsYXk6IHRhYmxlLXJvdzsKCiAgICB9CiAgICAuY2VsbCB7CiAgICAgIGRpc3BsYXk6IHRhYmxlLWNlbGw7CiAgICB9CiAgPC9zdHlsZT4KPC9oZWFkPgo8Ym9keSBvbmxvYWQ9ImRvVGVzdCgpIj4KPHA+VGhlcmUgc2hvdWxkIGJlIG5vIHJlZCBiZWxvdywgZXhjZXB0IGZvciBhbnRpYWxpYXNpbmcgaXNzdWVzLjwvcD4KPGRpdiBzdHlsZT0icG9zaXRpb246IHJlbGF0aXZlOyBmb250LXNpemU6IDJlbTsiPgo8ZGl2IHN0eWxlPSJwb3NpdGlvbjogcmVsYXRpdmU7IHotaW5kZXg6IDE7IGNvbG9yOiByZWQ7IHBhZGRpbmc6IDFweDsiPgoKPHRhYmxlPgogIDx0cj4KICAgIDx0ZD4KICAgICAgPGRpdiBpZD0iZGF0YSIgY2xhc3M9InRhYmxlIj4KICAgICAgPC9kaXY+CiAgICA8L3RkPgogIDwvdHI+CjwvdGFibGU+CjwvZGl2Pgo8ZGl2IHN0eWxlPSJwb3NpdGlvbjogYWJzb2x1dGU7IHotaW5kZXg6IDI7IHRvcDogMDsgY29sb3I6IGdyZWVuOyBwYWRkaW5nOiAxcHg7Ij4KCjx0YWJsZT4KICA8dHI+CiAgICA8dGQ+CiAgICAgIDxkaXYgc3R5bGU9ImRpc3BsYXk6IHRhYmxlIj4KICAgICAgICA8ZGl2IHN0eWxlPSJkaXNwbGF5OiB0YWJsZS1yb3ctZ3JvdXAiPgogICAgICAgICAgPGRpdiBzdHlsZT0iZGlzcGxheTogdGFibGUtcm93Ij4KICAgICAgICAgICAgPGRpdiBzdHlsZT0iZGlzcGxheTogdGFibGUtY2VsbCI+CiAgICAgICAgICAgICAgTW9yZSBEYXRhCiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8ZGl2IHN0eWxlPSJkaXNwbGF5OiB0YWJsZS1yb3ciPgogICAgICAgICAgICA8ZGl2IHN0eWxlPSJkaXNwbGF5OiB0YWJsZS1jZWxsIj4KICAgICAgICAgICAgICBNb3JlIERhdGEKICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDxkaXYgc3R5bGU9ImRpc3BsYXk6IHRhYmxlLXJvdyI+CiAgICAgICAgICAgIDxkaXYgc3R5bGU9ImRpc3BsYXk6IHRhYmxlLWNlbGwiPgogICAgICAgICAgICAgIE1vcmUgRGF0YQogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPGRpdiBzdHlsZT0iZGlzcGxheTogdGFibGUtcm93Ij4KICAgICAgICAgICAgPGRpdiBzdHlsZT0iZGlzcGxheTogdGFibGUtY2VsbCI+CiAgICAgICAgICAgICAgTW9yZSBEYXRhCiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8ZGl2IHN0eWxlPSJkaXNwbGF5OiB0YWJsZS1yb3ciPgogICAgICAgICAgICA8ZGl2IHN0eWxlPSJkaXNwbGF5OiB0YWJsZS1jZWxsIj4KICAgICAgICAgICAgICBNb3JlIERhdGEKICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDxkaXYgc3R5bGU9ImRpc3BsYXk6IHRhYmxlLXJvdyI+CiAgICAgICAgICAgIDxkaXYgc3R5bGU9ImRpc3BsYXk6IHRhYmxlLWNlbGwiPgogICAgICAgICAgICAgIE1vcmUgRGF0YQogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPGRpdiBzdHlsZT0iZGlzcGxheTogdGFibGUtcm93Ij4KICAgICAgICAgICAgPGRpdiBzdHlsZT0iZGlzcGxheTogdGFibGUtY2VsbCI+CiAgICAgICAgICAgICAgTW9yZSBEYXRhCiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8ZGl2IHN0eWxlPSJkaXNwbGF5OiB0YWJsZS1yb3ciPgogICAgICAgICAgICA8ZGl2IHN0eWxlPSJkaXNwbGF5OiB0YWJsZS1jZWxsIj4KICAgICAgICAgICAgICBNb3JlIERhdGEKICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDxkaXYgc3R5bGU9ImRpc3BsYXk6IHRhYmxlLXJvdyI+CiAgICAgICAgICAgIDxkaXYgc3R5bGU9ImRpc3BsYXk6IHRhYmxlLWNlbGwiPgogICAgICAgICAgICAgIE1vcmUgRGF0YQogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPGRpdiBzdHlsZT0iZGlzcGxheTogdGFibGUtcm93Ij4KICAgICAgICAgICAgPGRpdiBzdHlsZT0iZGlzcGxheTogdGFibGUtY2VsbCI+CiAgICAgICAgICAgICAgTW9yZSBEYXRhCiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgIDwvZGl2PgogICAgPC90ZD4KICA8L3RyPgo8L3RhYmxlPgo8L2Rpdj4KPC9kaXY+CjwvYm9keT4KPC9odG1sPg==",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgo8aGVhZD4KICA8dGl0bGU+Q1NTIFRlc3Q6IEF1dG8taW1wb3J0ZWQgZnJvbSBHZWNrbyB0ZXN0IDI3Nzk5NS0xLmh0bWw8L3RpdGxlPgogIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iQm9yaXMgWmJhcnNreSIgaHJlZj0ibWFpbHRvOmJ6YmFyc2t5QG1pdC5lZHUiPgogIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjYW5vbnltb3VzLWJveGVzIj4KICA8bWV0YSBuYW1lPSJmbGFncyIgY29udGVudD0iZG9tIj4KCiAgPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgZnVuY3Rpb24gZG9Nb3JlKGRhdGEpIHsKICAgICAgd2hpbGUoZGF0YS5oYXNDaGlsZE5vZGVzKCkpIAogICAgICAgIGRhdGEucmVtb3ZlQ2hpbGQoZGF0YS5maXJzdENoaWxkKTsKICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCAxMDsgaSsrKSB7CglhcHBlbmQoZGF0YSk7CiAgICAgIH0KICAgIH0KCiAgICBmdW5jdGlvbiBhcHBlbmQoZGF0YSkgewogICAgICB2YXIgcm93ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2Iik7CiAgICAgIHJvdy5zZXRBdHRyaWJ1dGUoImNsYXNzIiwgInJvdyIpOwoKICAgICAgdmFyIGNlbGwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJzcGFuIik7CiAgICAgIGNlbGwuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoIk1vcmUgRGF0YSIpKTsKICAgICAgY2VsbC5zZXRBdHRyaWJ1dGUoImNsYXNzIiwgImNlbGwiKTsKICAgICAgcm93LmFwcGVuZENoaWxkKGNlbGwpOwogICAgICBkYXRhLmFwcGVuZENoaWxkKHJvdyk7CiAgICB9CgogICAgZnVuY3Rpb24gZG9UZXN0KCkgewogICAgICBmb3IgKHZhciBpID0gMDsgaSA8IDEwOyArK2kpIHsKICAgICAgICBkb2N1bWVudC5ib2R5Lm9mZnNldFdpZHRoOwogICAgICAgIGRvTW9yZShkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZGF0YScpKTsKICAgICAgfQogICAgICBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xhc3NOYW1lID0gJyc7CiAgICB9CiAgPC9zY3JpcHQ+CiAgPHN0eWxlIHR5cGU9InRleHQvY3NzIj4KICAgIC50YWJsZSB7CiAgICAgIGRpc3BsYXk6IHRhYmxlOwogICAgfQogICAgLnJvdyB7CiAgICAgIGRpc3BsYXk6IHRhYmxlLXJvdzsKCiAgICB9CiAgICAuY2VsbCB7CiAgICAgIGRpc3BsYXk6IHRhYmxlLWNlbGw7CiAgICB9CiAgPC9zdHlsZT4KPC9oZWFkPgo8Ym9keSBvbmxvYWQ9ImRvVGVzdCgpIj4KPHA+VGhlcmUgc2hvdWxkIGJlIG5vIHJlZCBiZWxvdywgZXhjZXB0IGZvciBhbnRpYWxpYXNpbmcgaXNzdWVzLjwvcD4KPGRpdiBzdHlsZT0icG9zaXRpb246IHJlbGF0aXZlOyBmb250LXNpemU6IDJlbTsiPgo8ZGl2IHN0eWxlPSJwb3NpdGlvbjogYWJzb2x1dGU7IHotaW5kZXg6IDI7IHRvcDogMDsgY29sb3I6IGdyZWVuOyBwYWRkaW5nOiAxcHg7Ij4KCjx0YWJsZT4KICA8dHI+CiAgICA8dGQ+CiAgICAgIDxkaXYgaWQ9ImRhdGEiIGNsYXNzPSJ0YWJsZSI+CiAgICAgIDwvZGl2PgogICAgPC90ZD4KICA8L3RyPgo8L3RhYmxlPgo8L2Rpdj4KPGRpdiBzdHlsZT0icG9zaXRpb246IHJlbGF0aXZlOyB6LWluZGV4OiAxOyBjb2xvcjogcmVkOyBwYWRkaW5nOiAxcHg7Ij4KCjx0YWJsZT4KICA8dHI+CiAgICA8dGQ+CiAgICAgIDxkaXYgc3R5bGU9ImRpc3BsYXk6IHRhYmxlIj4KICAgICAgICA8ZGl2IHN0eWxlPSJkaXNwbGF5OiB0YWJsZS1yb3ctZ3JvdXAiPgogICAgICAgICAgPGRpdiBzdHlsZT0iZGlzcGxheTogdGFibGUtcm93Ij4KICAgICAgICAgICAgPGRpdiBzdHlsZT0iZGlzcGxheTogdGFibGUtY2VsbCI+CiAgICAgICAgICAgICAgTW9yZSBEYXRhCiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8ZGl2IHN0eWxlPSJkaXNwbGF5OiB0YWJsZS1yb3ciPgogICAgICAgICAgICA8ZGl2IHN0eWxlPSJkaXNwbGF5OiB0YWJsZS1jZWxsIj4KICAgICAgICAgICAgICBNb3JlIERhdGEKICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDxkaXYgc3R5bGU9ImRpc3BsYXk6IHRhYmxlLXJvdyI+CiAgICAgICAgICAgIDxkaXYgc3R5bGU9ImRpc3BsYXk6IHRhYmxlLWNlbGwiPgogICAgICAgICAgICAgIE1vcmUgRGF0YQogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPGRpdiBzdHlsZT0iZGlzcGxheTogdGFibGUtcm93Ij4KICAgICAgICAgICAgPGRpdiBzdHlsZT0iZGlzcGxheTogdGFibGUtY2VsbCI+CiAgICAgICAgICAgICAgTW9yZSBEYXRhCiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8ZGl2IHN0eWxlPSJkaXNwbGF5OiB0YWJsZS1yb3ciPgogICAgICAgICAgICA8ZGl2IHN0eWxlPSJkaXNwbGF5OiB0YWJsZS1jZWxsIj4KICAgICAgICAgICAgICBNb3JlIERhdGEKICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDxkaXYgc3R5bGU9ImRpc3BsYXk6IHRhYmxlLXJvdyI+CiAgICAgICAgICAgIDxkaXYgc3R5bGU9ImRpc3BsYXk6IHRhYmxlLWNlbGwiPgogICAgICAgICAgICAgIE1vcmUgRGF0YQogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPGRpdiBzdHlsZT0iZGlzcGxheTogdGFibGUtcm93Ij4KICAgICAgICAgICAgPGRpdiBzdHlsZT0iZGlzcGxheTogdGFibGUtY2VsbCI+CiAgICAgICAgICAgICAgTW9yZSBEYXRhCiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8ZGl2IHN0eWxlPSJkaXNwbGF5OiB0YWJsZS1yb3ciPgogICAgICAgICAgICA8ZGl2IHN0eWxlPSJkaXNwbGF5OiB0YWJsZS1jZWxsIj4KICAgICAgICAgICAgICBNb3JlIERhdGEKICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDxkaXYgc3R5bGU9ImRpc3BsYXk6IHRhYmxlLXJvdyI+CiAgICAgICAgICAgIDxkaXYgc3R5bGU9ImRpc3BsYXk6IHRhYmxlLWNlbGwiPgogICAgICAgICAgICAgIE1vcmUgRGF0YQogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPGRpdiBzdHlsZT0iZGlzcGxheTogdGFibGUtcm93Ij4KICAgICAgICAgICAgPGRpdiBzdHlsZT0iZGlzcGxheTogdGFibGUtY2VsbCI+CiAgICAgICAgICAgICAgTW9yZSBEYXRhCiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgIDwvZGl2PgogICAgPC90ZD4KICA8L3RyPgo8L3RhYmxlPgo8L2Rpdj4KPC9kaXY+CjwvYm9keT4KPC9odG1sPg==",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgo8aGVhZD4KICA8dGl0bGU+Q1NTIFRlc3Q6IEF1dG8taW1wb3J0ZWQgZnJvbSBHZWNrbyB0ZXN0IDI5MzU3Ni0xLmh0bWw8L3RpdGxlPgogIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iQm9yaXMgWmJhcnNreSIgaHJlZj0ibWFpbHRvOmJ6YmFyc2t5QG1pdC5lZHUiPgogIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjYW5vbnltb3VzLWJveGVzIj4KICA8bWV0YSBuYW1lPSJmbGFncyIgY29udGVudD0iZG9tIj4KCiAgICA8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICAgIGZ1bmN0aW9uIGRvVGVzdCgpIHsKICAgICAgICB2YXIgdCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJ0Iik7CiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCAxMDsgKytpKSB7CiAgICAgICAgICBkb2N1bWVudC5ib2R5Lm9mZnNldFdpZHRoOwogICAgICAgICAgdC5zdHlsZS5kaXNwbGF5ID0gInRhYmxlLWNhcHRpb24iOwogICAgICAgICAgZG9jdW1lbnQuYm9keS5vZmZzZXRXaWR0aDsKICAgICAgICAgIHQuc3R5bGUuZGlzcGxheSA9ICIiOwogICAgICAgIH0KICAgICAgICBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xhc3NOYW1lID0gJyc7CiAgICAgIH0KICAgIDwvc2NyaXB0PgogIDwvaGVhZD4KPGJvZHkgb25sb2FkPSJkb1Rlc3QoKSI+CjxwPlRoZXJlIHNob3VsZCBiZSBubyByZWQgYmVsb3csIGV4Y2VwdCBmb3IgYW50aWFsaWFzaW5nIGlzc3Vlcy48L3A+CjxkaXYgc3R5bGU9InBvc2l0aW9uOiByZWxhdGl2ZTsgZm9udC1zaXplOiAyZW07Ij4KPGRpdiBzdHlsZT0icG9zaXRpb246IGFic29sdXRlOyB6LWluZGV4OiAyOyB0b3A6IDA7IGNvbG9yOiBncmVlbjsgcGFkZGluZzogMXB4OyI+CgogICAgPHRhYmxlIGJvcmRlcj0iNSI+PHRib2R5Pjx0cj48dGQgaWQ9InQiPlNvbWUgdGV4dDwvdGQ+PC90cj48L3Rib2R5PjwvdGFibGU+CiAgPC9kaXY+CjxkaXYgc3R5bGU9InBvc2l0aW9uOiByZWxhdGl2ZTsgei1pbmRleDogMTsgY29sb3I6IHJlZDsgcGFkZGluZzogMXB4OyI+CgogICAgPHRhYmxlIGJvcmRlcj0iNSI+PHRib2R5Pjx0cj48dGQ+U29tZSB0ZXh0PC90ZD48L3RyPjwvdGJvZHk+PC90YWJsZT4KICA8L2Rpdj4KPC9kaXY+CjwvYm9keT4KPC9odG1sPg==",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgo8aGVhZD4KICA8dGl0bGU+Q1NTIFRlc3Q6IEF1dG8taW1wb3J0ZWQgZnJvbSBHZWNrbyB0ZXN0IDMwMjExMy0xLmh0bWw8L3RpdGxlPgogIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iQm9yaXMgWmJhcnNreSIgaHJlZj0ibWFpbHRvOmJ6YmFyc2t5QG1pdC5lZHUiPgogIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjYW5vbnltb3VzLWJveGVzIj4KICA8bWV0YSBuYW1lPSJmbGFncyIgY29udGVudD0iZG9tIj4KCjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICBmdW5jdGlvbiBkb1Rlc3QoKSB7CiAgICB2YXIgdCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJ0Iik7CiAgICBmb3IgKHZhciBpID0gMDsgaSA8IDU7ICsraSkgewogICAgICBkb2N1bWVudC5ib2R5Lm9mZnNldFdpZHRoOwogICAgICB0LnN0eWxlLmRpc3BsYXkgPSAibm9uZSI7CiAgICAgIGRvY3VtZW50LmJvZHkub2Zmc2V0V2lkdGg7CiAgICAgIHQuc3R5bGUuZGlzcGxheSA9ICJibG9jayI7CiAgICB9CiAgICBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xhc3NOYW1lID0gIiI7CiAgfQo8L3NjcmlwdD4KPC9oZWFkPgo8Ym9keSBvbmxvYWQ9ImRvVGVzdCgpIj4KPHA+VGhlcmUgc2hvdWxkIGJlIG5vIHJlZCBiZWxvdywgZXhjZXB0IGZvciBhbnRpYWxpYXNpbmcgaXNzdWVzLjwvcD4KPGRpdiBzdHlsZT0icG9zaXRpb246IHJlbGF0aXZlOyBmb250LXNpemU6IDJlbTsiPgo8ZGl2IHN0eWxlPSJwb3NpdGlvbjogYWJzb2x1dGU7IHotaW5kZXg6IDI7IHRvcDogMDsgY29sb3I6IGdyZWVuOyBwYWRkaW5nOiAxcHg7Ij4KCiAgPHNwYW4gc3R5bGU9ImRpc3BsYXk6IHRhYmxlIj4KICAgIDxzcGFuIHN0eWxlPSJkaXNwbGF5OiB0YWJsZS1yb3ciPgogICAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTogdGFibGUtY2VsbCI+CiAgICAgICAgQ2VsbAogICAgICA8L3NwYW4+CiAgICAgIDxzcGFuIHN0eWxlPSJkaXNwbGF5OiB0YWJsZS1jZWxsIj4KICAgICAgICBDZWxsCiAgICAgIDwvc3Bhbj4KICAgICAgPHNwYW4gc3R5bGU9ImRpc3BsYXk6IHRhYmxlLWNlbGwiPgogICAgICAgIENlbGwKICAgICAgPC9zcGFuPgogICAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTogdGFibGUtY2VsbCI+CiAgICAgICAgQ2VsbAogICAgICA8L3NwYW4+CiAgICAgIDxzcGFuIHN0eWxlPSJkaXNwbGF5OiB0YWJsZS1jZWxsIj4KICAgICAgICBDZWxsCiAgICAgIDwvc3Bhbj4KICAgIDwvc3Bhbj4KICAgIDxzcGFuIHN0eWxlPSJkaXNwbGF5OiB0YWJsZS1yb3ciPgogICAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTogYmxvY2siIGlkPSJ0Ij5XaGljaCBjb2x1bW4/PC9zcGFuPgogICAgPC9zcGFuPgogIDwvc3Bhbj4KPC9kaXY+CjxkaXYgc3R5bGU9InBvc2l0aW9uOiByZWxhdGl2ZTsgei1pbmRleDogMTsgY29sb3I6IHJlZDsgcGFkZGluZzogMXB4OyI+CgogIDxzcGFuIHN0eWxlPSJkaXNwbGF5OiB0YWJsZSI+CiAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTogdGFibGUtcm93Ij4KICAgICAgPHNwYW4gc3R5bGU9ImRpc3BsYXk6IHRhYmxlLWNlbGwiPgogICAgICAgIENlbGwKICAgICAgPC9zcGFuPgogICAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTogdGFibGUtY2VsbCI+CiAgICAgICAgQ2VsbAogICAgICA8L3NwYW4+CiAgICAgIDxzcGFuIHN0eWxlPSJkaXNwbGF5OiB0YWJsZS1jZWxsIj4KICAgICAgICBDZWxsCiAgICAgIDwvc3Bhbj4KICAgICAgPHNwYW4gc3R5bGU9ImRpc3BsYXk6IHRhYmxlLWNlbGwiPgogICAgICAgIENlbGwKICAgICAgPC9zcGFuPgogICAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTogdGFibGUtY2VsbCI+CiAgICAgICAgQ2VsbAogICAgICA8L3NwYW4+CiAgICA8L3NwYW4+CiAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTogdGFibGUtcm93Ij4KICAgICAgPHNwYW4gc3R5bGU9ImRpc3BsYXk6IGJsb2NrIiBpZD0idCI+V2hpY2ggY29sdW1uPzwvc3Bhbj4KICAgIDwvc3Bhbj4KICA8L3NwYW4+CjwvZGl2Pgo8L2Rpdj4KPC9ib2R5Pgo8L2h0bWw+",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgo8aGVhZD4KICA8dGl0bGU+Q1NTIFRlc3Q6IEF1dG8taW1wb3J0ZWQgZnJvbSBHZWNrbyB0ZXN0IDMxNTE0Ni0xLnhodG1sPC90aXRsZT4KICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9IkJvcmlzIFpiYXJza3kiIGhyZWY9Im1haWx0bzpiemJhcnNreUBtaXQuZWR1Ij4KICA8bGluayByZWw9ImhlbHAiIGhyZWY9Imh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL3RhYmxlcy5odG1sI2Fub255bW91cy1ib3hlcyI+CiAgPG1ldGEgbmFtZT0iZmxhZ3MiIGNvbnRlbnQ9ImRvbSI+CgoJPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgoJZnVuY3Rpb24gRGVsZXRlUm93KGNvbnRhaW5lcikgewoJCWlmIChjb250YWluZXIuZmlyc3RDaGlsZCkKCQkJY29udGFpbmVyLnJlbW92ZUNoaWxkKGNvbnRhaW5lci5maXJzdENoaWxkKTsKCX0KCglmdW5jdGlvbiBBZGRSb3coY29udGFpbmVyKSB7CgkJdmFyIHRyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgidHIiKTsKCQl2YXIgdGQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJ0ZCIpOwoJCXRkLmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKCJBIGNlbGwiKSk7CgkJdHIuYXBwZW5kQ2hpbGQodGQpOwoJCWNvbnRhaW5lci5hcHBlbmRDaGlsZCh0cik7Cgl9CgogICAgICAgIGZ1bmN0aW9uIGRvVGVzdCgpIHsKICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgMTA7ICsraSkgewogICAgICAgICAgICBkb2N1bWVudC5ib2R5Lm9mZnNldFdpZHRoOwogICAgICAgICAgICBBZGRSb3coZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3RhYmxlJykpOwogICAgICAgICAgICBkb2N1bWVudC5ib2R5Lm9mZnNldFdpZHRoOwogICAgICAgICAgICBEZWxldGVSb3coZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3RhYmxlJykpOwogICAgICAgICAgfQogICAgICAgICAgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmNsYXNzTmFtZSA9ICcnOwogICAgICAgIH0KCTwvc2NyaXB0Pgo8L2hlYWQ+Cjxib2R5IG9ubG9hZD0iZG9UZXN0KCkiPgo8cD5UaGVyZSBzaG91bGQgYmUgbm8gcmVkIGJlbG93LCBleGNlcHQgZm9yIGFudGlhbGlhc2luZyBpc3N1ZXMuPC9wPgo8ZGl2IHN0eWxlPSJwb3NpdGlvbjogcmVsYXRpdmU7IGZvbnQtc2l6ZTogMmVtOyI+CjxkaXYgc3R5bGU9InBvc2l0aW9uOiByZWxhdGl2ZTsgei1pbmRleDogMTsgY29sb3I6IHJlZDsgcGFkZGluZzogMXB4OyI+Cgo8dGFibGUgaWQ9InRhYmxlIiBib3JkZXI9IjUiPjx0cj48dGQ+QSBjZWxsPC90ZD48L3RyPjwvdGFibGU+CjwvZGl2Pgo8ZGl2IHN0eWxlPSJwb3NpdGlvbjogYWJzb2x1dGU7IHotaW5kZXg6IDI7IHRvcDogMDsgY29sb3I6IGdyZWVuOyBwYWRkaW5nOiAxcHg7Ij4KCjx0YWJsZSBpZD0idGFibGUiIGJvcmRlcj0iNSI+PHRyPjx0ZD5BIGNlbGw8L3RkPjwvdHI+PC90YWJsZT4KPC9kaXY+CjwvZGl2Pgo8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgo8aGVhZD4KCiAgPHRpdGxlPkNTUyBUZXN0OiBBdXRvLWltcG9ydGVkIGZyb20gR2Vja28gdGVzdCAzMjU1NDMtMWEuaHRtbDwvdGl0bGU+CiAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJCb3JpcyBaYmFyc2t5IiBocmVmPSJtYWlsdG86YnpiYXJza3lAbWl0LmVkdSI+CiAgPGxpbmsgcmVsPSJoZWxwIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCNhbm9ueW1vdXMtYm94ZXMiPgogIDxtZXRhIG5hbWU9ImZsYWdzIiBjb250ZW50PSIiPgo8L2hlYWQ+Cjxib2R5IG9ubG9hZD0iZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3QnKS5zdHlsZS5kaXNwbGF5ID0gJ2Jsb2NrJyI+CjxwPlRoZXJlIHNob3VsZCBiZSBubyByZWQgYmVsb3csIGV4Y2VwdCBmb3IgYW50aWFsaWFzaW5nIGlzc3Vlcy48L3A+CjxkaXYgc3R5bGU9InBvc2l0aW9uOiByZWxhdGl2ZTsgZm9udC1zaXplOiAyZW07Ij4KPGRpdiBzdHlsZT0icG9zaXRpb246IHJlbGF0aXZlOyB6LWluZGV4OiAxOyBjb2xvcjogcmVkOyBwYWRkaW5nOiAxcHg7Ij4KCiAgICA8IS0tIExhY2sgb2Ygc3BhY2UgYmV0d2VlbiB0aGUgdHdvIHNwYW5zIGlzIGtleSAtLT4KICAgIDxzcGFuIHN0eWxlPSJkaXNwbGF5OiB0YWJsZS1jZWxsIj5GaXJzdCBsaW5lPC9zcGFuPjxzcGFuIHN0eWxlPSJkaXNwbGF5OiBub25lIiBpZD0idCI+U2Vjb25kIGxpbmU8L3NwYW4+CiAgPC9kaXY+CjxkaXYgc3R5bGU9InBvc2l0aW9uOiBhYnNvbHV0ZTsgei1pbmRleDogMjsgdG9wOiAwOyBjb2xvcjogZ3JlZW47IHBhZGRpbmc6IDFweDsiPgoKICAgIDxkaXY+Rmlyc3QgbGluZTwvZGl2PgogICAgPGRpdj5TZWNvbmQgbGluZTwvZGl2PgogIDwvZGl2Pgo8L2Rpdj4KPC9ib2R5Pgo8L2h0bWw+",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgo8aGVhZD4KCiAgPHRpdGxlPkNTUyBUZXN0OiBBdXRvLWltcG9ydGVkIGZyb20gR2Vja28gdGVzdCAzMjU1NDMtMWEuaHRtbDwvdGl0bGU+CiAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJCb3JpcyBaYmFyc2t5IiBocmVmPSJtYWlsdG86YnpiYXJza3lAbWl0LmVkdSI+CiAgPGxpbmsgcmVsPSJoZWxwIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCNhbm9ueW1vdXMtYm94ZXMiPgogIDxtZXRhIG5hbWU9ImZsYWdzIiBjb250ZW50PSIiPgo8L2hlYWQ+Cjxib2R5IG9ubG9hZD0iZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3QnKS5zdHlsZS5kaXNwbGF5ID0gJ2Jsb2NrJyI+CjxwPlRoZXJlIHNob3VsZCBiZSBubyByZWQgYmVsb3csIGV4Y2VwdCBmb3IgYW50aWFsaWFzaW5nIGlzc3Vlcy48L3A+CjxkaXYgc3R5bGU9InBvc2l0aW9uOiByZWxhdGl2ZTsgZm9udC1zaXplOiAyZW07Ij4KPGRpdiBzdHlsZT0icG9zaXRpb246IGFic29sdXRlOyB6LWluZGV4OiAyOyB0b3A6IDA7IGNvbG9yOiBncmVlbjsgcGFkZGluZzogMXB4OyI+CgogICAgPCEtLSBMYWNrIG9mIHNwYWNlIGJldHdlZW4gdGhlIHR3byBzcGFucyBpcyBrZXkgLS0+CiAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTogdGFibGUtY2VsbCI+Rmlyc3QgbGluZTwvc3Bhbj48c3BhbiBzdHlsZT0iZGlzcGxheTogbm9uZSIgaWQ9InQiPlNlY29uZCBsaW5lPC9zcGFuPgogIDwvZGl2Pgo8ZGl2IHN0eWxlPSJwb3NpdGlvbjogcmVsYXRpdmU7IHotaW5kZXg6IDE7IGNvbG9yOiByZWQ7IHBhZGRpbmc6IDFweDsiPgoKICAgIDxkaXY+Rmlyc3QgbGluZTwvZGl2PgogICAgPGRpdj5TZWNvbmQgbGluZTwvZGl2PgogIDwvZGl2Pgo8L2Rpdj4KPC9ib2R5Pgo8L2h0bWw+",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgo8aGVhZD4KCiAgPHRpdGxlPkNTUyBUZXN0OiBBdXRvLWltcG9ydGVkIGZyb20gR2Vja28gdGVzdCAzMjU1NDMtMWIuaHRtbDwvdGl0bGU+CiAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJCb3JpcyBaYmFyc2t5IiBocmVmPSJtYWlsdG86YnpiYXJza3lAbWl0LmVkdSI+CiAgPGxpbmsgcmVsPSJoZWxwIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCNhbm9ueW1vdXMtYm94ZXMiPgogIDxtZXRhIG5hbWU9ImZsYWdzIiBjb250ZW50PSIiPgo8L2hlYWQ+Cjxib2R5IG9ubG9hZD0iZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3QnKS5zdHlsZS5kaXNwbGF5ID0gJ2Jsb2NrJyI+CjxwPlRoZXJlIHNob3VsZCBiZSBubyByZWQgYmVsb3csIGV4Y2VwdCBmb3IgYW50aWFsaWFzaW5nIGlzc3Vlcy48L3A+CjxkaXYgc3R5bGU9InBvc2l0aW9uOiByZWxhdGl2ZTsgZm9udC1zaXplOiAyZW07Ij4KPGRpdiBzdHlsZT0icG9zaXRpb246IHJlbGF0aXZlOyB6LWluZGV4OiAxOyBjb2xvcjogcmVkOyBwYWRkaW5nOiAxcHg7Ij4KCiAgICA8IS0tIHNwYWNlIGJldHdlZW4gdGhlIHR3byBzcGFucyBpcyBrZXkgLS0+CiAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTogdGFibGUtY2VsbCI+Rmlyc3QgbGluZTwvc3Bhbj4gPHNwYW4gc3R5bGU9ImRpc3BsYXk6IG5vbmUiIGlkPSJ0Ij5TZWNvbmQgbGluZTwvc3Bhbj4KICA8L2Rpdj4KPGRpdiBzdHlsZT0icG9zaXRpb246IGFic29sdXRlOyB6LWluZGV4OiAyOyB0b3A6IDA7IGNvbG9yOiBncmVlbjsgcGFkZGluZzogMXB4OyI+CgogICAgPGRpdj5GaXJzdCBsaW5lPC9kaXY+CiAgICA8ZGl2PlNlY29uZCBsaW5lPC9kaXY+CiAgPC9kaXY+CjwvZGl2Pgo8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgo8aGVhZD4KICA8dGl0bGU+Q1NTIFRlc3Q6IEF1dG8taW1wb3J0ZWQgZnJvbSBHZWNrbyB0ZXN0IDMzODczNS0xLmh0bWw8L3RpdGxlPgogIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iQm9yaXMgWmJhcnNreSIgaHJlZj0ibWFpbHRvOmJ6YmFyc2t5QG1pdC5lZHUiPgogIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjYW5vbnltb3VzLWJveGVzIj4KICA8bWV0YSBuYW1lPSJmbGFncyIgY29udGVudD0iZG9tIj4KCjxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+CiAgI3QgewogICAgZGlzcGxheTogbm9uZTsKICB9Cjwvc3R5bGU+CjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICBmdW5jdGlvbiB0b2dnbGVMYXllcihpZCkgewogICAgICB2YXIgcyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGlkKS5zdHlsZTsKICAgICAgcy5kaXNwbGF5ID0gcy5kaXNwbGF5ID8gIiIgOiAiYmxvY2siOwogIH0KCiAgZnVuY3Rpb24gZG9UZXN0KCkgewogICAgdG9nZ2xlTGF5ZXIoJ3QnKTsKICAgIGRvY3VtZW50LmJvZHkub2Zmc2V0V2lkdGg7CiAgICB0b2dnbGVMYXllcigndCcpOwogICAgZG9jdW1lbnQuYm9keS5vZmZzZXRXaWR0aDsKICAgIHRvZ2dsZUxheWVyKCd0Jyk7CiAgICBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xhc3NOYW1lID0gIiI7CiAgfQo8L3NjcmlwdD4KPC9oZWFkPgo8Ym9keSBvbmxvYWQ9ImRvVGVzdCgpIj4KPHA+VGhlcmUgc2hvdWxkIGJlIG5vIHJlZCBiZWxvdywgZXhjZXB0IGZvciBhbnRpYWxpYXNpbmcgaXNzdWVzLjwvcD4KPGRpdiBzdHlsZT0icG9zaXRpb246IHJlbGF0aXZlOyBmb250LXNpemU6IDJlbTsiPgo8ZGl2IHN0eWxlPSJwb3NpdGlvbjogYWJzb2x1dGU7IHdpZHRoOiAxMDAlOyB6LWluZGV4OiAxOyB0b3A6IDA7IGNvbG9yOiByZWQ7Ij4KCjx0YWJsZSBzdHlsZT0id2lkdGg6IDEwMCU7IiBib3JkZXI9IjUiPgogIDx0cj4KICAgICAgICAgIDx0ZCBpZD0idCI+Rmlyc3Qgcm93PC90ZD4KICA8L3RyPgogIDx0cj4KICAgICAgICAgIDx0ZD5TZWNvbmQgcm93PC90ZD4KICA8L3RyPgo8L3RhYmxlPgo8L2Rpdj4KPGRpdiBzdHlsZT0icG9zaXRpb246IGFic29sdXRlOyB3aWR0aDogMTAwJTsgei1pbmRleDogMjsgdG9wOiAwOyBjb2xvcjogZ3JlZW47Ij4KCjx0YWJsZSBzdHlsZT0id2lkdGg6IDEwMCU7IiBib3JkZXI9IjUiPgogIDx0cj4KICAgICAgICAgIDx0ZD5GaXJzdCByb3c8L3RkPgogIDwvdHI+CiAgPHRyPgogICAgICAgICAgPHRkPlNlY29uZCByb3c8L3RkPgogIDwvdHI+CjwvdGFibGU+CjwvZGl2Pgo8L2Rpdj4KPC9ib2R5Pgo8L2h0bWw+",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgo8aGVhZD4KICA8dGl0bGU+Q1NTIFRlc3Q6IEF1dG8taW1wb3J0ZWQgZnJvbSBHZWNrbyB0ZXN0IDMzODczNS0xLmh0bWw8L3RpdGxlPgogIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iQm9yaXMgWmJhcnNreSIgaHJlZj0ibWFpbHRvOmJ6YmFyc2t5QG1pdC5lZHUiPgogIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjYW5vbnltb3VzLWJveGVzIj4KICA8bWV0YSBuYW1lPSJmbGFncyIgY29udGVudD0iZG9tIj4KCjxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+CiAgI3QgewogICAgZGlzcGxheTogbm9uZTsKICB9Cjwvc3R5bGU+CjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICBmdW5jdGlvbiB0b2dnbGVMYXllcihpZCkgewogICAgICB2YXIgcyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGlkKS5zdHlsZTsKICAgICAgcy5kaXNwbGF5ID0gcy5kaXNwbGF5ID8gIiIgOiAiYmxvY2siOwogIH0KCiAgZnVuY3Rpb24gZG9UZXN0KCkgewogICAgdG9nZ2xlTGF5ZXIoJ3QnKTsKICAgIGRvY3VtZW50LmJvZHkub2Zmc2V0V2lkdGg7CiAgICB0b2dnbGVMYXllcigndCcpOwogICAgZG9jdW1lbnQuYm9keS5vZmZzZXRXaWR0aDsKICAgIHRvZ2dsZUxheWVyKCd0Jyk7CiAgICBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xhc3NOYW1lID0gIiI7CiAgfQo8L3NjcmlwdD4KPC9oZWFkPgo8Ym9keSBvbmxvYWQ9ImRvVGVzdCgpIj4KPHA+VGhlcmUgc2hvdWxkIGJlIG5vIHJlZCBiZWxvdywgZXhjZXB0IGZvciBhbnRpYWxpYXNpbmcgaXNzdWVzLjwvcD4KPGRpdiBzdHlsZT0icG9zaXRpb246IHJlbGF0aXZlOyBmb250LXNpemU6IDJlbTsiPgo8ZGl2IHN0eWxlPSJwb3NpdGlvbjogYWJzb2x1dGU7IHdpZHRoOiAxMDAlOyB6LWluZGV4OiAyOyB0b3A6IDA7IGNvbG9yOiBncmVlbjsiPgoKPHRhYmxlIHN0eWxlPSJ3aWR0aDogMTAwJTsiIGJvcmRlcj0iNSI+CiAgPHRyPgogICAgICAgICAgPHRkIGlkPSJ0Ij5GaXJzdCByb3c8L3RkPgogIDwvdHI+CiAgPHRyPgogICAgICAgICAgPHRkPlNlY29uZCByb3c8L3RkPgogIDwvdHI+CjwvdGFibGU+CjwvZGl2Pgo8ZGl2IHN0eWxlPSJwb3NpdGlvbjogYWJzb2x1dGU7IHdpZHRoOiAxMDAlOyB6LWluZGV4OiAxOyB0b3A6IDA7IGNvbG9yOiByZWQ7Ij4KCjx0YWJsZSBzdHlsZT0id2lkdGg6IDEwMCU7IiBib3JkZXI9IjUiPgogIDx0cj4KICAgICAgICAgIDx0ZD5GaXJzdCByb3c8L3RkPgogIDwvdHI+CiAgPHRyPgogICAgICAgICAgPHRkPlNlY29uZCByb3c8L3RkPgogIDwvdHI+CjwvdGFibGU+CjwvZGl2Pgo8L2Rpdj4KPC9ib2R5Pgo8L2h0bWw+",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgo8aGVhZD4KICA8dGl0bGU+Q1NTIFRlc3Q6IEF1dG8taW1wb3J0ZWQgZnJvbSBHZWNrbyB0ZXN0IDMzOTM4OC0xYS5odG1sPC90aXRsZT4KICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9IkJvcmlzIFpiYXJza3kiIGhyZWY9Im1haWx0bzpiemJhcnNreUBtaXQuZWR1Ij4KICA8bGluayByZWw9ImhlbHAiIGhyZWY9Imh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL3RhYmxlcy5odG1sI2Fub255bW91cy1ib3hlcyI+CiAgPG1ldGEgbmFtZT0iZmxhZ3MiIGNvbnRlbnQ9ImRvbSI+CgogICAgPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICBmdW5jdGlvbiBkb1Rlc3QoKSB7CiAgICAgICAgdmFyIG4gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgibiIpOwogICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgNTsgKytpKSB7CiAgICAgICAgICBuLnN0eWxlLmNzc0Zsb2F0ID0gImxlZnQiOwogICAgICAgICAgZG9jdW1lbnQuYm9keS5vZmZzZXRXaWR0aDsKICAgICAgICAgIG4uc3R5bGUuY3NzRmxvYXQgPSAiIjsKICAgICAgICAgIGRvY3VtZW50LmJvZHkub2Zmc2V0V2lkdGg7CiAgICAgICAgfQogICAgICAgIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jbGFzc05hbWUgPSAiIjsKICAgICAgfQogICAgPC9zY3JpcHQ+CiAgPC9oZWFkPgo8Ym9keSBvbmxvYWQ9ImRvVGVzdCgpIj4KPHA+VGhlcmUgc2hvdWxkIGJlIG5vIHJlZCBiZWxvdywgZXhjZXB0IGZvciBhbnRpYWxpYXNpbmcgaXNzdWVzLjwvcD4KPGRpdiBzdHlsZT0icG9zaXRpb246IHJlbGF0aXZlOyBmb250LXNpemU6IDJlbTsiPgo8ZGl2IHN0eWxlPSJwb3NpdGlvbjogYWJzb2x1dGU7IHotaW5kZXg6IDI7IHRvcDogMDsgY29sb3I6IGdyZWVuOyBwYWRkaW5nOiAxcHg7Ij4KCiAgICA8dGFibGUgYm9yZGVyPSI1Ij4KICAgICAgPHRyPgogICAgICAgIDx0ZCBpZD0ibiI+VEQ8L3RkPgogICAgICA8L3RyPgogICAgPC90YWJsZT4KICA8L2Rpdj4KPGRpdiBzdHlsZT0icG9zaXRpb246IHJlbGF0aXZlOyB6LWluZGV4OiAxOyBjb2xvcjogcmVkOyBwYWRkaW5nOiAxcHg7Ij4KCiAgICA8dGFibGUgYm9yZGVyPSI1Ij4KICAgICAgPHRyPgogICAgICAgIDx0ZCBpZD0ibiI+VEQ8L3RkPgogICAgICA8L3RyPgogICAgPC90YWJsZT4KICA8L2Rpdj4KPC9kaXY+CjwvYm9keT4KPC9odG1sPg==",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgo8aGVhZD4KICA8dGl0bGU+Q1NTIFRlc3Q6IEF1dG8taW1wb3J0ZWQgZnJvbSBHZWNrbyB0ZXN0IDMzOTM4OC0xYi5odG1sPC90aXRsZT4KICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9IkJvcmlzIFpiYXJza3kiIGhyZWY9Im1haWx0bzpiemJhcnNreUBtaXQuZWR1Ij4KICA8bGluayByZWw9ImhlbHAiIGhyZWY9Imh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL3RhYmxlcy5odG1sI2Fub255bW91cy1ib3hlcyI+CiAgPG1ldGEgbmFtZT0iZmxhZ3MiIGNvbnRlbnQ9ImRvbSI+CgogICAgPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICBmdW5jdGlvbiBkb1Rlc3QoKSB7CiAgICAgICAgdmFyIG4gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgibiIpOwogICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgNTsgKytpKSB7CiAgICAgICAgICBuLnN0eWxlLnBvc2l0aW9uID0gImFic29sdXRlIjsKICAgICAgICAgIGRvY3VtZW50LmJvZHkub2Zmc2V0V2lkdGg7CiAgICAgICAgICBuLnN0eWxlLnBvc2l0aW9uID0gIiI7CiAgICAgICAgICBkb2N1bWVudC5ib2R5Lm9mZnNldFdpZHRoOwogICAgICAgIH0KICAgICAgICBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xhc3NOYW1lID0gIiI7CiAgICAgIH0KICAgIDwvc2NyaXB0PgogIDwvaGVhZD4KPGJvZHkgb25sb2FkPSJkb1Rlc3QoKSI+CjxwPlRoZXJlIHNob3VsZCBiZSBubyByZWQgYmVsb3csIGV4Y2VwdCBmb3IgYW50aWFsaWFzaW5nIGlzc3Vlcy48L3A+CjxkaXYgc3R5bGU9InBvc2l0aW9uOiByZWxhdGl2ZTsgZm9udC1zaXplOiAyZW07Ij4KPGRpdiBzdHlsZT0icG9zaXRpb246IHJlbGF0aXZlOyB6LWluZGV4OiAxOyBjb2xvcjogcmVkOyBwYWRkaW5nOiAxcHg7Ij4KCiAgICA8dGFibGUgYm9yZGVyPSI1Ij4KICAgICAgPHRyPgogICAgICAgIDx0ZCBpZD0ibiI+VEQ8L3RkPgogICAgICA8L3RyPgogICAgPC90YWJsZT4KICA8L2Rpdj4KPGRpdiBzdHlsZT0icG9zaXRpb246IGFic29sdXRlOyB6LWluZGV4OiAyOyB0b3A6IDA7IGNvbG9yOiBncmVlbjsgcGFkZGluZzogMXB4OyI+CgogICAgPHRhYmxlIGJvcmRlcj0iNSI+CiAgICAgIDx0cj4KICAgICAgICA8dGQgaWQ9Im4iPlREPC90ZD4KICAgICAgPC90cj4KICAgIDwvdGFibGU+CiAgPC9kaXY+CjwvZGl2Pgo8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgo8aGVhZD4KICA8dGl0bGU+Q1NTIFRlc3Q6IEF1dG8taW1wb3J0ZWQgZnJvbSBHZWNrbyB0ZXN0IDMzOTM4OC0xYi5odG1sPC90aXRsZT4KICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9IkJvcmlzIFpiYXJza3kiIGhyZWY9Im1haWx0bzpiemJhcnNreUBtaXQuZWR1Ij4KICA8bGluayByZWw9ImhlbHAiIGhyZWY9Imh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL3RhYmxlcy5odG1sI2Fub255bW91cy1ib3hlcyI+CiAgPG1ldGEgbmFtZT0iZmxhZ3MiIGNvbnRlbnQ9ImRvbSI+CgogICAgPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICBmdW5jdGlvbiBkb1Rlc3QoKSB7CiAgICAgICAgdmFyIG4gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgibiIpOwogICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgNTsgKytpKSB7CiAgICAgICAgICBuLnN0eWxlLnBvc2l0aW9uID0gImFic29sdXRlIjsKICAgICAgICAgIGRvY3VtZW50LmJvZHkub2Zmc2V0V2lkdGg7CiAgICAgICAgICBuLnN0eWxlLnBvc2l0aW9uID0gIiI7CiAgICAgICAgICBkb2N1bWVudC5ib2R5Lm9mZnNldFdpZHRoOwogICAgICAgIH0KICAgICAgICBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xhc3NOYW1lID0gIiI7CiAgICAgIH0KICAgIDwvc2NyaXB0PgogIDwvaGVhZD4KPGJvZHkgb25sb2FkPSJkb1Rlc3QoKSI+CjxwPlRoZXJlIHNob3VsZCBiZSBubyByZWQgYmVsb3csIGV4Y2VwdCBmb3IgYW50aWFsaWFzaW5nIGlzc3Vlcy48L3A+CjxkaXYgc3R5bGU9InBvc2l0aW9uOiByZWxhdGl2ZTsgZm9udC1zaXplOiAyZW07Ij4KPGRpdiBzdHlsZT0icG9zaXRpb246IGFic29sdXRlOyB6LWluZGV4OiAyOyB0b3A6IDA7IGNvbG9yOiBncmVlbjsgcGFkZGluZzogMXB4OyI+CgogICAgPHRhYmxlIGJvcmRlcj0iNSI+CiAgICAgIDx0cj4KICAgICAgICA8dGQgaWQ9Im4iPlREPC90ZD4KICAgICAgPC90cj4KICAgIDwvdGFibGU+CiAgPC9kaXY+CjxkaXYgc3R5bGU9InBvc2l0aW9uOiByZWxhdGl2ZTsgei1pbmRleDogMTsgY29sb3I6IHJlZDsgcGFkZGluZzogMXB4OyI+CgogICAgPHRhYmxlIGJvcmRlcj0iNSI+CiAgICAgIDx0cj4KICAgICAgICA8dGQgaWQ9Im4iPlREPC90ZD4KICAgICAgPC90cj4KICAgIDwvdGFibGU+CiAgPC9kaXY+CjwvZGl2Pgo8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgo8aGVhZD4KCiAgPHRpdGxlPkNTUyBUZXN0OiBBdXRvLWltcG9ydGVkIGZyb20gR2Vja28gdGVzdCAzNjMzMjYtMS5odG1sPC90aXRsZT4KICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9IkJvcmlzIFpiYXJza3kiIGhyZWY9Im1haWx0bzpiemJhcnNreUBtaXQuZWR1Ij4KICA8bGluayByZWw9ImhlbHAiIGhyZWY9Imh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL3RhYmxlcy5odG1sI2Fub255bW91cy1ib3hlcyI+CiAgPG1ldGEgbmFtZT0iZmxhZ3MiIGNvbnRlbnQ9ImRvbSI+CjwvaGVhZD4KPGJvZHk+CjxwPlRoZXJlIHNob3VsZCBiZSBubyByZWQgYmVsb3csIGV4Y2VwdCBmb3IgYW50aWFsaWFzaW5nIGlzc3Vlcy48L3A+CjxkaXYgc3R5bGU9InBvc2l0aW9uOiByZWxhdGl2ZTsgZm9udC1zaXplOiAyZW07Ij4KPGRpdiBzdHlsZT0icG9zaXRpb246IHJlbGF0aXZlOyB6LWluZGV4OiAxOyBjb2xvcjogcmVkOyBwYWRkaW5nOiAxcHg7Ij4KCgo8ZGl2IHN0eWxlPSJkaXNwbGF5OiB0YWJsZTsgd2lkdGg6IDUwMHB4Ij4KICA8ZGl2IHN0eWxlPSJmbG9hdDogcmlnaHQ7IHdpZHRoOiAxMDBweCI+b25lPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPnZhciBmb28gPSBkb2N1bWVudC5ib2R5Lm9mZnNldFdpZHRoOzwvc2NyaXB0PjwvZGl2PgogIDxkaXYgc3R5bGU9ImZsb2F0OmxlZnQ7IHdpZHRoOiAxMDBweCI+dHdvPC9kaXY+CjwvZGl2PgoKPC9kaXY+CjxkaXYgc3R5bGU9InBvc2l0aW9uOiBhYnNvbHV0ZTsgei1pbmRleDogMjsgdG9wOiAwOyBjb2xvcjogZ3JlZW47IHBhZGRpbmc6IDFweDsiPgoKCjxkaXYgc3R5bGU9ImRpc3BsYXk6IHRhYmxlOyB3aWR0aDogNTAwcHgiPgogIDxkaXYgc3R5bGU9ImRpc3BsYXk6IHRhYmxlLWNlbGwiPgogICAgPGRpdiBzdHlsZT0iZmxvYXQ6IHJpZ2h0OyB3aWR0aDogMTAwcHgiPm9uZTwvZGl2PgogICAgPGRpdiBzdHlsZT0iZmxvYXQ6bGVmdDsgd2lkdGg6IDEwMHB4Ij50d288L2Rpdj4KICA8L2Rpdj4KPC9kaXY+Cgo8L2Rpdj4KPC9kaXY+CjwvYm9keT4KPC9odG1sPg==",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgo8aGVhZD4KCiAgPHRpdGxlPkNTUyBUZXN0OiBBdXRvLWltcG9ydGVkIGZyb20gR2Vja28gdGVzdCAzNjMzMjYtMS5odG1sPC90aXRsZT4KICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9IkJvcmlzIFpiYXJza3kiIGhyZWY9Im1haWx0bzpiemJhcnNreUBtaXQuZWR1Ij4KICA8bGluayByZWw9ImhlbHAiIGhyZWY9Imh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL3RhYmxlcy5odG1sI2Fub255bW91cy1ib3hlcyI+CiAgPG1ldGEgbmFtZT0iZmxhZ3MiIGNvbnRlbnQ9ImRvbSI+CjwvaGVhZD4KPGJvZHk+CjxwPlRoZXJlIHNob3VsZCBiZSBubyByZWQgYmVsb3csIGV4Y2VwdCBmb3IgYW50aWFsaWFzaW5nIGlzc3Vlcy48L3A+CjxkaXYgc3R5bGU9InBvc2l0aW9uOiByZWxhdGl2ZTsgZm9udC1zaXplOiAyZW07Ij4KPGRpdiBzdHlsZT0icG9zaXRpb246IGFic29sdXRlOyB6LWluZGV4OiAyOyB0b3A6IDA7IGNvbG9yOiBncmVlbjsgcGFkZGluZzogMXB4OyI+CgoKPGRpdiBzdHlsZT0iZGlzcGxheTogdGFibGU7IHdpZHRoOiA1MDBweCI+CiAgPGRpdiBzdHlsZT0iZmxvYXQ6IHJpZ2h0OyB3aWR0aDogMTAwcHgiPm9uZTxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij52YXIgZm9vID0gZG9jdW1lbnQuYm9keS5vZmZzZXRXaWR0aDs8L3NjcmlwdD48L2Rpdj4KICA8ZGl2IHN0eWxlPSJmbG9hdDpsZWZ0OyB3aWR0aDogMTAwcHgiPnR3bzwvZGl2Pgo8L2Rpdj4KCjwvZGl2Pgo8ZGl2IHN0eWxlPSJwb3NpdGlvbjogcmVsYXRpdmU7IHotaW5kZXg6IDE7IGNvbG9yOiByZWQ7IHBhZGRpbmc6IDFweDsiPgoKCjxkaXYgc3R5bGU9ImRpc3BsYXk6IHRhYmxlOyB3aWR0aDogNTAwcHgiPgogIDxkaXYgc3R5bGU9ImRpc3BsYXk6IHRhYmxlLWNlbGwiPgogICAgPGRpdiBzdHlsZT0iZmxvYXQ6IHJpZ2h0OyB3aWR0aDogMTAwcHgiPm9uZTwvZGl2PgogICAgPGRpdiBzdHlsZT0iZmxvYXQ6bGVmdDsgd2lkdGg6IDEwMHB4Ij50d288L2Rpdj4KICA8L2Rpdj4KPC9kaXY+Cgo8L2Rpdj4KPC9kaXY+CjwvYm9keT4KPC9odG1sPg==",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgo8aGVhZD4KICA8dGl0bGU+Q1NTIFRlc3Q6IEF1dG8taW1wb3J0ZWQgZnJvbSBHZWNrbyB0ZXN0IDM2ODkzMi0xLmh0bWw8L3RpdGxlPgogIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iQm9yaXMgWmJhcnNreSIgaHJlZj0ibWFpbHRvOmJ6YmFyc2t5QG1pdC5lZHUiPgogIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjYW5vbnltb3VzLWJveGVzIj4KICA8bWV0YSBuYW1lPSJmbGFncyIgY29udGVudD0iZG9tIj4KCiAgPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgZnVuY3Rpb24gZG9UZXN0KCkgewogICAgICBmb3IgKHZhciBpID0gMDsgaSA8IDEwOyArK2kpIHsKICAgICAgICAvLyBjbGVhciB0YXJnZXQgZWxlbWVudCdzIGNvbnRlbnQKICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgidGFyZ2V0LXRhYmxlIikuaW5uZXJIVE1MID0gIiI7CiAgICAgICAgLy8gY2xvbmUgYW5kIGFwcGVuZCBuZXcgcm93CiAgICAgICAgY2xvbmVkX3JvdyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJyb3ctdGVtcGxhdGUiKS5jbG9uZU5vZGUodHJ1ZSk7CiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoInRhcmdldC10YWJsZSIpLmFwcGVuZENoaWxkKGNsb25lZF9yb3cpOwogICAgICAgIGRvY3VtZW50LmJvZHkub2Zmc2V0V2lkdGg7CiAgICAgIH0KICAgIH0KICAgIDwvc2NyaXB0Pgo8L2hlYWQ+Cjxib2R5IG9ubG9hZD0iZG9UZXN0KCkiPgo8cD5UaGVyZSBzaG91bGQgYmUgbm8gcmVkIGJlbG93LCBleGNlcHQgZm9yIGFudGlhbGlhc2luZyBpc3N1ZXMuPC9wPgo8ZGl2IHN0eWxlPSJwb3NpdGlvbjogcmVsYXRpdmU7IGZvbnQtc2l6ZTogMmVtOyI+CjxkaXYgc3R5bGU9InBvc2l0aW9uOiByZWxhdGl2ZTsgei1pbmRleDogMTsgY29sb3I6IHJlZDsgcGFkZGluZzogMXB4OyI+CgogICAgPHRhYmxlPjx0ciBpZD0icm93LXRlbXBsYXRlIj48dGQ+Y2xvbmluZyBtYXRlcmlhbDwvdGQ+PC90cj48L3RhYmxlPgogICAgPHRhYmxlIGlkPSJ0YXJnZXQtdGFibGUiPjx0cj48dGQ+dGFyZ2V0IHRhYmxlPC90ZD48L3RyPjwvdGFibGU+CjwvZGl2Pgo8ZGl2IHN0eWxlPSJwb3NpdGlvbjogYWJzb2x1dGU7IHotaW5kZXg6IDI7IHRvcDogMDsgY29sb3I6IGdyZWVuOyBwYWRkaW5nOiAxcHg7Ij4KCiAgICA8dGFibGU+PHRyPjx0ZD5jbG9uaW5nIG1hdGVyaWFsPC90ZD48L3RyPjwvdGFibGU+CiAgICA8dGFibGU+PHRyPjx0ZD5jbG9uaW5nIG1hdGVyaWFsPC90ZD48L3RyPjwvdGFibGU+CjwvZGl2Pgo8L2Rpdj4KPC9ib2R5Pgo8L2h0bWw+",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgo8aGVhZD4KICA8dGl0bGU+Q1NTIFRlc3Q6IEF1dG8taW1wb3J0ZWQgZnJvbSBHZWNrbyB0ZXN0IDM2ODkzMi0xLmh0bWw8L3RpdGxlPgogIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iQm9yaXMgWmJhcnNreSIgaHJlZj0ibWFpbHRvOmJ6YmFyc2t5QG1pdC5lZHUiPgogIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjYW5vbnltb3VzLWJveGVzIj4KICA8bWV0YSBuYW1lPSJmbGFncyIgY29udGVudD0iZG9tIj4KCiAgPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgZnVuY3Rpb24gZG9UZXN0KCkgewogICAgICBmb3IgKHZhciBpID0gMDsgaSA8IDEwOyArK2kpIHsKICAgICAgICAvLyBjbGVhciB0YXJnZXQgZWxlbWVudCdzIGNvbnRlbnQKICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgidGFyZ2V0LXRhYmxlIikuaW5uZXJIVE1MID0gIiI7CiAgICAgICAgLy8gY2xvbmUgYW5kIGFwcGVuZCBuZXcgcm93CiAgICAgICAgY2xvbmVkX3JvdyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJyb3ctdGVtcGxhdGUiKS5jbG9uZU5vZGUodHJ1ZSk7CiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoInRhcmdldC10YWJsZSIpLmFwcGVuZENoaWxkKGNsb25lZF9yb3cpOwogICAgICAgIGRvY3VtZW50LmJvZHkub2Zmc2V0V2lkdGg7CiAgICAgIH0KICAgIH0KICAgIDwvc2NyaXB0Pgo8L2hlYWQ+Cjxib2R5IG9ubG9hZD0iZG9UZXN0KCkiPgo8cD5UaGVyZSBzaG91bGQgYmUgbm8gcmVkIGJlbG93LCBleGNlcHQgZm9yIGFudGlhbGlhc2luZyBpc3N1ZXMuPC9wPgo8ZGl2IHN0eWxlPSJwb3NpdGlvbjogcmVsYXRpdmU7IGZvbnQtc2l6ZTogMmVtOyI+CjxkaXYgc3R5bGU9InBvc2l0aW9uOiBhYnNvbHV0ZTsgei1pbmRleDogMjsgdG9wOiAwOyBjb2xvcjogZ3JlZW47IHBhZGRpbmc6IDFweDsiPgoKICAgIDx0YWJsZT48dHIgaWQ9InJvdy10ZW1wbGF0ZSI+PHRkPmNsb25pbmcgbWF0ZXJpYWw8L3RkPjwvdHI+PC90YWJsZT4KICAgIDx0YWJsZSBpZD0idGFyZ2V0LXRhYmxlIj48dHI+PHRkPnRhcmdldCB0YWJsZTwvdGQ+PC90cj48L3RhYmxlPgo8L2Rpdj4KPGRpdiBzdHlsZT0icG9zaXRpb246IHJlbGF0aXZlOyB6LWluZGV4OiAxOyBjb2xvcjogcmVkOyBwYWRkaW5nOiAxcHg7Ij4KCiAgICA8dGFibGU+PHRyPjx0ZD5jbG9uaW5nIG1hdGVyaWFsPC90ZD48L3RyPjwvdGFibGU+CiAgICA8dGFibGU+PHRyPjx0ZD5jbG9uaW5nIG1hdGVyaWFsPC90ZD48L3RyPjwvdGFibGU+CjwvZGl2Pgo8L2Rpdj4KPC9ib2R5Pgo8L2h0bWw+",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgo8aGVhZD4KICA8dGl0bGU+Q1NTIFRlc3Q6IEF1dG8taW1wb3J0ZWQgZnJvbSBHZWNrbyB0ZXN0IDM3MTA1NC0xLmh0bWw8L3RpdGxlPgogIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iQm9yaXMgWmJhcnNreSIgaHJlZj0ibWFpbHRvOmJ6YmFyc2t5QG1pdC5lZHUiPgogIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjYW5vbnltb3VzLWJveGVzIj4KICA8bWV0YSBuYW1lPSJmbGFncyIgY29udGVudD0iZG9tIj4KCiAgICA8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICAgIGZ1bmN0aW9uIGRvVGVzdCgpIHsKICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgidCIpLnN0eWxlLmRpc3BsYXkgPSAidGFibGUtcm93IjsKICAgICAgfQogICAgPC9zY3JpcHQ+CiAgPC9oZWFkPgo8Ym9keSBvbmxvYWQ9ImRvVGVzdCgpIj4KPHA+VGhlcmUgc2hvdWxkIGJlIG5vIHJlZCBiZWxvdywgZXhjZXB0IGZvciBhbnRpYWxpYXNpbmcgaXNzdWVzLjwvcD4KPGRpdiBzdHlsZT0icG9zaXRpb246IHJlbGF0aXZlOyBmb250LXNpemU6IDJlbTsiPgo8ZGl2IHN0eWxlPSJwb3NpdGlvbjogcmVsYXRpdmU7IHotaW5kZXg6IDE7IGNvbG9yOiByZWQ7IHBhZGRpbmc6IDFweDsiPgoKICAgIDx0YWJsZSBzdHlsZT0iYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZSI+CiAgICAgIDx0ciBzdHlsZT0iZGlzcGxheTogYmxvY2s7IGJvcmRlcjogNXB4IHNvbGlkIj4KICAgICAgICA8dGQ+TG9uZ0xvbmdMb25nPC90ZD4KICAgICAgPC90cj4KICAgICAgPHRyIHN0eWxlPSJkaXNwbGF5OiBub25lOyBib3JkZXI6IDVweCBzb2xpZCIgaWQ9InQiPgogICAgICAgIDx0ZD5TaG9ydDwvdGQ+CiAgICAgIDwvdHI+CiAgICA8L3RhYmxlPgogIDwvZGl2Pgo8ZGl2IHN0eWxlPSJwb3NpdGlvbjogYWJzb2x1dGU7IHotaW5kZXg6IDI7IHRvcDogMDsgY29sb3I6IGdyZWVuOyBwYWRkaW5nOiAxcHg7Ij4KCiAgICA8dGFibGUgc3R5bGU9ImJvcmRlci1jb2xsYXBzZTogY29sbGFwc2UiPgogICAgICA8dHIgc3R5bGU9ImRpc3BsYXk6IGJsb2NrOyBib3JkZXI6IDVweCBzb2xpZCI+CiAgICAgICAgPHRkPkxvbmdMb25nTG9uZzwvdGQ+CiAgICAgIDwvdHI+CiAgICAgIDx0ciBzdHlsZT0iYm9yZGVyOiA1cHggc29saWQiIGlkPSJ0Ij4KICAgICAgICA8dGQ+U2hvcnQ8L3RkPgogICAgICA8L3RyPgogICAgPC90YWJsZT4KICA8L2Rpdj4KPC9kaXY+CjwvYm9keT4KPC9odG1sPg==",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgo8aGVhZD4KCiAgPHRpdGxlPkNTUyBUZXN0OiBBdXRvLWltcG9ydGVkIGZyb20gR2Vja28gdGVzdCBpbmZlci1maXJzdC1yb3cuaHRtbDwvdGl0bGU+CiAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJCb3JpcyBaYmFyc2t5IiBocmVmPSJtYWlsdG86YnpiYXJza3lAbWl0LmVkdSI+CiAgPGxpbmsgcmVsPSJoZWxwIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCNhbm9ueW1vdXMtYm94ZXMiPgogIDxtZXRhIG5hbWU9ImZsYWdzIiBjb250ZW50PSIiPgo8L2hlYWQ+Cjxib2R5IHN0eWxlPSJmb250LWZhbWlseTogbW9ub3NwYWNlIj4KPHA+VGhlcmUgc2hvdWxkIGJlIG5vIHJlZCBiZWxvdywgZXhjZXB0IGZvciBhbnRpYWxpYXNpbmcgaXNzdWVzLjwvcD4KPGRpdiBzdHlsZT0icG9zaXRpb246IHJlbGF0aXZlOyBmb250LXNpemU6IDJlbTsiPgo8ZGl2IHN0eWxlPSJwb3NpdGlvbjogYWJzb2x1dGU7IHotaW5kZXg6IDI7IHRvcDogMDsgY29sb3I6IGdyZWVuOyBwYWRkaW5nOiAxcHg7Ij4KCiAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTp0YWJsZSI+CiAgICAgIDxzcGFuIHN0eWxlPSJkaXNwbGF5OiB0YWJsZS1jZWxsIj5Sb3cgMSwgQ29sIDE8L3NwYW4+CiAgICAgIDxzcGFuIHN0eWxlPSJkaXNwbGF5OiB0YWJsZS1jZWxsIj5Sb3cgMSwgQ29sIDI8L3NwYW4+CiAgICAgIDxzcGFuIHN0eWxlPSJkaXNwbGF5OiB0YWJsZS1jZWxsIj5Sb3cgMSwgQ29sIDM8L3NwYW4+CiAgICAgIDxzcGFuIHN0eWxlPSJkaXNwbGF5OiB0YWJsZS1yb3ctZ3JvdXAiPiAKICAgICAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTogdGFibGUtcm93Ij4KICAgICAgICAgIDxzcGFuIHN0eWxlPSJkaXNwbGF5OiB0YWJsZS1jZWxsIj5Sb3cgMjIsIENvbCAxPC9zcGFuPgogICAgICAgICAgPHNwYW4gc3R5bGU9ImRpc3BsYXk6IHRhYmxlLWNlbGwiPlJvdyAyMiwgQ29sIDI8L3NwYW4+CiAgICAgICAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTogdGFibGUtY2VsbCI+Um93IDIyLCBDb2wgMzwvc3Bhbj4KICAgICAgICA8L3NwYW4+CiAgICAgICAgPHNwYW4gc3R5bGU9ImRpc3BsYXk6IHRhYmxlLXJvdyI+CiAgICAgICAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTogdGFibGUtY2VsbCI+Um93IDMzMywgQ29sIDE8L3NwYW4+CiAgICAgICAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTogdGFibGUtY2VsbCI+Um93IDMzMywgQ29sIDI8L3NwYW4+CiAgICAgICAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTogdGFibGUtY2VsbCI+Um93IDMzMywgQ29sIDM8L3NwYW4+CiAgICAgICAgPC9zcGFuPgogICAgICA8L3NwYW4+CiAgICA8L3NwYW4+CiAgPC9kaXY+CjxkaXYgc3R5bGU9InBvc2l0aW9uOiByZWxhdGl2ZTsgei1pbmRleDogMTsgY29sb3I6IHJlZDsgcGFkZGluZzogMXB4OyI+CgogICAgPHRhYmxlIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCIgc3R5bGU9Im1hcmdpbjogMDsgcGFkZGluZzogMDsgYm9yZGVyOiBub25lIj4KICAgICAgPHRyPgogICAgICAgIDx0ZD5Sb3cgMSwgQ29sIDE8L3RkPgogICAgICAgIDx0ZD5Sb3cgMSwgQ29sIDI8L3RkPgogICAgICAgIDx0ZD5Sb3cgMSwgQ29sIDM8L3RkPgogICAgICA8L3RyPgogICAgICA8dHI+CiAgICAgICAgPHRkPlJvdyAyMiwgQ29sIDE8L3RkPgogICAgICAgIDx0ZD5Sb3cgMjIsIENvbCAyPC90ZD4KICAgICAgICA8dGQ+Um93IDIyLCBDb2wgMzwvdGQ+CiAgICAgIDwvdHI+CiAgICAgIDx0cj4KICAgICAgICA8dGQ+Um93IDMzMywgQ29sIDE8L3RkPgogICAgICAgIDx0ZD5Sb3cgMzMzLCBDb2wgMjwvdGQ+CiAgICAgICAgPHRkPlJvdyAzMzMsIENvbCAzPC90ZD4KICAgICAgPC90cj4KICAgIDwvdGFibGU+CiAgPC9kaXY+CjwvZGl2Pgo8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgo8aGVhZD4KCiAgPHRpdGxlPkNTUyBUZXN0OiBBdXRvLWltcG9ydGVkIGZyb20gR2Vja28gdGVzdCBpbmZlci1yb3dzLWluc2lkZS1yb3dncm91cHMuaHRtbDwvdGl0bGU+CiAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJCb3JpcyBaYmFyc2t5IiBocmVmPSJtYWlsdG86YnpiYXJza3lAbWl0LmVkdSI+CiAgPGxpbmsgcmVsPSJoZWxwIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCNhbm9ueW1vdXMtYm94ZXMiPgogIDxtZXRhIG5hbWU9ImZsYWdzIiBjb250ZW50PSIiPgo8L2hlYWQ+Cjxib2R5IHN0eWxlPSJmb250LWZhbWlseTogbW9ub3NwYWNlIj4KPHA+VGhlcmUgc2hvdWxkIGJlIG5vIHJlZCBiZWxvdywgZXhjZXB0IGZvciBhbnRpYWxpYXNpbmcgaXNzdWVzLjwvcD4KPGRpdiBzdHlsZT0icG9zaXRpb246IHJlbGF0aXZlOyBmb250LXNpemU6IDJlbTsiPgo8ZGl2IHN0eWxlPSJwb3NpdGlvbjogcmVsYXRpdmU7IHotaW5kZXg6IDE7IGNvbG9yOiByZWQ7IHBhZGRpbmc6IDFweDsiPgoKICAgIDxzcGFuIHN0eWxlPSJkaXNwbGF5OiB0YWJsZS1mb290ZXItZ3JvdXAiPiAKICAgICAgPHNwYW4gc3R5bGU9ImRpc3BsYXk6IHRhYmxlLWNlbGwiPlJvdyAzMzMsIENvbCAxPC9zcGFuPgogICAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTogdGFibGUtY2VsbCI+Um93IDMzMywgQ29sIDI8L3NwYW4+CiAgICAgIDxzcGFuIHN0eWxlPSJkaXNwbGF5OiB0YWJsZS1jZWxsIj5Sb3cgMzMzLCBDb2wgMzwvc3Bhbj4KICAgIDwvc3Bhbj4KICAgIDxzcGFuIHN0eWxlPSJkaXNwbGF5OiB0YWJsZS1yb3ctZ3JvdXAiPiAKICAgICAgPHNwYW4gc3R5bGU9ImRpc3BsYXk6IHRhYmxlLWNlbGwiPlJvdyAyMiwgQ29sIDE8L3NwYW4+CiAgICAgIDxzcGFuIHN0eWxlPSJkaXNwbGF5OiB0YWJsZS1jZWxsIj5Sb3cgMjIsIENvbCAyPC9zcGFuPgogICAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTogdGFibGUtY2VsbCI+Um93IDIyLCBDb2wgMzwvc3Bhbj4KICAgIDwvc3Bhbj4KICAgIDxzcGFuIHN0eWxlPSJkaXNwbGF5OiB0YWJsZS1oZWFkZXItZ3JvdXAiPiAKICAgICAgPHNwYW4gc3R5bGU9ImRpc3BsYXk6IHRhYmxlLWNlbGwiPlJvdyAxLCBDb2wgMTwvc3Bhbj4KICAgICAgPHNwYW4gc3R5bGU9ImRpc3BsYXk6IHRhYmxlLWNlbGwiPlJvdyAxLCBDb2wgMjwvc3Bhbj4KICAgICAgPHNwYW4gc3R5bGU9ImRpc3BsYXk6IHRhYmxlLWNlbGwiPlJvdyAxLCBDb2wgMzwvc3Bhbj4KICAgIDwvc3Bhbj4KICA8L2Rpdj4KPGRpdiBzdHlsZT0icG9zaXRpb246IGFic29sdXRlOyB6LWluZGV4OiAyOyB0b3A6IDA7IGNvbG9yOiBncmVlbjsgcGFkZGluZzogMXB4OyI+CgogICAgPHRhYmxlIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCIgc3R5bGU9Im1hcmdpbjogMDsgcGFkZGluZzogMDsgYm9yZGVyOiBub25lIj4KICAgICAgPHRyPgogICAgICAgIDx0ZD5Sb3cgMSwgQ29sIDE8L3RkPgogICAgICAgIDx0ZD5Sb3cgMSwgQ29sIDI8L3RkPgogICAgICAgIDx0ZD5Sb3cgMSwgQ29sIDM8L3RkPgogICAgICA8L3RyPgogICAgICA8dHI+CiAgICAgICAgPHRkPlJvdyAyMiwgQ29sIDE8L3RkPgogICAgICAgIDx0ZD5Sb3cgMjIsIENvbCAyPC90ZD4KICAgICAgICA8dGQ+Um93IDIyLCBDb2wgMzwvdGQ+CiAgICAgIDwvdHI+CiAgICAgIDx0cj4KICAgICAgICA8dGQ+Um93IDMzMywgQ29sIDE8L3RkPgogICAgICAgIDx0ZD5Sb3cgMzMzLCBDb2wgMjwvdGQ+CiAgICAgICAgPHRkPlJvdyAzMzMsIENvbCAzPC90ZD4KICAgICAgPC90cj4KICAgIDwvdGFibGU+CiAgPC9kaXY+CjwvZGl2Pgo8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgo8aGVhZD4KCiAgPHRpdGxlPkNTUyBUZXN0OiBBdXRvLWltcG9ydGVkIGZyb20gR2Vja28gdGVzdCBjb2xzLXRlc3QtMS5odG1sPC90aXRsZT4KICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9IkJvcmlzIFpiYXJza3kiIGhyZWY9Im1haWx0bzpiemJhcnNreUBtaXQuZWR1Ij4KICA8bGluayByZWw9ImhlbHAiIGhyZWY9Imh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL3RhYmxlcy5odG1sI2Fub255bW91cy1ib3hlcyI+CiAgPG1ldGEgbmFtZT0iZmxhZ3MiIGNvbnRlbnQ9IiI+CjwvaGVhZD4KPGJvZHkgc3R5bGU9ImZvbnQtZmFtaWx5OiBtb25vc3BhY2UiPgpUaGVyZSBzaG91bGQgYmUgbm8gcmVkIGJlbG93LCBleGNlcHQgZm9yIGFudGlhbGlhc2luZyBpc3N1ZXMuCjxkaXYgc3R5bGU9InBvc2l0aW9uOiByZWxhdGl2ZTsgZm9udC1zaXplOiAyZW07Ij4KPGRpdiBzdHlsZT0icG9zaXRpb246IGFic29sdXRlOyB6LWluZGV4OiAyOyB0b3A6IDA7IGNvbG9yOiBncmVlbjsgcGFkZGluZzogMXB4OyI+CgogICAgPHNwYW4gc3R5bGU9ImRpc3BsYXk6dGFibGUiPgogICAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTogdGFibGUtY29sdW1uOyBiYWNrZ3JvdW5kOiB5ZWxsb3ciPjwvc3Bhbj4KICAgICAgPHNwYW4gc3R5bGU9ImRpc3BsYXk6IHRhYmxlLWNlbGwiPlJvdyAxLCBDb2wgMTwvc3Bhbj4KICAgICAgPHNwYW4gc3R5bGU9ImRpc3BsYXk6IHRhYmxlLWNlbGwiPlJvdyAxLCBDb2wgMjwvc3Bhbj4KICAgICAgPHNwYW4gc3R5bGU9ImRpc3BsYXk6IHRhYmxlLWNlbGwiPlJvdyAxLCBDb2wgMzwvc3Bhbj4KICAgICAgPHNwYW4gc3R5bGU9ImRpc3BsYXk6IHRhYmxlLWNvbHVtbjsgYmFja2dyb3VuZDogY3lhbiI+PC9zcGFuPgogICAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTogdGFibGUtcm93LWdyb3VwIj4gCiAgICAgICAgPHNwYW4gc3R5bGU9ImRpc3BsYXk6IHRhYmxlLXJvdyI+CiAgICAgICAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTogdGFibGUtY2VsbCI+Um93IDIyLCBDb2wgMTwvc3Bhbj4KICAgICAgICAgIDxzcGFuIHN0eWxlPSJkaXNwbGF5OiB0YWJsZS1jZWxsIj5Sb3cgMjIsIENvbCAyPC9zcGFuPgogICAgICAgICAgPHNwYW4gc3R5bGU9ImRpc3BsYXk6IHRhYmxlLWNlbGwiPlJvdyAyMiwgQ29sIDM8L3NwYW4+CiAgICAgICAgPC9zcGFuPgogICAgICAgIDxzcGFuIHN0eWxlPSJkaXNwbGF5OiB0YWJsZS1yb3ciPgogICAgICAgICAgPHNwYW4gc3R5bGU9ImRpc3BsYXk6IHRhYmxlLWNlbGwiPlJvdyAzMzMsIENvbCAxPC9zcGFuPgogICAgICAgICAgPHNwYW4gc3R5bGU9ImRpc3BsYXk6IHRhYmxlLWNlbGwiPlJvdyAzMzMsIENvbCAyPC9zcGFuPgogICAgICAgICAgPHNwYW4gc3R5bGU9ImRpc3BsYXk6IHRhYmxlLWNlbGwiPlJvdyAzMzMsIENvbCAzPC9zcGFuPgogICAgICAgIDwvc3Bhbj4KICAgICAgPC9zcGFuPgogICAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTogdGFibGUtY29sdW1uOyBiYWNrZ3JvdW5kOiBsaW1lIj48L3NwYW4+CiAgICA8L3NwYW4+CiAgPC9kaXY+CjxkaXYgc3R5bGU9InBvc2l0aW9uOiByZWxhdGl2ZTsgei1pbmRleDogMTsgY29sb3I6IHJlZDsgcGFkZGluZzogMXB4OyI+CgogICAgPHRhYmxlIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCIgc3R5bGU9Im1hcmdpbjogMDsgcGFkZGluZzogMDsgYm9yZGVyOiBub25lIj4KICAgICAgPGNvbGdyb3VwPjxjb2wgc3R5bGU9ImJhY2tncm91bmQ6IHllbGxvdyI+PGNvbCBzdHlsZT0iYmFja2dyb3VuZDogY3lhbiI+PGNvbCBzdHlsZT0iYmFja2dyb3VuZDogbGltZSI+PC9jb2xncm91cD4KICAgICAgPHRyPgogICAgICAgIDx0ZD5Sb3cgMSwgQ29sIDE8L3RkPgogICAgICAgIDx0ZD5Sb3cgMSwgQ29sIDI8L3RkPgogICAgICAgIDx0ZD5Sb3cgMSwgQ29sIDM8L3RkPgogICAgICA8L3RyPgogICAgICA8dHI+CiAgICAgICAgPHRkPlJvdyAyMiwgQ29sIDE8L3RkPgogICAgICAgIDx0ZD5Sb3cgMjIsIENvbCAyPC90ZD4KICAgICAgICA8dGQ+Um93IDIyLCBDb2wgMzwvdGQ+CiAgICAgIDwvdHI+CiAgICAgIDx0cj4KICAgICAgICA8dGQ+Um93IDMzMywgQ29sIDE8L3RkPgogICAgICAgIDx0ZD5Sb3cgMzMzLCBDb2wgMjwvdGQ+CiAgICAgICAgPHRkPlJvdyAzMzMsIENvbCAzPC90ZD4KICAgICAgPC90cj4KICAgIDwvdGFibGU+CiAgPC9kaXY+CjwvZGl2Pgo8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgo8aGVhZD4KCiAgPHRpdGxlPkNTUyBUZXN0OiBBdXRvLWltcG9ydGVkIGZyb20gR2Vja28gdGVzdCBjb2xzLXRlc3QtMi5odG1sPC90aXRsZT4KICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9IkJvcmlzIFpiYXJza3kiIGhyZWY9Im1haWx0bzpiemJhcnNreUBtaXQuZWR1Ij4KICA8bGluayByZWw9ImhlbHAiIGhyZWY9Imh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL3RhYmxlcy5odG1sI2Fub255bW91cy1ib3hlcyI+CiAgPG1ldGEgbmFtZT0iZmxhZ3MiIGNvbnRlbnQ9IiI+CjwvaGVhZD4KPGJvZHkgc3R5bGU9ImZvbnQtZmFtaWx5OiBtb25vc3BhY2UiPgo8cD5UaGVyZSBzaG91bGQgYmUgbm8gcmVkIGJlbG93LCBleGNlcHQgZm9yIGFudGlhbGlhc2luZyBpc3N1ZXMuPC9wPgo8ZGl2IHN0eWxlPSJwb3NpdGlvbjogcmVsYXRpdmU7IGZvbnQtc2l6ZTogMmVtOyI+CjxkaXYgc3R5bGU9InBvc2l0aW9uOiByZWxhdGl2ZTsgei1pbmRleDogMTsgY29sb3I6IHJlZDsgcGFkZGluZzogMXB4OyI+CgogICAgPHNwYW4gc3R5bGU9ImRpc3BsYXk6dGFibGUiPgogICAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTogdGFibGUtY29sdW1uOyBiYWNrZ3JvdW5kOiB5ZWxsb3ciPjwvc3Bhbj4KICAgICAgPHNwYW4gc3R5bGU9ImRpc3BsYXk6IHRhYmxlLWNvbHVtbjsgYmFja2dyb3VuZDogY3lhbiI+PC9zcGFuPgogICAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTogdGFibGUtY29sdW1uOyBiYWNrZ3JvdW5kOiBsaW1lIj48L3NwYW4+CiAgICAgIDxzcGFuIHN0eWxlPSJkaXNwbGF5OiB0YWJsZS1jZWxsIj5Sb3cgMSwgQ29sIDE8L3NwYW4+CiAgICAgIDxzcGFuIHN0eWxlPSJkaXNwbGF5OiB0YWJsZS1jZWxsIj5Sb3cgMSwgQ29sIDI8L3NwYW4+CiAgICAgIDxzcGFuIHN0eWxlPSJkaXNwbGF5OiB0YWJsZS1jZWxsIj5Sb3cgMSwgQ29sIDM8L3NwYW4+CiAgICAgIDxzcGFuIHN0eWxlPSJkaXNwbGF5OiB0YWJsZS1yb3ctZ3JvdXAiPiAKICAgICAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTogdGFibGUtcm93Ij4KICAgICAgICAgIDxzcGFuIHN0eWxlPSJkaXNwbGF5OiB0YWJsZS1jZWxsIj5Sb3cgMjIsIENvbCAxPC9zcGFuPgogICAgICAgICAgPHNwYW4gc3R5bGU9ImRpc3BsYXk6IHRhYmxlLWNlbGwiPlJvdyAyMiwgQ29sIDI8L3NwYW4+CiAgICAgICAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTogdGFibGUtY2VsbCI+Um93IDIyLCBDb2wgMzwvc3Bhbj4KICAgICAgICA8L3NwYW4+CiAgICAgICAgPHNwYW4gc3R5bGU9ImRpc3BsYXk6IHRhYmxlLXJvdyI+CiAgICAgICAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTogdGFibGUtY2VsbCI+Um93IDMzMywgQ29sIDE8L3NwYW4+CiAgICAgICAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTogdGFibGUtY2VsbCI+Um93IDMzMywgQ29sIDI8L3NwYW4+CiAgICAgICAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTogdGFibGUtY2VsbCI+Um93IDMzMywgQ29sIDM8L3NwYW4+CiAgICAgICAgPC9zcGFuPgogICAgICA8L3NwYW4+CiAgICA8L3NwYW4+CiAgPC9kaXY+CjxkaXYgc3R5bGU9InBvc2l0aW9uOiBhYnNvbHV0ZTsgei1pbmRleDogMjsgdG9wOiAwOyBjb2xvcjogZ3JlZW47IHBhZGRpbmc6IDFweDsiPgoKICAgIDx0YWJsZSBjZWxscGFkZGluZz0iMCIgY2VsbHNwYWNpbmc9IjAiIHN0eWxlPSJtYXJnaW46IDA7IHBhZGRpbmc6IDA7IGJvcmRlcjogbm9uZSI+CiAgICAgIDxjb2xncm91cD48Y29sIHN0eWxlPSJiYWNrZ3JvdW5kOiB5ZWxsb3ciPjxjb2wgc3R5bGU9ImJhY2tncm91bmQ6IGN5YW4iPjxjb2wgc3R5bGU9ImJhY2tncm91bmQ6IGxpbWUiPjwvY29sZ3JvdXA+CiAgICAgIDx0cj4KICAgICAgICA8dGQ+Um93IDEsIENvbCAxPC90ZD4KICAgICAgICA8dGQ+Um93IDEsIENvbCAyPC90ZD4KICAgICAgICA8dGQ+Um93IDEsIENvbCAzPC90ZD4KICAgICAgPC90cj4KICAgICAgPHRyPgogICAgICAgIDx0ZD5Sb3cgMjIsIENvbCAxPC90ZD4KICAgICAgICA8dGQ+Um93IDIyLCBDb2wgMjwvdGQ+CiAgICAgICAgPHRkPlJvdyAyMiwgQ29sIDM8L3RkPgogICAgICA8L3RyPgogICAgICA8dHI+CiAgICAgICAgPHRkPlJvdyAzMzMsIENvbCAxPC90ZD4KICAgICAgICA8dGQ+Um93IDMzMywgQ29sIDI8L3RkPgogICAgICAgIDx0ZD5Sb3cgMzMzLCBDb2wgMzwvdGQ+CiAgICAgIDwvdHI+CiAgICA8L3RhYmxlPgogIDwvZGl2Pgo8L2Rpdj4KPC9ib2R5Pgo8L2h0bWw+",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgo8aGVhZD4KCiAgPHRpdGxlPkNTUyBUZXN0OiBBdXRvLWltcG9ydGVkIGZyb20gR2Vja28gdGVzdCBjb2xzLXRlc3QtMi5odG1sPC90aXRsZT4KICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9IkJvcmlzIFpiYXJza3kiIGhyZWY9Im1haWx0bzpiemJhcnNreUBtaXQuZWR1Ij4KICA8bGluayByZWw9ImhlbHAiIGhyZWY9Imh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL3RhYmxlcy5odG1sI2Fub255bW91cy1ib3hlcyI+CiAgPG1ldGEgbmFtZT0iZmxhZ3MiIGNvbnRlbnQ9IiI+CjwvaGVhZD4KPGJvZHkgc3R5bGU9ImZvbnQtZmFtaWx5OiBtb25vc3BhY2UiPgpUaGVyZSBzaG91bGQgYmUgbm8gcmVkIGJlbG93LCBleGNlcHQgZm9yIGFudGlhbGlhc2luZyBpc3N1ZXMuCjxkaXYgc3R5bGU9InBvc2l0aW9uOiByZWxhdGl2ZTsgZm9udC1zaXplOiAyZW07Ij4KPGRpdiBzdHlsZT0icG9zaXRpb246IGFic29sdXRlOyB6LWluZGV4OiAyOyB0b3A6IDA7IGNvbG9yOiBncmVlbjsgcGFkZGluZzogMXB4OyI+CgogICAgPHNwYW4gc3R5bGU9ImRpc3BsYXk6dGFibGUiPgogICAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTogdGFibGUtY29sdW1uOyBiYWNrZ3JvdW5kOiB5ZWxsb3ciPjwvc3Bhbj4KICAgICAgPHNwYW4gc3R5bGU9ImRpc3BsYXk6IHRhYmxlLWNvbHVtbjsgYmFja2dyb3VuZDogY3lhbiI+PC9zcGFuPgogICAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTogdGFibGUtY29sdW1uOyBiYWNrZ3JvdW5kOiBsaW1lIj48L3NwYW4+CiAgICAgIDxzcGFuIHN0eWxlPSJkaXNwbGF5OiB0YWJsZS1jZWxsIj5Sb3cgMSwgQ29sIDE8L3NwYW4+CiAgICAgIDxzcGFuIHN0eWxlPSJkaXNwbGF5OiB0YWJsZS1jZWxsIj5Sb3cgMSwgQ29sIDI8L3NwYW4+CiAgICAgIDxzcGFuIHN0eWxlPSJkaXNwbGF5OiB0YWJsZS1jZWxsIj5Sb3cgMSwgQ29sIDM8L3NwYW4+CiAgICAgIDxzcGFuIHN0eWxlPSJkaXNwbGF5OiB0YWJsZS1yb3ctZ3JvdXAiPiAKICAgICAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTogdGFibGUtcm93Ij4KICAgICAgICAgIDxzcGFuIHN0eWxlPSJkaXNwbGF5OiB0YWJsZS1jZWxsIj5Sb3cgMjIsIENvbCAxPC9zcGFuPgogICAgICAgICAgPHNwYW4gc3R5bGU9ImRpc3BsYXk6IHRhYmxlLWNlbGwiPlJvdyAyMiwgQ29sIDI8L3NwYW4+CiAgICAgICAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTogdGFibGUtY2VsbCI+Um93IDIyLCBDb2wgMzwvc3Bhbj4KICAgICAgICA8L3NwYW4+CiAgICAgICAgPHNwYW4gc3R5bGU9ImRpc3BsYXk6IHRhYmxlLXJvdyI+CiAgICAgICAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTogdGFibGUtY2VsbCI+Um93IDMzMywgQ29sIDE8L3NwYW4+CiAgICAgICAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTogdGFibGUtY2VsbCI+Um93IDMzMywgQ29sIDI8L3NwYW4+CiAgICAgICAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTogdGFibGUtY2VsbCI+Um93IDMzMywgQ29sIDM8L3NwYW4+CiAgICAgICAgPC9zcGFuPgogICAgICA8L3NwYW4+CiAgICA8L3NwYW4+CiAgPC9kaXY+CjxkaXYgc3R5bGU9InBvc2l0aW9uOiByZWxhdGl2ZTsgei1pbmRleDogMTsgY29sb3I6IHJlZDsgcGFkZGluZzogMXB4OyI+CgogICAgPHRhYmxlIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCIgc3R5bGU9Im1hcmdpbjogMDsgcGFkZGluZzogMDsgYm9yZGVyOiBub25lIj4KICAgICAgPGNvbGdyb3VwPjxjb2wgc3R5bGU9ImJhY2tncm91bmQ6IHllbGxvdyI+PGNvbCBzdHlsZT0iYmFja2dyb3VuZDogY3lhbiI+PGNvbCBzdHlsZT0iYmFja2dyb3VuZDogbGltZSI+PC9jb2xncm91cD4KICAgICAgPHRyPgogICAgICAgIDx0ZD5Sb3cgMSwgQ29sIDE8L3RkPgogICAgICAgIDx0ZD5Sb3cgMSwgQ29sIDI8L3RkPgogICAgICAgIDx0ZD5Sb3cgMSwgQ29sIDM8L3RkPgogICAgICA8L3RyPgogICAgICA8dHI+CiAgICAgICAgPHRkPlJvdyAyMiwgQ29sIDE8L3RkPgogICAgICAgIDx0ZD5Sb3cgMjIsIENvbCAyPC90ZD4KICAgICAgICA8dGQ+Um93IDIyLCBDb2wgMzwvdGQ+CiAgICAgIDwvdHI+CiAgICAgIDx0cj4KICAgICAgICA8dGQ+Um93IDMzMywgQ29sIDE8L3RkPgogICAgICAgIDx0ZD5Sb3cgMzMzLCBDb2wgMjwvdGQ+CiAgICAgICAgPHRkPlJvdyAzMzMsIENvbCAzPC90ZD4KICAgICAgPC90cj4KICAgIDwvdGFibGU+CiAgPC9kaXY+CjwvZGl2Pgo8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgo8aGVhZD4KCiAgPHRpdGxlPkNTUyBUZXN0OiBBdXRvLWltcG9ydGVkIGZyb20gR2Vja28gdGVzdCBjb2xzLXRlc3QtMy5odG1sPC90aXRsZT4KICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9IkJvcmlzIFpiYXJza3kiIGhyZWY9Im1haWx0bzpiemJhcnNreUBtaXQuZWR1Ij4KICA8bGluayByZWw9ImhlbHAiIGhyZWY9Imh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL3RhYmxlcy5odG1sI2Fub255bW91cy1ib3hlcyI+CiAgPG1ldGEgbmFtZT0iZmxhZ3MiIGNvbnRlbnQ9IiI+CjwvaGVhZD4KPGJvZHkgc3R5bGU9ImZvbnQtZmFtaWx5OiBtb25vc3BhY2UiPgpUaGVyZSBzaG91bGQgYmUgbm8gcmVkIGJlbG93LCBleGNlcHQgZm9yIGFudGlhbGlhc2luZyBpc3N1ZXMuCjxkaXYgc3R5bGU9InBvc2l0aW9uOiByZWxhdGl2ZTsgZm9udC1zaXplOiAyZW07Ij4KPGRpdiBzdHlsZT0icG9zaXRpb246IHJlbGF0aXZlOyB6LWluZGV4OiAxOyBjb2xvcjogcmVkOyBwYWRkaW5nOiAxcHg7Ij4KCiAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTp0YWJsZSI+CiAgICAgIDxzcGFuIHN0eWxlPSJkaXNwbGF5OiB0YWJsZS1jZWxsIj5Sb3cgMSwgQ29sIDE8L3NwYW4+CiAgICAgIDxzcGFuIHN0eWxlPSJkaXNwbGF5OiB0YWJsZS1jZWxsIj5Sb3cgMSwgQ29sIDI8L3NwYW4+CiAgICAgIDxzcGFuIHN0eWxlPSJkaXNwbGF5OiB0YWJsZS1jZWxsIj5Sb3cgMSwgQ29sIDM8L3NwYW4+CiAgICAgIDxzcGFuIHN0eWxlPSJkaXNwbGF5OiB0YWJsZS1yb3ctZ3JvdXAiPiAKICAgICAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTogdGFibGUtcm93Ij4KICAgICAgICAgIDxzcGFuIHN0eWxlPSJkaXNwbGF5OiB0YWJsZS1jZWxsIj5Sb3cgMjIsIENvbCAxPC9zcGFuPgogICAgICAgICAgPHNwYW4gc3R5bGU9ImRpc3BsYXk6IHRhYmxlLWNlbGwiPlJvdyAyMiwgQ29sIDI8L3NwYW4+CiAgICAgICAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTogdGFibGUtY2VsbCI+Um93IDIyLCBDb2wgMzwvc3Bhbj4KICAgICAgICA8L3NwYW4+CiAgICAgICAgPHNwYW4gc3R5bGU9ImRpc3BsYXk6IHRhYmxlLXJvdyI+CiAgICAgICAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTogdGFibGUtY2VsbCI+Um93IDMzMywgQ29sIDE8L3NwYW4+CiAgICAgICAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTogdGFibGUtY2VsbCI+Um93IDMzMywgQ29sIDI8L3NwYW4+CiAgICAgICAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTogdGFibGUtY2VsbCI+Um93IDMzMywgQ29sIDM8L3NwYW4+CiAgICAgICAgPC9zcGFuPgogICAgICA8L3NwYW4+CiAgICAgIDxzcGFuIHN0eWxlPSJkaXNwbGF5OiB0YWJsZS1jb2x1bW47IGJhY2tncm91bmQ6IHllbGxvdyI+PC9zcGFuPgogICAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTogdGFibGUtY29sdW1uOyBiYWNrZ3JvdW5kOiBjeWFuIj48L3NwYW4+CiAgICAgIDxzcGFuIHN0eWxlPSJkaXNwbGF5OiB0YWJsZS1jb2x1bW47IGJhY2tncm91bmQ6IGxpbWUiPjwvc3Bhbj4KICAgIDwvc3Bhbj4KICA8L2Rpdj4KPGRpdiBzdHlsZT0icG9zaXRpb246IGFic29sdXRlOyB6LWluZGV4OiAyOyB0b3A6IDA7IGNvbG9yOiBncmVlbjsgcGFkZGluZzogMXB4OyI+CgogICAgPHRhYmxlIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCIgc3R5bGU9Im1hcmdpbjogMDsgcGFkZGluZzogMDsgYm9yZGVyOiBub25lIj4KICAgICAgPGNvbGdyb3VwPjxjb2wgc3R5bGU9ImJhY2tncm91bmQ6IHllbGxvdyI+PGNvbCBzdHlsZT0iYmFja2dyb3VuZDogY3lhbiI+PGNvbCBzdHlsZT0iYmFja2dyb3VuZDogbGltZSI+PC9jb2xncm91cD4KICAgICAgPHRyPgogICAgICAgIDx0ZD5Sb3cgMSwgQ29sIDE8L3RkPgogICAgICAgIDx0ZD5Sb3cgMSwgQ29sIDI8L3RkPgogICAgICAgIDx0ZD5Sb3cgMSwgQ29sIDM8L3RkPgogICAgICA8L3RyPgogICAgICA8dHI+CiAgICAgICAgPHRkPlJvdyAyMiwgQ29sIDE8L3RkPgogICAgICAgIDx0ZD5Sb3cgMjIsIENvbCAyPC90ZD4KICAgICAgICA8dGQ+Um93IDIyLCBDb2wgMzwvdGQ+CiAgICAgIDwvdHI+CiAgICAgIDx0cj4KICAgICAgICA8dGQ+Um93IDMzMywgQ29sIDE8L3RkPgogICAgICAgIDx0ZD5Sb3cgMzMzLCBDb2wgMjwvdGQ+CiAgICAgICAgPHRkPlJvdyAzMzMsIENvbCAzPC90ZD4KICAgICAgPC90cj4KICAgIDwvdGFibGU+CiAgPC9kaXY+CjwvZGl2Pgo8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgo8aGVhZD4KCiAgPHRpdGxlPkNTUyBUZXN0OiBBdXRvLWltcG9ydGVkIGZyb20gR2Vja28gdGVzdCBjb2xzLXRlc3QtMy5odG1sPC90aXRsZT4KICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9IkJvcmlzIFpiYXJza3kiIGhyZWY9Im1haWx0bzpiemJhcnNreUBtaXQuZWR1Ij4KICA8bGluayByZWw9ImhlbHAiIGhyZWY9Imh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL3RhYmxlcy5odG1sI2Fub255bW91cy1ib3hlcyI+CiAgPG1ldGEgbmFtZT0iZmxhZ3MiIGNvbnRlbnQ9IiI+CjwvaGVhZD4KPGJvZHkgc3R5bGU9ImZvbnQtZmFtaWx5OiBtb25vc3BhY2UiPgpUaGVyZSBzaG91bGQgYmUgbm8gcmVkIGJlbG93LCBleGNlcHQgZm9yIGFudGlhbGlhc2luZyBpc3N1ZXMuCjxkaXYgc3R5bGU9InBvc2l0aW9uOiByZWxhdGl2ZTsgZm9udC1zaXplOiAyZW07Ij4KPGRpdiBzdHlsZT0icG9zaXRpb246IGFic29sdXRlOyB6LWluZGV4OiAyOyB0b3A6IDA7IGNvbG9yOiBncmVlbjsgcGFkZGluZzogMXB4OyI+CgogICAgPHNwYW4gc3R5bGU9ImRpc3BsYXk6dGFibGUiPgogICAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTogdGFibGUtY2VsbCI+Um93IDEsIENvbCAxPC9zcGFuPgogICAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTogdGFibGUtY2VsbCI+Um93IDEsIENvbCAyPC9zcGFuPgogICAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTogdGFibGUtY2VsbCI+Um93IDEsIENvbCAzPC9zcGFuPgogICAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTogdGFibGUtcm93LWdyb3VwIj4gCiAgICAgICAgPHNwYW4gc3R5bGU9ImRpc3BsYXk6IHRhYmxlLXJvdyI+CiAgICAgICAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTogdGFibGUtY2VsbCI+Um93IDIyLCBDb2wgMTwvc3Bhbj4KICAgICAgICAgIDxzcGFuIHN0eWxlPSJkaXNwbGF5OiB0YWJsZS1jZWxsIj5Sb3cgMjIsIENvbCAyPC9zcGFuPgogICAgICAgICAgPHNwYW4gc3R5bGU9ImRpc3BsYXk6IHRhYmxlLWNlbGwiPlJvdyAyMiwgQ29sIDM8L3NwYW4+CiAgICAgICAgPC9zcGFuPgogICAgICAgIDxzcGFuIHN0eWxlPSJkaXNwbGF5OiB0YWJsZS1yb3ciPgogICAgICAgICAgPHNwYW4gc3R5bGU9ImRpc3BsYXk6IHRhYmxlLWNlbGwiPlJvdyAzMzMsIENvbCAxPC9zcGFuPgogICAgICAgICAgPHNwYW4gc3R5bGU9ImRpc3BsYXk6IHRhYmxlLWNlbGwiPlJvdyAzMzMsIENvbCAyPC9zcGFuPgogICAgICAgICAgPHNwYW4gc3R5bGU9ImRpc3BsYXk6IHRhYmxlLWNlbGwiPlJvdyAzMzMsIENvbCAzPC9zcGFuPgogICAgICAgIDwvc3Bhbj4KICAgICAgPC9zcGFuPgogICAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTogdGFibGUtY29sdW1uOyBiYWNrZ3JvdW5kOiB5ZWxsb3ciPjwvc3Bhbj4KICAgICAgPHNwYW4gc3R5bGU9ImRpc3BsYXk6IHRhYmxlLWNvbHVtbjsgYmFja2dyb3VuZDogY3lhbiI+PC9zcGFuPgogICAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTogdGFibGUtY29sdW1uOyBiYWNrZ3JvdW5kOiBsaW1lIj48L3NwYW4+CiAgICA8L3NwYW4+CiAgPC9kaXY+CjxkaXYgc3R5bGU9InBvc2l0aW9uOiByZWxhdGl2ZTsgei1pbmRleDogMTsgY29sb3I6IHJlZDsgcGFkZGluZzogMXB4OyI+CgogICAgPHRhYmxlIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCIgc3R5bGU9Im1hcmdpbjogMDsgcGFkZGluZzogMDsgYm9yZGVyOiBub25lIj4KICAgICAgPGNvbGdyb3VwPjxjb2wgc3R5bGU9ImJhY2tncm91bmQ6IHllbGxvdyI+PGNvbCBzdHlsZT0iYmFja2dyb3VuZDogY3lhbiI+PGNvbCBzdHlsZT0iYmFja2dyb3VuZDogbGltZSI+PC9jb2xncm91cD4KICAgICAgPHRyPgogICAgICAgIDx0ZD5Sb3cgMSwgQ29sIDE8L3RkPgogICAgICAgIDx0ZD5Sb3cgMSwgQ29sIDI8L3RkPgogICAgICAgIDx0ZD5Sb3cgMSwgQ29sIDM8L3RkPgogICAgICA8L3RyPgogICAgICA8dHI+CiAgICAgICAgPHRkPlJvdyAyMiwgQ29sIDE8L3RkPgogICAgICAgIDx0ZD5Sb3cgMjIsIENvbCAyPC90ZD4KICAgICAgICA8dGQ+Um93IDIyLCBDb2wgMzwvdGQ+CiAgICAgIDwvdHI+CiAgICAgIDx0cj4KICAgICAgICA8dGQ+Um93IDMzMywgQ29sIDE8L3RkPgogICAgICAgIDx0ZD5Sb3cgMzMzLCBDb2wgMjwvdGQ+CiAgICAgICAgPHRkPlJvdyAzMzMsIENvbCAzPC90ZD4KICAgICAgPC90cj4KICAgIDwvdGFibGU+CiAgPC9kaXY+CjwvZGl2Pgo8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgo8aGVhZD4KICA8dGl0bGU+Q1NTIFRlc3Q6IEF1dG8taW1wb3J0ZWQgZnJvbSBHZWNrbyB0ZXN0IGR5bmFtaWMtcmVtb3ZhbC0xLmh0bWw8L3RpdGxlPgogIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iQm9yaXMgWmJhcnNreSIgaHJlZj0ibWFpbHRvOmJ6YmFyc2t5QG1pdC5lZHUiPgogIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjYW5vbnltb3VzLWJveGVzIj4KICA8bWV0YSBuYW1lPSJmbGFncyIgY29udGVudD0iZG9tIj4KCiAgICA8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICAgIGZ1bmN0aW9uIGRvVGVzdCgpIHsKICAgICAgICB2YXIgdCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJ0Iik7CiAgICAgICAgdC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHQpOwogICAgICAgIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jbGFzc05hbWUgPSAiIjsKICAgICAgfQogICAgPC9zY3JpcHQ+CiAgPC9oZWFkPgo8Ym9keSBzdHlsZT0iZm9udC1mYW1pbHk6IG1vbm9zcGFjZSIgb25sb2FkPSJkb1Rlc3QoKSI+CjxwPlRoZXJlIHNob3VsZCBiZSBubyByZWQgYmVsb3csIGV4Y2VwdCBmb3IgYW50aWFsaWFzaW5nIGlzc3Vlcy48L3A+CjxkaXYgc3R5bGU9InBvc2l0aW9uOiByZWxhdGl2ZTsgZm9udC1zaXplOiAyZW07Ij4KPGRpdiBzdHlsZT0icG9zaXRpb246IHJlbGF0aXZlOyB6LWluZGV4OiAxOyBjb2xvcjogcmVkOyBwYWRkaW5nOiAxcHg7Ij4KCiAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTogdGFibGUtcm93LWdyb3VwIj4gCiAgICAgIDxzcGFuIHN0eWxlPSJkaXNwbGF5OiB0YWJsZS1jZWxsIj5Sb3cgMSwgQ29sIDE8L3NwYW4+CiAgICAgIDxzcGFuIHN0eWxlPSJkaXNwbGF5OiB0YWJsZS1jZWxsIj5Sb3cgMSwgQ29sIDI8L3NwYW4+CiAgICAgIDxzcGFuIHN0eWxlPSJkaXNwbGF5OiB0YWJsZS1jZWxsIj5Sb3cgMSwgQ29sIDM8L3NwYW4+CiAgICA8L3NwYW4+CiAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTogdGFibGUtcm93LWdyb3VwIj4gCiAgICAgIDxzcGFuIHN0eWxlPSJkaXNwbGF5OiB0YWJsZS1jZWxsIj5Sb3cgMjIsIENvbCAxPC9zcGFuPgogICAgICA8c3BhbiBpZD0idCI+VG8gYmUgcmVtb3ZlZDwvc3Bhbj4KICAgICAgPHNwYW4gc3R5bGU9ImRpc3BsYXk6IHRhYmxlLWNlbGwiPlJvdyAyMiwgQ29sIDI8L3NwYW4+CiAgICAgIDxzcGFuIHN0eWxlPSJkaXNwbGF5OiB0YWJsZS1jZWxsIj5Sb3cgMjIsIENvbCAzPC9zcGFuPgogICAgPC9zcGFuPgogICAgPHNwYW4gc3R5bGU9ImRpc3BsYXk6IHRhYmxlLXJvdy1ncm91cCI+IAogICAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTogdGFibGUtY2VsbCI+Um93IDMzMywgQ29sIDE8L3NwYW4+CiAgICAgIDxzcGFuIHN0eWxlPSJkaXNwbGF5OiB0YWJsZS1jZWxsIj5Sb3cgMzMzLCBDb2wgMjwvc3Bhbj4KICAgICAgPHNwYW4gc3R5bGU9ImRpc3BsYXk6IHRhYmxlLWNlbGwiPlJvdyAzMzMsIENvbCAzPC9zcGFuPgogICAgPC9zcGFuPgogIDwvZGl2Pgo8ZGl2IHN0eWxlPSJwb3NpdGlvbjogYWJzb2x1dGU7IHotaW5kZXg6IDI7IHRvcDogMDsgY29sb3I6IGdyZWVuOyBwYWRkaW5nOiAxcHg7Ij4KCiAgICA8dGFibGUgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIiBzdHlsZT0ibWFyZ2luOiAwOyBwYWRkaW5nOiAwOyBib3JkZXI6IG5vbmUiPgogICAgICA8dHI+CiAgICAgICAgPHRkPlJvdyAxLCBDb2wgMTwvdGQ+CiAgICAgICAgPHRkPlJvdyAxLCBDb2wgMjwvdGQ+CiAgICAgICAgPHRkPlJvdyAxLCBDb2wgMzwvdGQ+CiAgICAgIDwvdHI+CiAgICAgIDx0cj4KICAgICAgICA8dGQ+Um93IDIyLCBDb2wgMTwvdGQ+CiAgICAgICAgPHRkPlJvdyAyMiwgQ29sIDI8L3RkPgogICAgICAgIDx0ZD5Sb3cgMjIsIENvbCAzPC90ZD4KICAgICAgPC90cj4KICAgICAgPHRyPgogICAgICAgIDx0ZD5Sb3cgMzMzLCBDb2wgMTwvdGQ+CiAgICAgICAgPHRkPlJvdyAzMzMsIENvbCAyPC90ZD4KICAgICAgICA8dGQ+Um93IDMzMywgQ29sIDM8L3RkPgogICAgICA8L3RyPgogICAgPC90YWJsZT4KICA8L2Rpdj4KPC9kaXY+CjwvYm9keT4KPC9odG1sPg==",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgo8aGVhZD4KICA8dGl0bGU+Q1NTIFRlc3Q6IEF1dG8taW1wb3J0ZWQgZnJvbSBHZWNrbyB0ZXN0IGR5bmFtaWMtcmVtb3ZhbC0xLmh0bWw8L3RpdGxlPgogIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iQm9yaXMgWmJhcnNreSIgaHJlZj0ibWFpbHRvOmJ6YmFyc2t5QG1pdC5lZHUiPgogIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjYW5vbnltb3VzLWJveGVzIj4KICA8bWV0YSBuYW1lPSJmbGFncyIgY29udGVudD0iZG9tIj4KCiAgICA8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICAgIGZ1bmN0aW9uIGRvVGVzdCgpIHsKICAgICAgICB2YXIgdCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJ0Iik7CiAgICAgICAgdC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHQpOwogICAgICAgIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jbGFzc05hbWUgPSAiIjsKICAgICAgfQogICAgPC9zY3JpcHQ+CiAgPC9oZWFkPgo8Ym9keSBzdHlsZT0iZm9udC1mYW1pbHk6IG1vbm9zcGFjZSIgb25sb2FkPSJkb1Rlc3QoKSI+CjxwPlRoZXJlIHNob3VsZCBiZSBubyByZWQgYmVsb3csIGV4Y2VwdCBmb3IgYW50aWFsaWFzaW5nIGlzc3Vlcy48L3A+CjxkaXYgc3R5bGU9InBvc2l0aW9uOiByZWxhdGl2ZTsgZm9udC1zaXplOiAyZW07Ij4KPGRpdiBzdHlsZT0icG9zaXRpb246IGFic29sdXRlOyB6LWluZGV4OiAyOyB0b3A6IDA7IGNvbG9yOiBncmVlbjsgcGFkZGluZzogMXB4OyI+CgogICAgPHNwYW4gc3R5bGU9ImRpc3BsYXk6IHRhYmxlLXJvdy1ncm91cCI+IAogICAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTogdGFibGUtY2VsbCI+Um93IDEsIENvbCAxPC9zcGFuPgogICAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTogdGFibGUtY2VsbCI+Um93IDEsIENvbCAyPC9zcGFuPgogICAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTogdGFibGUtY2VsbCI+Um93IDEsIENvbCAzPC9zcGFuPgogICAgPC9zcGFuPgogICAgPHNwYW4gc3R5bGU9ImRpc3BsYXk6IHRhYmxlLXJvdy1ncm91cCI+IAogICAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTogdGFibGUtY2VsbCI+Um93IDIyLCBDb2wgMTwvc3Bhbj4KICAgICAgPHNwYW4gaWQ9InQiPlRvIGJlIHJlbW92ZWQ8L3NwYW4+CiAgICAgIDxzcGFuIHN0eWxlPSJkaXNwbGF5OiB0YWJsZS1jZWxsIj5Sb3cgMjIsIENvbCAyPC9zcGFuPgogICAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTogdGFibGUtY2VsbCI+Um93IDIyLCBDb2wgMzwvc3Bhbj4KICAgIDwvc3Bhbj4KICAgIDxzcGFuIHN0eWxlPSJkaXNwbGF5OiB0YWJsZS1yb3ctZ3JvdXAiPiAKICAgICAgPHNwYW4gc3R5bGU9ImRpc3BsYXk6IHRhYmxlLWNlbGwiPlJvdyAzMzMsIENvbCAxPC9zcGFuPgogICAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTogdGFibGUtY2VsbCI+Um93IDMzMywgQ29sIDI8L3NwYW4+CiAgICAgIDxzcGFuIHN0eWxlPSJkaXNwbGF5OiB0YWJsZS1jZWxsIj5Sb3cgMzMzLCBDb2wgMzwvc3Bhbj4KICAgIDwvc3Bhbj4KICA8L2Rpdj4KPGRpdiBzdHlsZT0icG9zaXRpb246IHJlbGF0aXZlOyB6LWluZGV4OiAxOyBjb2xvcjogcmVkOyBwYWRkaW5nOiAxcHg7Ij4KCiAgICA8dGFibGUgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIiBzdHlsZT0ibWFyZ2luOiAwOyBwYWRkaW5nOiAwOyBib3JkZXI6IG5vbmUiPgogICAgICA8dHI+CiAgICAgICAgPHRkPlJvdyAxLCBDb2wgMTwvdGQ+CiAgICAgICAgPHRkPlJvdyAxLCBDb2wgMjwvdGQ+CiAgICAgICAgPHRkPlJvdyAxLCBDb2wgMzwvdGQ+CiAgICAgIDwvdHI+CiAgICAgIDx0cj4KICAgICAgICA8dGQ+Um93IDIyLCBDb2wgMTwvdGQ+CiAgICAgICAgPHRkPlJvdyAyMiwgQ29sIDI8L3RkPgogICAgICAgIDx0ZD5Sb3cgMjIsIENvbCAzPC90ZD4KICAgICAgPC90cj4KICAgICAgPHRyPgogICAgICAgIDx0ZD5Sb3cgMzMzLCBDb2wgMTwvdGQ+CiAgICAgICAgPHRkPlJvdyAzMzMsIENvbCAyPC90ZD4KICAgICAgICA8dGQ+Um93IDMzMywgQ29sIDM8L3RkPgogICAgICA8L3RyPgogICAgPC90YWJsZT4KICA8L2Rpdj4KPC9kaXY+CjwvYm9keT4KPC9odG1sPg==",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgo8aGVhZD4KICA8dGl0bGU+Q1NTIFRlc3Q6IEF1dG8taW1wb3J0ZWQgZnJvbSBHZWNrbyB0ZXN0IGR5bmFtaWMtcmVtb3ZhbC03Lmh0bWw8L3RpdGxlPgogIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iQm9yaXMgWmJhcnNreSIgaHJlZj0ibWFpbHRvOmJ6YmFyc2t5QG1pdC5lZHUiPgogIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjYW5vbnltb3VzLWJveGVzIj4KICA8bWV0YSBuYW1lPSJmbGFncyIgY29udGVudD0iZG9tIj4KCiAgICA8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICAgIGZ1bmN0aW9uIGRvVGVzdCgpIHsKICAgICAgICB2YXIgdCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJ0Iik7CiAgICAgICAgdC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHQpOwogICAgICAgIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jbGFzc05hbWUgPSAiIjsKICAgICAgfQogICAgPC9zY3JpcHQ+CiAgPC9oZWFkPgo8Ym9keSBzdHlsZT0iZm9udC1mYW1pbHk6IG1vbm9zcGFjZSIgb25sb2FkPSJkb1Rlc3QoKSI+CjxwPlRoZXJlIHNob3VsZCBiZSBubyByZWQgYmVsb3csIGV4Y2VwdCBmb3IgYW50aWFsaWFzaW5nIGlzc3Vlcy48L3A+CjxkaXYgc3R5bGU9InBvc2l0aW9uOiByZWxhdGl2ZTsgZm9udC1zaXplOiAyZW07Ij4KPGRpdiBzdHlsZT0icG9zaXRpb246IHJlbGF0aXZlOyB6LWluZGV4OiAxOyBjb2xvcjogcmVkOyBwYWRkaW5nOiAxcHg7Ij4KCiAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTogdGFibGUtcm93LWdyb3VwIj4gCiAgICAgIDxzcGFuIHN0eWxlPSJkaXNwbGF5OiB0YWJsZS1jZWxsIj5Sb3cgMSwgQ29sIDE8L3NwYW4+CiAgICAgIDxzcGFuIHN0eWxlPSJkaXNwbGF5OiB0YWJsZS1jZWxsIj5Sb3cgMSwgQ29sIDI8L3NwYW4+CiAgICAgIDxzcGFuIHN0eWxlPSJkaXNwbGF5OiB0YWJsZS1jZWxsIj5Sb3cgMSwgQ29sIDM8L3NwYW4+CiAgICA8L3NwYW4+CiAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTogdGFibGUtcm93LWdyb3VwIj4gCiAgICAgIDxzcGFuIHN0eWxlPSJkaXNwbGF5OiB0YWJsZS1jZWxsIj5Sb3cgMjIsIENvbCAxPC9zcGFuPgogICAgICA8c3BhbiBpZD0idCIgc3R5bGU9ImRpc3BsYXk6IHRhYmxlLWNvbHVtbi1ncm91cCI+VG8gYmUgcmVtb3ZlZDwvc3Bhbj4KICAgICAgPHNwYW4gc3R5bGU9ImRpc3BsYXk6IHRhYmxlLWNlbGwiPlJvdyAyMiwgQ29sIDI8L3NwYW4+CiAgICAgIDxzcGFuIHN0eWxlPSJkaXNwbGF5OiB0YWJsZS1jZWxsIj5Sb3cgMjIsIENvbCAzPC9zcGFuPgogICAgPC9zcGFuPgogICAgPHNwYW4gc3R5bGU9ImRpc3BsYXk6IHRhYmxlLXJvdy1ncm91cCI+IAogICAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTogdGFibGUtY2VsbCI+Um93IDMzMywgQ29sIDE8L3NwYW4+CiAgICAgIDxzcGFuIHN0eWxlPSJkaXNwbGF5OiB0YWJsZS1jZWxsIj5Sb3cgMzMzLCBDb2wgMjwvc3Bhbj4KICAgICAgPHNwYW4gc3R5bGU9ImRpc3BsYXk6IHRhYmxlLWNlbGwiPlJvdyAzMzMsIENvbCAzPC9zcGFuPgogICAgPC9zcGFuPgogIDwvZGl2Pgo8ZGl2IHN0eWxlPSJwb3NpdGlvbjogYWJzb2x1dGU7IHotaW5kZXg6IDI7IHRvcDogMDsgY29sb3I6IGdyZWVuOyBwYWRkaW5nOiAxcHg7Ij4KCiAgICA8dGFibGUgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIiBzdHlsZT0ibWFyZ2luOiAwOyBwYWRkaW5nOiAwOyBib3JkZXI6IG5vbmUiPgogICAgICA8dHI+CiAgICAgICAgPHRkPlJvdyAxLCBDb2wgMTwvdGQ+CiAgICAgICAgPHRkPlJvdyAxLCBDb2wgMjwvdGQ+CiAgICAgICAgPHRkPlJvdyAxLCBDb2wgMzwvdGQ+CiAgICAgIDwvdHI+CiAgICAgIDx0cj4KICAgICAgICA8dGQ+Um93IDIyLCBDb2wgMTwvdGQ+CiAgICAgICAgPHRkPlJvdyAyMiwgQ29sIDI8L3RkPgogICAgICAgIDx0ZD5Sb3cgMjIsIENvbCAzPC90ZD4KICAgICAgPC90cj4KICAgICAgPHRyPgogICAgICAgIDx0ZD5Sb3cgMzMzLCBDb2wgMTwvdGQ+CiAgICAgICAgPHRkPlJvdyAzMzMsIENvbCAyPC90ZD4KICAgICAgICA8dGQ+Um93IDMzMywgQ29sIDM8L3RkPgogICAgICA8L3RyPgogICAgPC90YWJsZT4KICA8L2Rpdj4KPC9kaXY+CjwvYm9keT4KPC9odG1sPg==",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgo8aGVhZD4KICA8dGl0bGU+Q1NTIFRlc3Q6IEF1dG8taW1wb3J0ZWQgZnJvbSBHZWNrbyB0ZXN0IGR5bmFtaWMtcmVtb3ZhbC0xNS5odG1sPC90aXRsZT4KICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9IkJvcmlzIFpiYXJza3kiIGhyZWY9Im1haWx0bzpiemJhcnNreUBtaXQuZWR1Ij4KICA8bGluayByZWw9ImhlbHAiIGhyZWY9Imh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL3RhYmxlcy5odG1sI2Fub255bW91cy1ib3hlcyI+CiAgPG1ldGEgbmFtZT0iZmxhZ3MiIGNvbnRlbnQ9ImRvbSI+CgogICAgPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICBmdW5jdGlvbiBkb1Rlc3QoKSB7CiAgICAgICAgdmFyIG4gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgidCIpOwogICAgICAgIG4ucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChuKTsKICAgICAgICBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xhc3NOYW1lID0gIiI7CiAgICAgIH0KICAgIDwvc2NyaXB0PgogIDwvaGVhZD4KPGJvZHkgc3R5bGU9ImZvbnQtZmFtaWx5OiBtb25vc3BhY2UiIG9ubG9hZD0iZG9UZXN0KCkiPgo8cD5UaGVyZSBzaG91bGQgYmUgbm8gcmVkIGJlbG93LCBleGNlcHQgZm9yIGFudGlhbGlhc2luZyBpc3N1ZXMuPC9wPgo8ZGl2IHN0eWxlPSJwb3NpdGlvbjogcmVsYXRpdmU7IGZvbnQtc2l6ZTogMmVtOyI+CjxkaXYgc3R5bGU9InBvc2l0aW9uOiByZWxhdGl2ZTsgei1pbmRleDogMTsgY29sb3I6IHJlZDsgcGFkZGluZzogMXB4OyI+CgogICAgPHNwYW4gc3R5bGU9ImRpc3BsYXk6IHRhYmxlLXJvdyI+CiAgICAgIDxzcGFuIHN0eWxlPSJkaXNwbGF5OiB0YWJsZS1jZWxsIj5Sb3cgMSwgQ29sIDE8L3NwYW4+CiAgICAgIDxzcGFuIHN0eWxlPSJkaXNwbGF5OiB0YWJsZS1jZWxsIj5Sb3cgMSwgQ29sIDI8L3NwYW4+CiAgICAgIDxzcGFuIHN0eWxlPSJkaXNwbGF5OiB0YWJsZS1jZWxsIj5Sb3cgMSwgQ29sIDM8L3NwYW4+CiAgICA8L3NwYW4+CiAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTogdGFibGUtcm93Ij4KICAgICAgPHNwYW4gc3R5bGU9ImRpc3BsYXk6IHRhYmxlLWNlbGwiPlJvdyAyMiwgQ29sIDE8L3NwYW4+CiAgICAgIDxzcGFuIHN0eWxlPSJkaXNwbGF5OiB0YWJsZS1jZWxsIj5Sb3cgMjIsIENvbCAyPC9zcGFuPgogICAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTogdGFibGUtY2VsbCI+Um93IDIyLCBDb2wgMzwvc3Bhbj4KICAgIDwvc3Bhbj4KICAgIDxzcGFuIGlkPSJ0Ij5UbyBiZSByZW1vdmVkPC9zcGFuPgogICAgPHNwYW4gc3R5bGU9ImRpc3BsYXk6IHRhYmxlLXJvdyI+CiAgICAgIDxzcGFuIHN0eWxlPSJkaXNwbGF5OiB0YWJsZS1jZWxsIj5Sb3cgMzMzLCBDb2wgMTwvc3Bhbj4KICAgICAgPHNwYW4gc3R5bGU9ImRpc3BsYXk6IHRhYmxlLWNlbGwiPlJvdyAzMzMsIENvbCAyPC9zcGFuPgogICAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTogdGFibGUtY2VsbCI+Um93IDMzMywgQ29sIDM8L3NwYW4+CiAgICA8L3NwYW4+CiAgPC9kaXY+CjxkaXYgc3R5bGU9InBvc2l0aW9uOiBhYnNvbHV0ZTsgei1pbmRleDogMjsgdG9wOiAwOyBjb2xvcjogZ3JlZW47IHBhZGRpbmc6IDFweDsiPgoKICAgIDx0YWJsZSBjZWxscGFkZGluZz0iMCIgY2VsbHNwYWNpbmc9IjAiIHN0eWxlPSJtYXJnaW46IDA7IHBhZGRpbmc6IDA7IGJvcmRlcjogbm9uZSI+CiAgICAgIDx0cj4KICAgICAgICA8dGQ+Um93IDEsIENvbCAxPC90ZD4KICAgICAgICA8dGQ+Um93IDEsIENvbCAyPC90ZD4KICAgICAgICA8dGQ+Um93IDEsIENvbCAzPC90ZD4KICAgICAgPC90cj4KICAgICAgPHRyPgogICAgICAgIDx0ZD5Sb3cgMjIsIENvbCAxPC90ZD4KICAgICAgICA8dGQ+Um93IDIyLCBDb2wgMjwvdGQ+CiAgICAgICAgPHRkPlJvdyAyMiwgQ29sIDM8L3RkPgogICAgICA8L3RyPgogICAgICA8dHI+CiAgICAgICAgPHRkPlJvdyAzMzMsIENvbCAxPC90ZD4KICAgICAgICA8dGQ+Um93IDMzMywgQ29sIDI8L3RkPgogICAgICAgIDx0ZD5Sb3cgMzMzLCBDb2wgMzwvdGQ+CiAgICAgIDwvdHI+CiAgICA8L3RhYmxlPgogIDwvZGl2Pgo8L2Rpdj4KPC9ib2R5Pgo8L2h0bWw+",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgo8aGVhZD4KICA8dGl0bGU+Q1NTIFRlc3Q6IEF1dG8taW1wb3J0ZWQgZnJvbSBHZWNrbyB0ZXN0IGR5bmFtaWMtc3dpdGNoLWJsb2NrLXRvLWNlbGwtNS5odG1sPC90aXRsZT4KICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9IkJvcmlzIFpiYXJza3kiIGhyZWY9Im1haWx0bzpiemJhcnNreUBtaXQuZWR1Ij4KICA8bGluayByZWw9ImhlbHAiIGhyZWY9Imh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL3RhYmxlcy5odG1sI2Fub255bW91cy1ib3hlcyI+CiAgPG1ldGEgbmFtZT0iZmxhZ3MiIGNvbnRlbnQ9ImRvbSI+CgogICAgPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICBmdW5jdGlvbiBkb1Rlc3QoKSB7CiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoInQiKS5zdHlsZS5kaXNwbGF5ID0gInRhYmxlLWNlbGwiOwogICAgICAgIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jbGFzc05hbWUgPSAiIjsKICAgICAgfQogICAgPC9zY3JpcHQ+CiAgPC9oZWFkPgo8Ym9keSBzdHlsZT0iZm9udC1mYW1pbHk6IG1vbm9zcGFjZSIgb25sb2FkPSJkb1Rlc3QoKSI+CjxwPlRoZXJlIHNob3VsZCBiZSBubyByZWQgYmVsb3csIGV4Y2VwdCBmb3IgYW50aWFsaWFzaW5nIGlzc3Vlcy48L3A+CjxkaXYgc3R5bGU9InBvc2l0aW9uOiByZWxhdGl2ZTsgZm9udC1zaXplOiAyZW07Ij4KPGRpdiBzdHlsZT0icG9zaXRpb246IGFic29sdXRlOyB6LWluZGV4OiAyOyB0b3A6IDA7IGNvbG9yOiBncmVlbjsgcGFkZGluZzogMXB4OyI+CgogICAgPHNwYW4gc3R5bGU9ImRpc3BsYXk6dGFibGUiPgogICAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTogdGFibGUtcm93LWdyb3VwIj4gCiAgICAgICAgPHNwYW4gc3R5bGU9ImRpc3BsYXk6IHRhYmxlLXJvdyI+CiAgICAgICAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTogdGFibGUtY2VsbCI+Um93IDEsIENvbCAxPC9zcGFuPgogICAgICAgICAgPHNwYW4gc3R5bGU9ImRpc3BsYXk6IHRhYmxlLWNlbGwiPlJvdyAxLCBDb2wgMjwvc3Bhbj4KICAgICAgICAgIDxzcGFuIHN0eWxlPSJkaXNwbGF5OiB0YWJsZS1jZWxsIj5Sb3cgMSwgQ29sIDM8L3NwYW4+CiAgICAgICAgPC9zcGFuPgogICAgICAgIDxzcGFuIHN0eWxlPSJkaXNwbGF5OiB0YWJsZS1yb3ciPgogICAgICAgICAgPHNwYW4gc3R5bGU9ImRpc3BsYXk6IHRhYmxlLWNlbGwiPlJvdyAyMiwgQ29sIDE8L3NwYW4+CiAgICAgICAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTogdGFibGUtY2VsbCI+Um93IDIyLCBDb2wgMjwvc3Bhbj4KICAgICAgICAgIDxzcGFuIHN0eWxlPSJkaXNwbGF5OiB0YWJsZS1jZWxsIj5Sb3cgMjIsIENvbCAzPC9zcGFuPgogICAgICAgIDwvc3Bhbj4KICAgICAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTogdGFibGUtcm93Ij4KICAgICAgICAgIDxzcGFuIHN0eWxlPSJkaXNwbGF5OiB0YWJsZS1jZWxsIj5Sb3cgMzMzLCBDb2wgMTwvc3Bhbj4KICAgICAgICAgIDxzcGFuIHN0eWxlPSJkaXNwbGF5OiBibG9jayI+Um93IDMzMywgQ29sIDI8L3NwYW4+CiAgICAgICAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTogYmxvY2siIGlkPSJ0Ij5Sb3cgMzMzLCBDb2wgMzwvc3Bhbj4KICAgICAgICA8L3NwYW4+CiAgICAgIDwvc3Bhbj4KICAgIDwvc3Bhbj4KICA8L2Rpdj4KPGRpdiBzdHlsZT0icG9zaXRpb246IHJlbGF0aXZlOyB6LWluZGV4OiAxOyBjb2xvcjogcmVkOyBwYWRkaW5nOiAxcHg7Ij4KCiAgICA8dGFibGUgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIiBzdHlsZT0ibWFyZ2luOiAwOyBwYWRkaW5nOiAwOyBib3JkZXI6IG5vbmUiPgogICAgICA8dHI+CiAgICAgICAgPHRkPlJvdyAxLCBDb2wgMTwvdGQ+CiAgICAgICAgPHRkPlJvdyAxLCBDb2wgMjwvdGQ+CiAgICAgICAgPHRkPlJvdyAxLCBDb2wgMzwvdGQ+CiAgICAgIDwvdHI+CiAgICAgIDx0cj4KICAgICAgICA8dGQ+Um93IDIyLCBDb2wgMTwvdGQ+CiAgICAgICAgPHRkPlJvdyAyMiwgQ29sIDI8L3RkPgogICAgICAgIDx0ZD5Sb3cgMjIsIENvbCAzPC90ZD4KICAgICAgPC90cj4KICAgICAgPHRyPgogICAgICAgIDx0ZD5Sb3cgMzMzLCBDb2wgMTwvdGQ+CiAgICAgICAgPHRkPlJvdyAzMzMsIENvbCAyPC90ZD4KICAgICAgICA8dGQ+Um93IDMzMywgQ29sIDM8L3RkPgogICAgICA8L3RyPgogICAgPC90YWJsZT4KICA8L2Rpdj4KPC9kaXY+CjwvYm9keT4KPC9odG1sPg==",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgo8aGVhZD4KICA8dGl0bGU+Q1NTIFRlc3Q6IEF1dG8taW1wb3J0ZWQgZnJvbSBHZWNrbyB0ZXN0IGR5bmFtaWMtc3dpdGNoLWlubGluZS10by1jZWxsLTEuaHRtbDwvdGl0bGU+CiAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJCb3JpcyBaYmFyc2t5IiBocmVmPSJtYWlsdG86YnpiYXJza3lAbWl0LmVkdSI+CiAgPGxpbmsgcmVsPSJoZWxwIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCNhbm9ueW1vdXMtYm94ZXMiPgogIDxtZXRhIG5hbWU9ImZsYWdzIiBjb250ZW50PSJkb20iPgoKICAgIDxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgICAgZnVuY3Rpb24gZG9UZXN0KCkgewogICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJ0Iikuc3R5bGUuZGlzcGxheSA9ICJ0YWJsZS1jZWxsIjsKICAgICAgICBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xhc3NOYW1lID0gIiI7CiAgICAgIH0KICAgIDwvc2NyaXB0PgogIDwvaGVhZD4KPGJvZHkgc3R5bGU9ImZvbnQtZmFtaWx5OiBtb25vc3BhY2UiIG9ubG9hZD0iZG9UZXN0KCkiPgo8cD5UaGVyZSBzaG91bGQgYmUgbm8gcmVkIGJlbG93LCBleGNlcHQgZm9yIGFudGlhbGlhc2luZyBpc3N1ZXMuPC9wPgo8ZGl2IHN0eWxlPSJwb3NpdGlvbjogcmVsYXRpdmU7IGZvbnQtc2l6ZTogMmVtOyI+CjxkaXYgc3R5bGU9InBvc2l0aW9uOiByZWxhdGl2ZTsgei1pbmRleDogMTsgY29sb3I6IHJlZDsgcGFkZGluZzogMXB4OyI+CgogICAgPHNwYW4gc3R5bGU9ImRpc3BsYXk6dGFibGUiPgogICAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTogdGFibGUtcm93Ij4KICAgICAgICA8c3BhbiBpZD0idCI+Um93IDEsIENvbCAxPC9zcGFuPgogICAgICAgIDxzcGFuPlJvdyAxLCBDb2wgMjwvc3Bhbj4KICAgICAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTogdGFibGUtY2VsbCI+Um93IDEsIENvbCAzPC9zcGFuPgogICAgICA8L3NwYW4+CiAgICAgIDxzcGFuIHN0eWxlPSJkaXNwbGF5OiB0YWJsZS1yb3ctZ3JvdXAiPiAKICAgICAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTogdGFibGUtcm93Ij4KICAgICAgICAgIDxzcGFuIHN0eWxlPSJkaXNwbGF5OiB0YWJsZS1jZWxsIj5Sb3cgMjIsIENvbCAxPC9zcGFuPgogICAgICAgICAgPHNwYW4gc3R5bGU9ImRpc3BsYXk6IHRhYmxlLWNlbGwiPlJvdyAyMiwgQ29sIDI8L3NwYW4+CiAgICAgICAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTogdGFibGUtY2VsbCI+Um93IDIyLCBDb2wgMzwvc3Bhbj4KICAgICAgICA8L3NwYW4+CiAgICAgICAgPHNwYW4gc3R5bGU9ImRpc3BsYXk6IHRhYmxlLXJvdyI+CiAgICAgICAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTogdGFibGUtY2VsbCI+Um93IDMzMywgQ29sIDE8L3NwYW4+CiAgICAgICAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTogdGFibGUtY2VsbCI+Um93IDMzMywgQ29sIDI8L3NwYW4+CiAgICAgICAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTogdGFibGUtY2VsbCI+Um93IDMzMywgQ29sIDM8L3NwYW4+CiAgICAgICAgPC9zcGFuPgogICAgICA8L3NwYW4+CiAgICA8L3NwYW4+CiAgPC9kaXY+CjxkaXYgc3R5bGU9InBvc2l0aW9uOiBhYnNvbHV0ZTsgei1pbmRleDogMjsgdG9wOiAwOyBjb2xvcjogZ3JlZW47IHBhZGRpbmc6IDFweDsiPgoKICAgIDx0YWJsZSBjZWxscGFkZGluZz0iMCIgY2VsbHNwYWNpbmc9IjAiIHN0eWxlPSJtYXJnaW46IDA7IHBhZGRpbmc6IDA7IGJvcmRlcjogbm9uZSI+CiAgICAgIDx0cj4KICAgICAgICA8dGQ+Um93IDEsIENvbCAxPC90ZD4KICAgICAgICA8dGQ+Um93IDEsIENvbCAyPC90ZD4KICAgICAgICA8dGQ+Um93IDEsIENvbCAzPC90ZD4KICAgICAgPC90cj4KICAgICAgPHRyPgogICAgICAgIDx0ZD5Sb3cgMjIsIENvbCAxPC90ZD4KICAgICAgICA8dGQ+Um93IDIyLCBDb2wgMjwvdGQ+CiAgICAgICAgPHRkPlJvdyAyMiwgQ29sIDM8L3RkPgogICAgICA8L3RyPgogICAgICA8dHI+CiAgICAgICAgPHRkPlJvdyAzMzMsIENvbCAxPC90ZD4KICAgICAgICA8dGQ+Um93IDMzMywgQ29sIDI8L3RkPgogICAgICAgIDx0ZD5Sb3cgMzMzLCBDb2wgMzwvdGQ+CiAgICAgIDwvdHI+CiAgICA8L3RhYmxlPgogIDwvZGl2Pgo8L2Rpdj4KPC9ib2R5Pgo8L2h0bWw+",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgo8aGVhZD4KICA8dGl0bGU+Q1NTIFRlc3Q6IEF1dG8taW1wb3J0ZWQgZnJvbSBHZWNrbyB0ZXN0IGR5bmFtaWMtc3dpdGNoLWlubGluZS10by1jZWxsLTEuaHRtbDwvdGl0bGU+CiAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJCb3JpcyBaYmFyc2t5IiBocmVmPSJtYWlsdG86YnpiYXJza3lAbWl0LmVkdSI+CiAgPGxpbmsgcmVsPSJoZWxwIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCNhbm9ueW1vdXMtYm94ZXMiPgogIDxtZXRhIG5hbWU9ImZsYWdzIiBjb250ZW50PSJkb20iPgoKICAgIDxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgICAgZnVuY3Rpb24gZG9UZXN0KCkgewogICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJ0Iikuc3R5bGUuZGlzcGxheSA9ICJ0YWJsZS1jZWxsIjsKICAgICAgICBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xhc3NOYW1lID0gIiI7CiAgICAgIH0KICAgIDwvc2NyaXB0PgogIDwvaGVhZD4KPGJvZHkgc3R5bGU9ImZvbnQtZmFtaWx5OiBtb25vc3BhY2UiIG9ubG9hZD0iZG9UZXN0KCkiPgo8cD5UaGVyZSBzaG91bGQgYmUgbm8gcmVkIGJlbG93LCBleGNlcHQgZm9yIGFudGlhbGlhc2luZyBpc3N1ZXMuPC9wPgo8ZGl2IHN0eWxlPSJwb3NpdGlvbjogcmVsYXRpdmU7IGZvbnQtc2l6ZTogMmVtOyI+CjxkaXYgc3R5bGU9InBvc2l0aW9uOiBhYnNvbHV0ZTsgei1pbmRleDogMjsgdG9wOiAwOyBjb2xvcjogZ3JlZW47IHBhZGRpbmc6IDFweDsiPgoKICAgIDxzcGFuIHN0eWxlPSJkaXNwbGF5OnRhYmxlIj4KICAgICAgPHNwYW4gc3R5bGU9ImRpc3BsYXk6IHRhYmxlLXJvdyI+CiAgICAgICAgPHNwYW4gaWQ9InQiPlJvdyAxLCBDb2wgMTwvc3Bhbj4KICAgICAgICA8c3Bhbj5Sb3cgMSwgQ29sIDI8L3NwYW4+CiAgICAgICAgPHNwYW4gc3R5bGU9ImRpc3BsYXk6IHRhYmxlLWNlbGwiPlJvdyAxLCBDb2wgMzwvc3Bhbj4KICAgICAgPC9zcGFuPgogICAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTogdGFibGUtcm93LWdyb3VwIj4gCiAgICAgICAgPHNwYW4gc3R5bGU9ImRpc3BsYXk6IHRhYmxlLXJvdyI+CiAgICAgICAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTogdGFibGUtY2VsbCI+Um93IDIyLCBDb2wgMTwvc3Bhbj4KICAgICAgICAgIDxzcGFuIHN0eWxlPSJkaXNwbGF5OiB0YWJsZS1jZWxsIj5Sb3cgMjIsIENvbCAyPC9zcGFuPgogICAgICAgICAgPHNwYW4gc3R5bGU9ImRpc3BsYXk6IHRhYmxlLWNlbGwiPlJvdyAyMiwgQ29sIDM8L3NwYW4+CiAgICAgICAgPC9zcGFuPgogICAgICAgIDxzcGFuIHN0eWxlPSJkaXNwbGF5OiB0YWJsZS1yb3ciPgogICAgICAgICAgPHNwYW4gc3R5bGU9ImRpc3BsYXk6IHRhYmxlLWNlbGwiPlJvdyAzMzMsIENvbCAxPC9zcGFuPgogICAgICAgICAgPHNwYW4gc3R5bGU9ImRpc3BsYXk6IHRhYmxlLWNlbGwiPlJvdyAzMzMsIENvbCAyPC9zcGFuPgogICAgICAgICAgPHNwYW4gc3R5bGU9ImRpc3BsYXk6IHRhYmxlLWNlbGwiPlJvdyAzMzMsIENvbCAzPC9zcGFuPgogICAgICAgIDwvc3Bhbj4KICAgICAgPC9zcGFuPgogICAgPC9zcGFuPgogIDwvZGl2Pgo8ZGl2IHN0eWxlPSJwb3NpdGlvbjogcmVsYXRpdmU7IHotaW5kZXg6IDE7IGNvbG9yOiByZWQ7IHBhZGRpbmc6IDFweDsiPgoKICAgIDx0YWJsZSBjZWxscGFkZGluZz0iMCIgY2VsbHNwYWNpbmc9IjAiIHN0eWxlPSJtYXJnaW46IDA7IHBhZGRpbmc6IDA7IGJvcmRlcjogbm9uZSI+CiAgICAgIDx0cj4KICAgICAgICA8dGQ+Um93IDEsIENvbCAxPC90ZD4KICAgICAgICA8dGQ+Um93IDEsIENvbCAyPC90ZD4KICAgICAgICA8dGQ+Um93IDEsIENvbCAzPC90ZD4KICAgICAgPC90cj4KICAgICAgPHRyPgogICAgICAgIDx0ZD5Sb3cgMjIsIENvbCAxPC90ZD4KICAgICAgICA8dGQ+Um93IDIyLCBDb2wgMjwvdGQ+CiAgICAgICAgPHRkPlJvdyAyMiwgQ29sIDM8L3RkPgogICAgICA8L3RyPgogICAgICA8dHI+CiAgICAgICAgPHRkPlJvdyAzMzMsIENvbCAxPC90ZD4KICAgICAgICA8dGQ+Um93IDMzMywgQ29sIDI8L3RkPgogICAgICAgIDx0ZD5Sb3cgMzMzLCBDb2wgMzwvdGQ+CiAgICAgIDwvdHI+CiAgICA8L3RhYmxlPgogIDwvZGl2Pgo8L2Rpdj4KPC9ib2R5Pgo8L2h0bWw+",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgo8aGVhZD4KICA8dGl0bGU+Q1NTIFRlc3Q6IEF1dG8taW1wb3J0ZWQgZnJvbSBHZWNrbyB0ZXN0IGR5bmFtaWMtc3dpdGNoLWlubGluZS10by1jZWxsLTIuaHRtbDwvdGl0bGU+CiAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJCb3JpcyBaYmFyc2t5IiBocmVmPSJtYWlsdG86YnpiYXJza3lAbWl0LmVkdSI+CiAgPGxpbmsgcmVsPSJoZWxwIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCNhbm9ueW1vdXMtYm94ZXMiPgogIDxtZXRhIG5hbWU9ImZsYWdzIiBjb250ZW50PSJkb20iPgoKICAgIDxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgICAgZnVuY3Rpb24gZG9UZXN0KCkgewogICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJ0Iikuc3R5bGUuZGlzcGxheSA9ICJ0YWJsZS1jZWxsIjsKICAgICAgICBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xhc3NOYW1lID0gIiI7CiAgICAgIH0KICAgIDwvc2NyaXB0PgogIDwvaGVhZD4KPGJvZHkgc3R5bGU9ImZvbnQtZmFtaWx5OiBtb25vc3BhY2UiIG9ubG9hZD0iZG9UZXN0KCkiPgo8cD5UaGVyZSBzaG91bGQgYmUgbm8gcmVkIGJlbG93LCBleGNlcHQgZm9yIGFudGlhbGlhc2luZyBpc3N1ZXMuPC9wPgo8ZGl2IHN0eWxlPSJwb3NpdGlvbjogcmVsYXRpdmU7IGZvbnQtc2l6ZTogMmVtOyI+CjxkaXYgc3R5bGU9InBvc2l0aW9uOiByZWxhdGl2ZTsgei1pbmRleDogMTsgY29sb3I6IHJlZDsgcGFkZGluZzogMXB4OyI+CgogICAgPHNwYW4gc3R5bGU9ImRpc3BsYXk6dGFibGUiPgogICAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTogdGFibGUtcm93Ij4KICAgICAgICA8c3Bhbj5Sb3cgMSwgQ29sIDE8L3NwYW4+CiAgICAgICAgPHNwYW4gaWQ9InQiPlJvdyAxLCBDb2wgMjwvc3Bhbj4KICAgICAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTogdGFibGUtY2VsbCI+Um93IDEsIENvbCAzPC9zcGFuPgogICAgICA8L3NwYW4+CiAgICAgIDxzcGFuIHN0eWxlPSJkaXNwbGF5OiB0YWJsZS1yb3ctZ3JvdXAiPiAKICAgICAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTogdGFibGUtcm93Ij4KICAgICAgICAgIDxzcGFuIHN0eWxlPSJkaXNwbGF5OiB0YWJsZS1jZWxsIj5Sb3cgMjIsIENvbCAxPC9zcGFuPgogICAgICAgICAgPHNwYW4gc3R5bGU9ImRpc3BsYXk6IHRhYmxlLWNlbGwiPlJvdyAyMiwgQ29sIDI8L3NwYW4+CiAgICAgICAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTogdGFibGUtY2VsbCI+Um93IDIyLCBDb2wgMzwvc3Bhbj4KICAgICAgICA8L3NwYW4+CiAgICAgICAgPHNwYW4gc3R5bGU9ImRpc3BsYXk6IHRhYmxlLXJvdyI+CiAgICAgICAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTogdGFibGUtY2VsbCI+Um93IDMzMywgQ29sIDE8L3NwYW4+CiAgICAgICAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTogdGFibGUtY2VsbCI+Um93IDMzMywgQ29sIDI8L3NwYW4+CiAgICAgICAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTogdGFibGUtY2VsbCI+Um93IDMzMywgQ29sIDM8L3NwYW4+CiAgICAgICAgPC9zcGFuPgogICAgICA8L3NwYW4+CiAgICA8L3NwYW4+CiAgPC9kaXY+CjxkaXYgc3R5bGU9InBvc2l0aW9uOiBhYnNvbHV0ZTsgei1pbmRleDogMjsgdG9wOiAwOyBjb2xvcjogZ3JlZW47IHBhZGRpbmc6IDFweDsiPgoKICAgIDx0YWJsZSBjZWxscGFkZGluZz0iMCIgY2VsbHNwYWNpbmc9IjAiIHN0eWxlPSJtYXJnaW46IDA7IHBhZGRpbmc6IDA7IGJvcmRlcjogbm9uZSI+CiAgICAgIDx0cj4KICAgICAgICA8dGQ+Um93IDEsIENvbCAxPC90ZD4KICAgICAgICA8dGQ+Um93IDEsIENvbCAyPC90ZD4KICAgICAgICA8dGQ+Um93IDEsIENvbCAzPC90ZD4KICAgICAgPC90cj4KICAgICAgPHRyPgogICAgICAgIDx0ZD5Sb3cgMjIsIENvbCAxPC90ZD4KICAgICAgICA8dGQ+Um93IDIyLCBDb2wgMjwvdGQ+CiAgICAgICAgPHRkPlJvdyAyMiwgQ29sIDM8L3RkPgogICAgICA8L3RyPgogICAgICA8dHI+CiAgICAgICAgPHRkPlJvdyAzMzMsIENvbCAxPC90ZD4KICAgICAgICA8dGQ+Um93IDMzMywgQ29sIDI8L3RkPgogICAgICAgIDx0ZD5Sb3cgMzMzLCBDb2wgMzwvdGQ+CiAgICAgIDwvdHI+CiAgICA8L3RhYmxlPgogIDwvZGl2Pgo8L2Rpdj4KPC9ib2R5Pgo8L2h0bWw+",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgo8aGVhZD4KICA8dGl0bGU+Q1NTIFRlc3Q6IEF1dG8taW1wb3J0ZWQgZnJvbSBHZWNrbyB0ZXN0IGR5bmFtaWMtc3dpdGNoLWlubGluZS10by1jZWxsLTIuaHRtbDwvdGl0bGU+CiAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJCb3JpcyBaYmFyc2t5IiBocmVmPSJtYWlsdG86YnpiYXJza3lAbWl0LmVkdSI+CiAgPGxpbmsgcmVsPSJoZWxwIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCNhbm9ueW1vdXMtYm94ZXMiPgogIDxtZXRhIG5hbWU9ImZsYWdzIiBjb250ZW50PSJkb20iPgoKICAgIDxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgICAgZnVuY3Rpb24gZG9UZXN0KCkgewogICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJ0Iikuc3R5bGUuZGlzcGxheSA9ICJ0YWJsZS1jZWxsIjsKICAgICAgICBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xhc3NOYW1lID0gIiI7CiAgICAgIH0KICAgIDwvc2NyaXB0PgogIDwvaGVhZD4KPGJvZHkgc3R5bGU9ImZvbnQtZmFtaWx5OiBtb25vc3BhY2UiIG9ubG9hZD0iZG9UZXN0KCkiPgo8cD5UaGVyZSBzaG91bGQgYmUgbm8gcmVkIGJlbG93LCBleGNlcHQgZm9yIGFudGlhbGlhc2luZyBpc3N1ZXMuPC9wPgo8ZGl2IHN0eWxlPSJwb3NpdGlvbjogcmVsYXRpdmU7IGZvbnQtc2l6ZTogMmVtOyI+CjxkaXYgc3R5bGU9InBvc2l0aW9uOiBhYnNvbHV0ZTsgei1pbmRleDogMjsgdG9wOiAwOyBjb2xvcjogZ3JlZW47IHBhZGRpbmc6IDFweDsiPgoKICAgIDxzcGFuIHN0eWxlPSJkaXNwbGF5OnRhYmxlIj4KICAgICAgPHNwYW4gc3R5bGU9ImRpc3BsYXk6IHRhYmxlLXJvdyI+CiAgICAgICAgPHNwYW4+Um93IDEsIENvbCAxPC9zcGFuPgogICAgICAgIDxzcGFuIGlkPSJ0Ij5Sb3cgMSwgQ29sIDI8L3NwYW4+CiAgICAgICAgPHNwYW4gc3R5bGU9ImRpc3BsYXk6IHRhYmxlLWNlbGwiPlJvdyAxLCBDb2wgMzwvc3Bhbj4KICAgICAgPC9zcGFuPgogICAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTogdGFibGUtcm93LWdyb3VwIj4gCiAgICAgICAgPHNwYW4gc3R5bGU9ImRpc3BsYXk6IHRhYmxlLXJvdyI+CiAgICAgICAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTogdGFibGUtY2VsbCI+Um93IDIyLCBDb2wgMTwvc3Bhbj4KICAgICAgICAgIDxzcGFuIHN0eWxlPSJkaXNwbGF5OiB0YWJsZS1jZWxsIj5Sb3cgMjIsIENvbCAyPC9zcGFuPgogICAgICAgICAgPHNwYW4gc3R5bGU9ImRpc3BsYXk6IHRhYmxlLWNlbGwiPlJvdyAyMiwgQ29sIDM8L3NwYW4+CiAgICAgICAgPC9zcGFuPgogICAgICAgIDxzcGFuIHN0eWxlPSJkaXNwbGF5OiB0YWJsZS1yb3ciPgogICAgICAgICAgPHNwYW4gc3R5bGU9ImRpc3BsYXk6IHRhYmxlLWNlbGwiPlJvdyAzMzMsIENvbCAxPC9zcGFuPgogICAgICAgICAgPHNwYW4gc3R5bGU9ImRpc3BsYXk6IHRhYmxlLWNlbGwiPlJvdyAzMzMsIENvbCAyPC9zcGFuPgogICAgICAgICAgPHNwYW4gc3R5bGU9ImRpc3BsYXk6IHRhYmxlLWNlbGwiPlJvdyAzMzMsIENvbCAzPC9zcGFuPgogICAgICAgIDwvc3Bhbj4KICAgICAgPC9zcGFuPgogICAgPC9zcGFuPgogIDwvZGl2Pgo8ZGl2IHN0eWxlPSJwb3NpdGlvbjogcmVsYXRpdmU7IHotaW5kZXg6IDE7IGNvbG9yOiByZWQ7IHBhZGRpbmc6IDFweDsiPgoKICAgIDx0YWJsZSBjZWxscGFkZGluZz0iMCIgY2VsbHNwYWNpbmc9IjAiIHN0eWxlPSJtYXJnaW46IDA7IHBhZGRpbmc6IDA7IGJvcmRlcjogbm9uZSI+CiAgICAgIDx0cj4KICAgICAgICA8dGQ+Um93IDEsIENvbCAxPC90ZD4KICAgICAgICA8dGQ+Um93IDEsIENvbCAyPC90ZD4KICAgICAgICA8dGQ+Um93IDEsIENvbCAzPC90ZD4KICAgICAgPC90cj4KICAgICAgPHRyPgogICAgICAgIDx0ZD5Sb3cgMjIsIENvbCAxPC90ZD4KICAgICAgICA8dGQ+Um93IDIyLCBDb2wgMjwvdGQ+CiAgICAgICAgPHRkPlJvdyAyMiwgQ29sIDM8L3RkPgogICAgICA8L3RyPgogICAgICA8dHI+CiAgICAgICAgPHRkPlJvdyAzMzMsIENvbCAxPC90ZD4KICAgICAgICA8dGQ+Um93IDMzMywgQ29sIDI8L3RkPgogICAgICAgIDx0ZD5Sb3cgMzMzLCBDb2wgMzwvdGQ+CiAgICAgIDwvdHI+CiAgICA8L3RhYmxlPgogIDwvZGl2Pgo8L2Rpdj4KPC9ib2R5Pgo8L2h0bWw+",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgo8aGVhZD4KICA8dGl0bGU+Q1NTIFRlc3Q6IEF1dG8taW1wb3J0ZWQgZnJvbSBHZWNrbyB0ZXN0IGR5bmFtaWMtc3dpdGNoLWlubGluZS10by1jZWxsLTMuaHRtbDwvdGl0bGU+CiAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJCb3JpcyBaYmFyc2t5IiBocmVmPSJtYWlsdG86YnpiYXJza3lAbWl0LmVkdSI+CiAgPGxpbmsgcmVsPSJoZWxwIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCNhbm9ueW1vdXMtYm94ZXMiPgogIDxtZXRhIG5hbWU9ImZsYWdzIiBjb250ZW50PSJkb20iPgoKICAgIDxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgICAgZnVuY3Rpb24gZG9UZXN0KCkgewogICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJ0Iikuc3R5bGUuZGlzcGxheSA9ICJ0YWJsZS1jZWxsIjsKICAgICAgICBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xhc3NOYW1lID0gIiI7CiAgICAgIH0KICAgIDwvc2NyaXB0PgogIDwvaGVhZD4KPGJvZHkgc3R5bGU9ImZvbnQtZmFtaWx5OiBtb25vc3BhY2UiIG9ubG9hZD0iZG9UZXN0KCkiPgo8cD5UaGVyZSBzaG91bGQgYmUgbm8gcmVkIGJlbG93LCBleGNlcHQgZm9yIGFudGlhbGlhc2luZyBpc3N1ZXMuPC9wPgo8ZGl2IHN0eWxlPSJwb3NpdGlvbjogcmVsYXRpdmU7IGZvbnQtc2l6ZTogMmVtOyI+CjxkaXYgc3R5bGU9InBvc2l0aW9uOiByZWxhdGl2ZTsgei1pbmRleDogMTsgY29sb3I6IHJlZDsgcGFkZGluZzogMXB4OyI+CgogICAgPHNwYW4gc3R5bGU9ImRpc3BsYXk6dGFibGUiPgogICAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTogdGFibGUtcm93Ij4KICAgICAgICA8c3Bhbj5Sb3cgMSwgQ29sIDE8L3NwYW4+CiAgICAgICAgPHNwYW4gaWQ9InQiPlJvdyAxLCBDb2wgMjwvc3Bhbj4KICAgICAgICA8c3Bhbj5Sb3cgMSwgQ29sIDM8L3NwYW4+CiAgICAgIDwvc3Bhbj4KICAgICAgPHNwYW4gc3R5bGU9ImRpc3BsYXk6IHRhYmxlLXJvdy1ncm91cCI+IAogICAgICAgIDxzcGFuIHN0eWxlPSJkaXNwbGF5OiB0YWJsZS1yb3ciPgogICAgICAgICAgPHNwYW4gc3R5bGU9ImRpc3BsYXk6IHRhYmxlLWNlbGwiPlJvdyAyMiwgQ29sIDE8L3NwYW4+CiAgICAgICAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTogdGFibGUtY2VsbCI+Um93IDIyLCBDb2wgMjwvc3Bhbj4KICAgICAgICAgIDxzcGFuIHN0eWxlPSJkaXNwbGF5OiB0YWJsZS1jZWxsIj5Sb3cgMjIsIENvbCAzPC9zcGFuPgogICAgICAgIDwvc3Bhbj4KICAgICAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTogdGFibGUtcm93Ij4KICAgICAgICAgIDxzcGFuIHN0eWxlPSJkaXNwbGF5OiB0YWJsZS1jZWxsIj5Sb3cgMzMzLCBDb2wgMTwvc3Bhbj4KICAgICAgICAgIDxzcGFuIHN0eWxlPSJkaXNwbGF5OiB0YWJsZS1jZWxsIj5Sb3cgMzMzLCBDb2wgMjwvc3Bhbj4KICAgICAgICAgIDxzcGFuIHN0eWxlPSJkaXNwbGF5OiB0YWJsZS1jZWxsIj5Sb3cgMzMzLCBDb2wgMzwvc3Bhbj4KICAgICAgICA8L3NwYW4+CiAgICAgIDwvc3Bhbj4KICAgIDwvc3Bhbj4KICA8L2Rpdj4KPGRpdiBzdHlsZT0icG9zaXRpb246IGFic29sdXRlOyB6LWluZGV4OiAyOyB0b3A6IDA7IGNvbG9yOiBncmVlbjsgcGFkZGluZzogMXB4OyI+CgogICAgPHRhYmxlIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCIgc3R5bGU9Im1hcmdpbjogMDsgcGFkZGluZzogMDsgYm9yZGVyOiBub25lIj4KICAgICAgPHRyPgogICAgICAgIDx0ZD5Sb3cgMSwgQ29sIDE8L3RkPgogICAgICAgIDx0ZD5Sb3cgMSwgQ29sIDI8L3RkPgogICAgICAgIDx0ZD5Sb3cgMSwgQ29sIDM8L3RkPgogICAgICA8L3RyPgogICAgICA8dHI+CiAgICAgICAgPHRkPlJvdyAyMiwgQ29sIDE8L3RkPgogICAgICAgIDx0ZD5Sb3cgMjIsIENvbCAyPC90ZD4KICAgICAgICA8dGQ+Um93IDIyLCBDb2wgMzwvdGQ+CiAgICAgIDwvdHI+CiAgICAgIDx0cj4KICAgICAgICA8dGQ+Um93IDMzMywgQ29sIDE8L3RkPgogICAgICAgIDx0ZD5Sb3cgMzMzLCBDb2wgMjwvdGQ+CiAgICAgICAgPHRkPlJvdyAzMzMsIENvbCAzPC90ZD4KICAgICAgPC90cj4KICAgIDwvdGFibGU+CiAgPC9kaXY+CjwvZGl2Pgo8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgo8aGVhZD4KICA8dGl0bGU+Q1NTIFRlc3Q6IEF1dG8taW1wb3J0ZWQgZnJvbSBHZWNrbyB0ZXN0IGR5bmFtaWMtc3dpdGNoLWlubGluZS10by1jZWxsLTMuaHRtbDwvdGl0bGU+CiAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJCb3JpcyBaYmFyc2t5IiBocmVmPSJtYWlsdG86YnpiYXJza3lAbWl0LmVkdSI+CiAgPGxpbmsgcmVsPSJoZWxwIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCNhbm9ueW1vdXMtYm94ZXMiPgogIDxtZXRhIG5hbWU9ImZsYWdzIiBjb250ZW50PSJkb20iPgoKICAgIDxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgICAgZnVuY3Rpb24gZG9UZXN0KCkgewogICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJ0Iikuc3R5bGUuZGlzcGxheSA9ICJ0YWJsZS1jZWxsIjsKICAgICAgICBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xhc3NOYW1lID0gIiI7CiAgICAgIH0KICAgIDwvc2NyaXB0PgogIDwvaGVhZD4KPGJvZHkgc3R5bGU9ImZvbnQtZmFtaWx5OiBtb25vc3BhY2UiIG9ubG9hZD0iZG9UZXN0KCkiPgo8cD5UaGVyZSBzaG91bGQgYmUgbm8gcmVkIGJlbG93LCBleGNlcHQgZm9yIGFudGlhbGlhc2luZyBpc3N1ZXMuPC9wPgo8ZGl2IHN0eWxlPSJwb3NpdGlvbjogcmVsYXRpdmU7IGZvbnQtc2l6ZTogMmVtOyI+CjxkaXYgc3R5bGU9InBvc2l0aW9uOiBhYnNvbHV0ZTsgei1pbmRleDogMjsgdG9wOiAwOyBjb2xvcjogZ3JlZW47IHBhZGRpbmc6IDFweDsiPgoKICAgIDxzcGFuIHN0eWxlPSJkaXNwbGF5OnRhYmxlIj4KICAgICAgPHNwYW4gc3R5bGU9ImRpc3BsYXk6IHRhYmxlLXJvdyI+CiAgICAgICAgPHNwYW4+Um93IDEsIENvbCAxPC9zcGFuPgogICAgICAgIDxzcGFuIGlkPSJ0Ij5Sb3cgMSwgQ29sIDI8L3NwYW4+CiAgICAgICAgPHNwYW4+Um93IDEsIENvbCAzPC9zcGFuPgogICAgICA8L3NwYW4+CiAgICAgIDxzcGFuIHN0eWxlPSJkaXNwbGF5OiB0YWJsZS1yb3ctZ3JvdXAiPiAKICAgICAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTogdGFibGUtcm93Ij4KICAgICAgICAgIDxzcGFuIHN0eWxlPSJkaXNwbGF5OiB0YWJsZS1jZWxsIj5Sb3cgMjIsIENvbCAxPC9zcGFuPgogICAgICAgICAgPHNwYW4gc3R5bGU9ImRpc3BsYXk6IHRhYmxlLWNlbGwiPlJvdyAyMiwgQ29sIDI8L3NwYW4+CiAgICAgICAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTogdGFibGUtY2VsbCI+Um93IDIyLCBDb2wgMzwvc3Bhbj4KICAgICAgICA8L3NwYW4+CiAgICAgICAgPHNwYW4gc3R5bGU9ImRpc3BsYXk6IHRhYmxlLXJvdyI+CiAgICAgICAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTogdGFibGUtY2VsbCI+Um93IDMzMywgQ29sIDE8L3NwYW4+CiAgICAgICAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTogdGFibGUtY2VsbCI+Um93IDMzMywgQ29sIDI8L3NwYW4+CiAgICAgICAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTogdGFibGUtY2VsbCI+Um93IDMzMywgQ29sIDM8L3NwYW4+CiAgICAgICAgPC9zcGFuPgogICAgICA8L3NwYW4+CiAgICA8L3NwYW4+CiAgPC9kaXY+CjxkaXYgc3R5bGU9InBvc2l0aW9uOiByZWxhdGl2ZTsgei1pbmRleDogMTsgY29sb3I6IHJlZDsgcGFkZGluZzogMXB4OyI+CgogICAgPHRhYmxlIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCIgc3R5bGU9Im1hcmdpbjogMDsgcGFkZGluZzogMDsgYm9yZGVyOiBub25lIj4KICAgICAgPHRyPgogICAgICAgIDx0ZD5Sb3cgMSwgQ29sIDE8L3RkPgogICAgICAgIDx0ZD5Sb3cgMSwgQ29sIDI8L3RkPgogICAgICAgIDx0ZD5Sb3cgMSwgQ29sIDM8L3RkPgogICAgICA8L3RyPgogICAgICA8dHI+CiAgICAgICAgPHRkPlJvdyAyMiwgQ29sIDE8L3RkPgogICAgICAgIDx0ZD5Sb3cgMjIsIENvbCAyPC90ZD4KICAgICAgICA8dGQ+Um93IDIyLCBDb2wgMzwvdGQ+CiAgICAgIDwvdHI+CiAgICAgIDx0cj4KICAgICAgICA8dGQ+Um93IDMzMywgQ29sIDE8L3RkPgogICAgICAgIDx0ZD5Sb3cgMzMzLCBDb2wgMjwvdGQ+CiAgICAgICAgPHRkPlJvdyAzMzMsIENvbCAzPC90ZD4KICAgICAgPC90cj4KICAgIDwvdGFibGU+CiAgPC9kaXY+CjwvZGl2Pgo8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgo8aGVhZD4KICA8dGl0bGU+Q1NTIFRlc3Q6IEF1dG8taW1wb3J0ZWQgZnJvbSBHZWNrbyB0ZXN0IGR5bmFtaWMtc3dpdGNoLWlubGluZS10by1jZWxsLTQuaHRtbDwvdGl0bGU+CiAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJCb3JpcyBaYmFyc2t5IiBocmVmPSJtYWlsdG86YnpiYXJza3lAbWl0LmVkdSI+CiAgPGxpbmsgcmVsPSJoZWxwIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCNhbm9ueW1vdXMtYm94ZXMiPgogIDxtZXRhIG5hbWU9ImZsYWdzIiBjb250ZW50PSJkb20iPgoKICAgIDxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgICAgZnVuY3Rpb24gZG9UZXN0KCkgewogICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJ0Iikuc3R5bGUuZGlzcGxheSA9ICJ0YWJsZS1jZWxsIjsKICAgICAgICBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xhc3NOYW1lID0gIiI7CiAgICAgIH0KICAgIDwvc2NyaXB0PgogIDwvaGVhZD4KPGJvZHkgc3R5bGU9ImZvbnQtZmFtaWx5OiBtb25vc3BhY2UiIG9ubG9hZD0iZG9UZXN0KCkiPgo8cD5UaGVyZSBzaG91bGQgYmUgbm8gcmVkIGJlbG93LCBleGNlcHQgZm9yIGFudGlhbGlhc2luZyBpc3N1ZXMuPC9wPgo8ZGl2IHN0eWxlPSJwb3NpdGlvbjogcmVsYXRpdmU7IGZvbnQtc2l6ZTogMmVtOyI+CjxkaXYgc3R5bGU9InBvc2l0aW9uOiBhYnNvbHV0ZTsgei1pbmRleDogMjsgdG9wOiAwOyBjb2xvcjogZ3JlZW47IHBhZGRpbmc6IDFweDsiPgoKICAgIDxzcGFuIHN0eWxlPSJkaXNwbGF5OnRhYmxlIj4KICAgICAgPHNwYW4gc3R5bGU9ImRpc3BsYXk6IHRhYmxlLXJvdyI+CiAgICAgICAgPHNwYW4gc3R5bGU9ImRpc3BsYXk6IHRhYmxlLWNlbGwiPlJvdyAxLCBDb2wgMTwvc3Bhbj4KICAgICAgICA8c3BhbiBpZD0idCI+Um93IDEsIENvbCAyPC9zcGFuPgogICAgICAgIDxzcGFuPlJvdyAxLCBDb2wgMzwvc3Bhbj4KICAgICAgPC9zcGFuPgogICAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTogdGFibGUtcm93LWdyb3VwIj4gCiAgICAgICAgPHNwYW4gc3R5bGU9ImRpc3BsYXk6IHRhYmxlLXJvdyI+CiAgICAgICAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTogdGFibGUtY2VsbCI+Um93IDIyLCBDb2wgMTwvc3Bhbj4KICAgICAgICAgIDxzcGFuIHN0eWxlPSJkaXNwbGF5OiB0YWJsZS1jZWxsIj5Sb3cgMjIsIENvbCAyPC9zcGFuPgogICAgICAgICAgPHNwYW4gc3R5bGU9ImRpc3BsYXk6IHRhYmxlLWNlbGwiPlJvdyAyMiwgQ29sIDM8L3NwYW4+CiAgICAgICAgPC9zcGFuPgogICAgICAgIDxzcGFuIHN0eWxlPSJkaXNwbGF5OiB0YWJsZS1yb3ciPgogICAgICAgICAgPHNwYW4gc3R5bGU9ImRpc3BsYXk6IHRhYmxlLWNlbGwiPlJvdyAzMzMsIENvbCAxPC9zcGFuPgogICAgICAgICAgPHNwYW4gc3R5bGU9ImRpc3BsYXk6IHRhYmxlLWNlbGwiPlJvdyAzMzMsIENvbCAyPC9zcGFuPgogICAgICAgICAgPHNwYW4gc3R5bGU9ImRpc3BsYXk6IHRhYmxlLWNlbGwiPlJvdyAzMzMsIENvbCAzPC9zcGFuPgogICAgICAgIDwvc3Bhbj4KICAgICAgPC9zcGFuPgogICAgPC9zcGFuPgogIDwvZGl2Pgo8ZGl2IHN0eWxlPSJwb3NpdGlvbjogcmVsYXRpdmU7IHotaW5kZXg6IDE7IGNvbG9yOiByZWQ7IHBhZGRpbmc6IDFweDsiPgoKICAgIDx0YWJsZSBjZWxscGFkZGluZz0iMCIgY2VsbHNwYWNpbmc9IjAiIHN0eWxlPSJtYXJnaW46IDA7IHBhZGRpbmc6IDA7IGJvcmRlcjogbm9uZSI+CiAgICAgIDx0cj4KICAgICAgICA8dGQ+Um93IDEsIENvbCAxPC90ZD4KICAgICAgICA8dGQ+Um93IDEsIENvbCAyPC90ZD4KICAgICAgICA8dGQ+Um93IDEsIENvbCAzPC90ZD4KICAgICAgPC90cj4KICAgICAgPHRyPgogICAgICAgIDx0ZD5Sb3cgMjIsIENvbCAxPC90ZD4KICAgICAgICA8dGQ+Um93IDIyLCBDb2wgMjwvdGQ+CiAgICAgICAgPHRkPlJvdyAyMiwgQ29sIDM8L3RkPgogICAgICA8L3RyPgogICAgICA8dHI+CiAgICAgICAgPHRkPlJvdyAzMzMsIENvbCAxPC90ZD4KICAgICAgICA8dGQ+Um93IDMzMywgQ29sIDI8L3RkPgogICAgICAgIDx0ZD5Sb3cgMzMzLCBDb2wgMzwvdGQ+CiAgICAgIDwvdHI+CiAgICA8L3RhYmxlPgogIDwvZGl2Pgo8L2Rpdj4KPC9ib2R5Pgo8L2h0bWw+",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgo8aGVhZD4KICA8dGl0bGU+Q1NTIFRlc3Q6IEF1dG8taW1wb3J0ZWQgZnJvbSBHZWNrbyB0ZXN0IHdoaXRlLXNwYWNlLTEwLmh0bWw8L3RpdGxlPgogIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iQm9yaXMgWmJhcnNreSIgaHJlZj0ibWFpbHRvOmJ6YmFyc2t5QG1pdC5lZHUiPgogIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjYW5vbnltb3VzLWJveGVzIj4KICA8bWV0YSBuYW1lPSJmbGFncyIgY29udGVudD0iZG9tIj4KCiAgICA8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICAgIGZ1bmN0aW9uIGRvVGVzdCgpIHsKICAgICAgICB2YXIgdCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJ0MSIpOwogICAgICAgIHQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZCh0KTsKICAgICAgICB0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoInQyIik7CiAgICAgICAgdC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHQpOwogICAgICAgIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jbGFzc05hbWUgPSAiIjsKICAgICAgfQogICAgPC9zY3JpcHQ+CiAgPC9oZWFkPgo8Ym9keSBvbmxvYWQ9ImRvVGVzdCgpIj4KPHA+VGhlcmUgc2hvdWxkIGJlIG5vIHJlZCBiZWxvdywgZXhjZXB0IGZvciBhbnRpYWxpYXNpbmcgaXNzdWVzLjwvcD4KPGRpdiBzdHlsZT0icG9zaXRpb246IHJlbGF0aXZlOyBmb250LXNpemU6IDJlbTsiPgo8ZGl2IHN0eWxlPSJwb3NpdGlvbjogYWJzb2x1dGU7IHotaW5kZXg6IDI7IHRvcDogMDsgY29sb3I6IGdyZWVuOyBwYWRkaW5nOiAxcHg7Ij4KCiAgICA8c3Bhbj4KICAgICAgPHNwYW4+YTwvc3Bhbj48c3BhbiBzdHlsZT0iZGlzcGxheTogdGFibGUtY2VsbCIgaWQ9InQxIj5lPC9zcGFuPgogICAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTogdGFibGUtY2VsbCIgaWQ9InQyIj5mPC9zcGFuPjxzcGFuPmJjIGQ8L3NwYW4+CiAgICA8L3NwYW4+CiAgPC9kaXY+CjxkaXYgc3R5bGU9InBvc2l0aW9uOiByZWxhdGl2ZTsgei1pbmRleDogMTsgY29sb3I6IHJlZDsgcGFkZGluZzogMXB4OyI+CgogICAgYSBiYyBkCiAgPC9kaXY+CjwvZGl2Pgo8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgo8aGVhZD4KICA8dGl0bGU+Q1NTIFRlc3Q6IEF1dG8taW1wb3J0ZWQgZnJvbSBHZWNrbyB0ZXN0IHdoaXRlLXNwYWNlLTIwLmh0bWw8L3RpdGxlPgogIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iQm9yaXMgWmJhcnNreSIgaHJlZj0ibWFpbHRvOmJ6YmFyc2t5QG1pdC5lZHUiPgogIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjYW5vbnltb3VzLWJveGVzIj4KICA8bWV0YSBuYW1lPSJmbGFncyIgY29udGVudD0iZG9tIj4KCiAgICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgogICAgICAjdDpiZWZvcmUgeyBjb250ZW50OiAiYSIgfQogICAgPC9zdHlsZT4KICA8L2hlYWQ+Cjxib2R5Pgo8cD5UaGVyZSBzaG91bGQgYmUgbm8gcmVkIGJlbG93LCBleGNlcHQgZm9yIGFudGlhbGlhc2luZyBpc3N1ZXMuPC9wPgo8ZGl2IHN0eWxlPSJwb3NpdGlvbjogcmVsYXRpdmU7IGZvbnQtc2l6ZTogMmVtOyI+CjxkaXYgc3R5bGU9InBvc2l0aW9uOiBhYnNvbHV0ZTsgei1pbmRleDogMjsgdG9wOiAwOyBjb2xvcjogZ3JlZW47IHBhZGRpbmc6IDFweDsiPgoKICAgIDxzcGFuIGlkPSJ0Ij4KICAgICAgPHNwYW4gc3R5bGU9ImRpc3BsYXk6IHRhYmxlLWNlbGwiPmI8L3NwYW4+PHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPmRvY3VtZW50LmJvZHkub2Zmc2V0V2lkdGg8L3NjcmlwdD48c3BhbiBzdHlsZT0iZGlzcGxheTogdGFibGUtY2VsbCI+Yzwvc3Bhbj4KICAgICAgZAogICAgPC9zcGFuPgogIDwvZGl2Pgo8ZGl2IHN0eWxlPSJwb3NpdGlvbjogcmVsYXRpdmU7IHotaW5kZXg6IDE7IGNvbG9yOiByZWQ7IHBhZGRpbmc6IDFweDsiPgoKICAgIGEgYmMgZAogIDwvZGl2Pgo8L2Rpdj4KPC9ib2R5Pgo8L2h0bWw+",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgo8aGVhZD4KICA8dGl0bGU+Q1NTIFRlc3Q6IEF1dG8taW1wb3J0ZWQgZnJvbSBHZWNrbyB0ZXN0IHdoaXRlLXNwYWNlLTIxLmh0bWw8L3RpdGxlPgogIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iQm9yaXMgWmJhcnNreSIgaHJlZj0ibWFpbHRvOmJ6YmFyc2t5QG1pdC5lZHUiPgogIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjYW5vbnltb3VzLWJveGVzIj4KICA8bWV0YSBuYW1lPSJmbGFncyIgY29udGVudD0iZG9tIj4KCiAgICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgogICAgICAjdDpiZWZvcmUgeyBjb250ZW50OiAiYSIgfQogICAgPC9zdHlsZT4KICA8L2hlYWQ+Cjxib2R5Pgo8cD5UaGVyZSBzaG91bGQgYmUgbm8gcmVkIGJlbG93LCBleGNlcHQgZm9yIGFudGlhbGlhc2luZyBpc3N1ZXMuPC9wPgo8ZGl2IHN0eWxlPSJwb3NpdGlvbjogcmVsYXRpdmU7IGZvbnQtc2l6ZTogMmVtOyI+CjxkaXYgc3R5bGU9InBvc2l0aW9uOiByZWxhdGl2ZTsgei1pbmRleDogMTsgY29sb3I6IHJlZDsgcGFkZGluZzogMXB4OyI+CgogICAgPHNwYW4gaWQ9InQiPgogICAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTogdGFibGUtY2VsbCI+Yjwvc3Bhbj4KICAgICAgPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPmRvY3VtZW50LmJvZHkub2Zmc2V0V2lkdGg8L3NjcmlwdD4KICAgICAgPHNwYW4gc3R5bGU9ImRpc3BsYXk6IHRhYmxlLWNlbGwiPmM8L3NwYW4+CiAgICAgIGQKICAgIDwvc3Bhbj4KICA8L2Rpdj4KPGRpdiBzdHlsZT0icG9zaXRpb246IGFic29sdXRlOyB6LWluZGV4OiAyOyB0b3A6IDA7IGNvbG9yOiBncmVlbjsgcGFkZGluZzogMXB4OyI+CgogICAgYSBiYyBkCiAgPC9kaXY+CjwvZGl2Pgo8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgo8aGVhZD4KICA8dGl0bGU+Q1NTIFRlc3Q6IEF1dG8taW1wb3J0ZWQgZnJvbSBHZWNrbyB0ZXN0IHdoaXRlLXNwYWNlLTIxLmh0bWw8L3RpdGxlPgogIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iQm9yaXMgWmJhcnNreSIgaHJlZj0ibWFpbHRvOmJ6YmFyc2t5QG1pdC5lZHUiPgogIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjYW5vbnltb3VzLWJveGVzIj4KICA8bWV0YSBuYW1lPSJmbGFncyIgY29udGVudD0iZG9tIj4KCiAgICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgogICAgICAjdDpiZWZvcmUgeyBjb250ZW50OiAiYSIgfQogICAgPC9zdHlsZT4KICA8L2hlYWQ+Cjxib2R5Pgo8cD5UaGVyZSBzaG91bGQgYmUgbm8gcmVkIGJlbG93LCBleGNlcHQgZm9yIGFudGlhbGlhc2luZyBpc3N1ZXMuPC9wPgo8ZGl2IHN0eWxlPSJwb3NpdGlvbjogcmVsYXRpdmU7IGZvbnQtc2l6ZTogMmVtOyI+CjxkaXYgc3R5bGU9InBvc2l0aW9uOiBhYnNvbHV0ZTsgei1pbmRleDogMjsgdG9wOiAwOyBjb2xvcjogZ3JlZW47IHBhZGRpbmc6IDFweDsiPgoKICAgIDxzcGFuIGlkPSJ0Ij4KICAgICAgPHNwYW4gc3R5bGU9ImRpc3BsYXk6IHRhYmxlLWNlbGwiPmI8L3NwYW4+CiAgICAgIDxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij5kb2N1bWVudC5ib2R5Lm9mZnNldFdpZHRoPC9zY3JpcHQ+CiAgICAgIDxzcGFuIHN0eWxlPSJkaXNwbGF5OiB0YWJsZS1jZWxsIj5jPC9zcGFuPgogICAgICBkCiAgICA8L3NwYW4+CiAgPC9kaXY+CjxkaXYgc3R5bGU9InBvc2l0aW9uOiByZWxhdGl2ZTsgei1pbmRleDogMTsgY29sb3I6IHJlZDsgcGFkZGluZzogMXB4OyI+CgogICAgYSBiYyBkCiAgPC9kaXY+CjwvZGl2Pgo8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgo8aGVhZD4KCiAgPHRpdGxlPkNTUyBUZXN0OiBBdXRvLWltcG9ydGVkIGZyb20gR2Vja28gdGVzdCB3aGl0ZS1zcGFjZS0yMi5odG1sPC90aXRsZT4KICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9IkJvcmlzIFpiYXJza3kiIGhyZWY9Im1haWx0bzpiemJhcnNreUBtaXQuZWR1Ij4KICA8bGluayByZWw9ImhlbHAiIGhyZWY9Imh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL3RhYmxlcy5odG1sI2Fub255bW91cy1ib3hlcyI+CiAgPG1ldGEgbmFtZT0iZmxhZ3MiIGNvbnRlbnQ9IiI+CjwvaGVhZD4KPGJvZHk+CjxwPlRoZXJlIHNob3VsZCBiZSBubyByZWQgYmVsb3csIGV4Y2VwdCBmb3IgYW50aWFsaWFzaW5nIGlzc3Vlcy48L3A+CjxkaXYgc3R5bGU9InBvc2l0aW9uOiByZWxhdGl2ZTsgZm9udC1zaXplOiAyZW07Ij4KPGRpdiBzdHlsZT0icG9zaXRpb246IHJlbGF0aXZlOyB6LWluZGV4OiAxOyBjb2xvcjogcmVkOyBwYWRkaW5nOiAxcHg7Ij4KCiAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTp0YWJsZS1yb3c7IHdoaXRlLXNwYWNlOiBwcmUiPjxzcGFuIHN0eWxlPSJkaXNwbGF5OiB0YWJsZS1jZWxsIj5hPC9zcGFuPiBiYyA8c3BhbiBzdHlsZT0iZGlzcGxheTogdGFibGUtY2VsbCI+ZDwvc3Bhbj48L3NwYW4+CiAgPC9kaXY+CjxkaXYgc3R5bGU9InBvc2l0aW9uOiBhYnNvbHV0ZTsgei1pbmRleDogMjsgdG9wOiAwOyBjb2xvcjogZ3JlZW47IHBhZGRpbmc6IDFweDsiPgoKICAgIGEgYmMgZAogIDwvZGl2Pgo8L2Rpdj4KPC9ib2R5Pgo8L2h0bWw+",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgo8aGVhZD4KCiAgPHRpdGxlPkNTUyBUZXN0OiBBdXRvLWltcG9ydGVkIGZyb20gR2Vja28gdGVzdCB3aGl0ZS1zcGFjZS0yMi5odG1sPC90aXRsZT4KICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9IkJvcmlzIFpiYXJza3kiIGhyZWY9Im1haWx0bzpiemJhcnNreUBtaXQuZWR1Ij4KICA8bGluayByZWw9ImhlbHAiIGhyZWY9Imh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL3RhYmxlcy5odG1sI2Fub255bW91cy1ib3hlcyI+CiAgPG1ldGEgbmFtZT0iZmxhZ3MiIGNvbnRlbnQ9IiI+CjwvaGVhZD4KPGJvZHk+CjxwPlRoZXJlIHNob3VsZCBiZSBubyByZWQgYmVsb3csIGV4Y2VwdCBmb3IgYW50aWFsaWFzaW5nIGlzc3Vlcy48L3A+CjxkaXYgc3R5bGU9InBvc2l0aW9uOiByZWxhdGl2ZTsgZm9udC1zaXplOiAyZW07Ij4KPGRpdiBzdHlsZT0icG9zaXRpb246IGFic29sdXRlOyB6LWluZGV4OiAyOyB0b3A6IDA7IGNvbG9yOiBncmVlbjsgcGFkZGluZzogMXB4OyI+CgogICAgPHNwYW4gc3R5bGU9ImRpc3BsYXk6dGFibGUtcm93OyB3aGl0ZS1zcGFjZTogcHJlIj48c3BhbiBzdHlsZT0iZGlzcGxheTogdGFibGUtY2VsbCI+YTwvc3Bhbj4gYmMgPHNwYW4gc3R5bGU9ImRpc3BsYXk6IHRhYmxlLWNlbGwiPmQ8L3NwYW4+PC9zcGFuPgogIDwvZGl2Pgo8ZGl2IHN0eWxlPSJwb3NpdGlvbjogcmVsYXRpdmU7IHotaW5kZXg6IDE7IGNvbG9yOiByZWQ7IHBhZGRpbmc6IDFweDsiPgoKICAgIGEgYmMgZAogIDwvZGl2Pgo8L2Rpdj4KPC9ib2R5Pgo8L2h0bWw+",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgo8aGVhZD4KCiAgPHRpdGxlPkNTUyBUZXN0OiBBdXRvLWltcG9ydGVkIGZyb20gR2Vja28gdGVzdCB3aGl0ZS1zcGFjZS0yMy5odG1sPC90aXRsZT4KICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9IkJvcmlzIFpiYXJza3kiIGhyZWY9Im1haWx0bzpiemJhcnNreUBtaXQuZWR1Ij4KICA8bGluayByZWw9ImhlbHAiIGhyZWY9Imh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL3RhYmxlcy5odG1sI2Fub255bW91cy1ib3hlcyI+CiAgPG1ldGEgbmFtZT0iZmxhZ3MiIGNvbnRlbnQ9IiI+CjwvaGVhZD4KPGJvZHk+CjxwPlRoZXJlIHNob3VsZCBiZSBubyByZWQgYmVsb3csIGV4Y2VwdCBmb3IgYW50aWFsaWFzaW5nIGlzc3Vlcy48L3A+CjxkaXYgc3R5bGU9InBvc2l0aW9uOiByZWxhdGl2ZTsgZm9udC1zaXplOiAyZW07Ij4KPGRpdiBzdHlsZT0icG9zaXRpb246IHJlbGF0aXZlOyB6LWluZGV4OiAxOyBjb2xvcjogcmVkOyBwYWRkaW5nOiAxcHg7Ij4KCiAgICA8c3BhbiBzdHlsZT0iZGlzcGxheTp0YWJsZS1yb3c7IHdoaXRlLXNwYWNlOiBwcmUiPjxzcGFuIHN0eWxlPSJkaXNwbGF5OiB0YWJsZS1jZWxsIj5hPC9zcGFuPiA8c3Bhbj5iYzwvc3Bhbj4gPHNwYW4gc3R5bGU9ImRpc3BsYXk6IHRhYmxlLWNlbGwiPmQ8L3NwYW4+PC9zcGFuPgogIDwvZGl2Pgo8ZGl2IHN0eWxlPSJwb3NpdGlvbjogYWJzb2x1dGU7IHotaW5kZXg6IDI7IHRvcDogMDsgY29sb3I6IGdyZWVuOyBwYWRkaW5nOiAxcHg7Ij4KCiAgICBhIGJjIGQKICA8L2Rpdj4KPC9kaXY+CjwvYm9keT4KPC9odG1sPg==",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sIGxhbmc9ImVuLVVTIj48aGVhZD4KCTx0aXRsZT5UYWJsZSBiYWNrZ3JvdW5kIHRlc3RzPC90aXRsZT4KCTxtZXRhIGh0dHAtZXF1aXY9IkNvbnRlbnQtVHlwZSIgY29udGVudD0idGV4dC9odG1sOyBjaGFyc2V0PVVURi04Ij4KCTxtZXRhIGh0dHAtZXF1aXY9IkNvbnRlbnQtU3R5bGUtVHlwZSIgY29udGVudD0idGV4dC9jc3MiPgoJPHN0eWxlIHR5cGU9InRleHQvY3NzIj4KCglodG1sLCBib2R5IHsgbWFyZ2luOiAwOyBwYWRkaW5nOiAwOyBib3JkZXI6IDA7IGZvbnQtc2l6ZTogMTZweDsgfQoJYm9keSB7IHBhZGRpbmc6IDE1cHg7IH0KCgkvKgoJdGFibGUgeyAKCQltYXJnaW46IDBweCAzcHggMnB4IDRweDsKCQlib3JkZXItd2lkdGg6IDRweCAycHggOHB4IDZweDsKCgkJaGVpZ2h0IGlzIDk3cHg6CgkJICAoMnB4IG9mIGJvcmRlciBvdXRzaWRlIGhlaWdodCkKCQkgIGV4dHJhIGJvcmRlciB3aWR0aCBmb3IgdG9wIHJvdzogMAoJCSAgY2VsbCAqIDU6ID09IDE5cHggKiA1ID09IDk1cHgKCQkgICAgYm9yZGVyLXRvcDogMnB4OwoJCSAgICBwYWRkaW5nLXRvcDogMXB4OwoJCSAgICBoZWlnaHQ6IDEwcHg7CgkJICAgIHBhZGRpbmctYm90dG9tOiA0cHg7CgkJICAgIGJvcmRlci1ib3R0b206IDJweDsKCQkgIGV4dHJhIGJvcmRlciB3aWR0aCBmb3IgdG9wIHJvdzogMnB4CgkJICAoNHB4IG9mIGJvcmRlciBvdXRzaWRlIGhlaWdodCkKCgkJd2lkdGggaXMgMjg3cHg6CgkJICAoM3B4IG9mIGJvcmRlciBvdXRzaWRlIHdpZHRoKQoJCSAgZXh0cmEgYm9yZGVyIHdpZHRoIGZvciBsZWZ0IGNvbHVtbjogMnB4CgkJICBjZWxsICogNTogPT0gNTdweCAqIDUgPT0gMjg1cHgKCQkgICAgYm9yZGVyLWxlZnQ6IDFweDsKCQkgICAgcGFkZGluZy1sZWZ0OiAzcHg7CgkJICAgIHdpZHRoOiA1MHB4OwoJCSAgICBwYWRkaW5nLXJpZ2h0OiAycHg7CgkJICAgIGJvcmRlci1yaWdodDogMXB4OwoJCSAgKDFweCBvZiBib3JkZXIgb3V0c2lkZSB3aWR0aCkKICAgICovCgoJZGl2IHsgd2lkdGg6IDU3cHg7IGhlaWdodDogMTlweDsgbWFyZ2luOiA0MHB4IDExOHB4IDg2cHggMTIzcHg7IH0KCWRpdi5jb2xvciB7IGJhY2tncm91bmQtY29sb3I6IGFxdWE7IH0KCglkaXYuaW1hZ2V0bCwgZGl2LmltYWdlYnIgewoJCWJhY2tncm91bmQtaW1hZ2U6IHVybChzdXBwb3J0L3JlcGVhdGFibGUtZGlhZ29uYWwtZ3JhZGllbnQtd2l0aC10aWNrcy5wbmcpOwoJfQoKCWRpdi5pbWFnZXRsIHsgYmFja2dyb3VuZC1wb3NpdGlvbjogMXB4IDJweDsgfQoJZGl2LmltYWdlYnIgeyBiYWNrZ3JvdW5kLXBvc2l0aW9uOiA1NnB4IDE3cHg7IH0KCgk8L3N0eWxlPgo8L2hlYWQ+Cjxib2R5PgoKPGRpdiBjbGFzcz0iY29sb3IiPjwvZGl2Pgo8ZGl2IGNsYXNzPSJpbWFnZXRsIj48L2Rpdj4KPGRpdiBjbGFzcz0iaW1hZ2ViciI+PC9kaXY+CgoKCjwvYm9keT48L2h0bWw+",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sIGxhbmc9ImVuLVVTIj48aGVhZD4KICAgIDxsaW5rIHJlbD0icmVmZXJlbmNlIiBocmVmPSJ0YWJsZS1iYWNrZ3JvdW5kcy1iYy1jZWxsLTAwMS1yZWYueGh0Ij4KICAgIDx0aXRsZT5DU1MgVGVzdDogdGFibGUgYmFja2dyb3VuZHM8L3RpdGxlPgogICAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJMLiBEYXZpZCBCYXJvbiIgaHJlZj0iaHR0cDovL2RiYXJvbi5vcmcvIj4KICAgIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iTW96aWxsYSBDb3Jwb3JhdGlvbiIgaHJlZj0iaHR0cDovL21vemlsbGEuY29tLyI+CiAgICA8bGluayByZWw9ImhlbHAiIGhyZWY9Imh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL3RhYmxlcy5odG1sI3RhYmxlLWxheWVycyI+CiAgICA8bWV0YSBuYW1lPSJmbGFncyIgY29udGVudD0iIj4KCTxtZXRhIGh0dHAtZXF1aXY9IkNvbnRlbnQtVHlwZSIgY29udGVudD0idGV4dC9odG1sOyBjaGFyc2V0PVVURi04Ij4KCTxtZXRhIGh0dHAtZXF1aXY9IkNvbnRlbnQtU3R5bGUtVHlwZSIgY29udGVudD0idGV4dC9jc3MiPgoJPHN0eWxlIHR5cGU9InRleHQvY3NzIj4KCglodG1sLCBib2R5IHsgbWFyZ2luOiAwOyBwYWRkaW5nOiAwOyBib3JkZXI6IDA7IGZvbnQtc2l6ZTogMTZweDsgfQoJYm9keSB7IHBhZGRpbmc6IDE1cHg7IH0KCgl0YWJsZSB7IAoJCW1hcmdpbjogMCAzcHggMnB4IDRweDsgLyogemVybyB0b3AgdG8gd29yayBhcm91bmQgY29sbGFwc2luZyBidWcgKi8KCQlib3JkZXI6IHRyYW5zcGFyZW50IHNvbGlkOwoJCWJvcmRlci13aWR0aDogNHB4IDJweCA4cHggNnB4OyAvKiBjb2xsYXBzZWQgKi8KCQlwYWRkaW5nOiAzcHggN3B4IDhweCA2cHg7IC8qIGlnbm9yZWQgKi8KCQlib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOwoJfQoKCXRkIHsKCQlib3JkZXI6IHRyYW5zcGFyZW50IHNvbGlkOwoJCWJvcmRlci13aWR0aDogMnB4IDAgNHB4IDJweDsgLyogY29sbGFwc2VkICovCgkJcGFkZGluZzogMXB4IDJweCA0cHggM3B4OwoJCWVtcHR5LWNlbGxzOiBzaG93OwoJfQoKCWRpdiB7IGhlaWdodDogMTBweDsgd2lkdGg6IDUwcHg7IH0KCgl0YWJsZS5jb2xvciB0ZC50IHsgYmFja2dyb3VuZC1jb2xvcjogYXF1YTsgfQoKCXRhYmxlLmltYWdldGwgdGQudCwgdGFibGUuaW1hZ2ViciB0ZC50IHsKCQliYWNrZ3JvdW5kLWltYWdlOiB1cmwoc3VwcG9ydC9yZXBlYXRhYmxlLWRpYWdvbmFsLWdyYWRpZW50LXdpdGgtdGlja3MucG5nKTsKCX0KCgl0YWJsZS5pbWFnZXRsIHRkLnQgeyBiYWNrZ3JvdW5kLXBvc2l0aW9uOiB0b3AgbGVmdDsgLyogZGVmYXVsdCAqLyB9Cgl0YWJsZS5pbWFnZWJyIHRkLnQgeyBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBib3R0b20gcmlnaHQ7IC8qIGRlZmF1bHQgKi8gfQoKCTwvc3R5bGU+CjwvaGVhZD4KPGJvZHk+Cgo8dGFibGUgY2xhc3M9ImNvbG9yIj4KCTxjb2xncm91cD48Y29sPjwvY29sZ3JvdXA+Cgk8Y29sZ3JvdXAgY2xhc3M9InQiPgogICAgICAgIDxjb2w+CiAgICAgICAgPGNvbCBjbGFzcz0idCI+CiAgICAgICAgPGNvbD4KCTwvY29sZ3JvdXA+Cgk8Y29sZ3JvdXA+PGNvbD48L2NvbGdyb3VwPgoJPHRib2R5PgogICAgICAgIDx0cj48dGQ+PGRpdj48L2Rpdj48L3RkPjx0ZD48ZGl2PjwvZGl2PjwvdGQ+PHRkPjxkaXY+PC9kaXY+PC90ZD48dGQ+PGRpdj48L2Rpdj48L3RkPjx0ZD48ZGl2PjwvZGl2PjwvdGQ+PC90cj4KCTwvdGJvZHk+Cgk8dGJvZHkgY2xhc3M9InQiPgogICAgICAgIDx0cj48dGQ+PGRpdj48L2Rpdj48L3RkPjx0ZD48ZGl2PjwvZGl2PjwvdGQ+PHRkPjxkaXY+PC9kaXY+PC90ZD48dGQ+PGRpdj48L2Rpdj48L3RkPjx0ZD48ZGl2PjwvZGl2PjwvdGQ+PC90cj4KICAgICAgICA8dHIgY2xhc3M9InQiPjx0ZD48ZGl2PjwvZGl2PjwvdGQ+PHRkPjxkaXY+PC9kaXY+PC90ZD48dGQgY2xhc3M9InQiPjxkaXY+PC9kaXY+PC90ZD48dGQ+PGRpdj48L2Rpdj48L3RkPjx0ZD48ZGl2PjwvZGl2PjwvdGQ+PC90cj4KICAgICAgICA8dHI+PHRkPjxkaXY+PC9kaXY+PC90ZD48dGQ+PGRpdj48L2Rpdj48L3RkPjx0ZD48ZGl2PjwvZGl2PjwvdGQ+PHRkPjxkaXY+PC9kaXY+PC90ZD48dGQ+PGRpdj48L2Rpdj48L3RkPjwvdHI+Cgk8L3Rib2R5PgoJPHRib2R5PgogICAgICAgIDx0cj48dGQ+PGRpdj48L2Rpdj48L3RkPjx0ZD48ZGl2PjwvZGl2PjwvdGQ+PHRkPjxkaXY+PC9kaXY+PC90ZD48dGQ+PGRpdj48L2Rpdj48L3RkPjx0ZD48ZGl2PjwvZGl2PjwvdGQ+PC90cj4KCTwvdGJvZHk+CjwvdGFibGU+Cgo8dGFibGUgY2xhc3M9ImltYWdldGwiPgoJPGNvbGdyb3VwPjxjb2w+PC9jb2xncm91cD4KCTxjb2xncm91cCBjbGFzcz0idCI+CiAgICAgICAgPGNvbD4KICAgICAgICA8Y29sIGNsYXNzPSJ0Ij4KICAgICAgICA8Y29sPgoJPC9jb2xncm91cD4KCTxjb2xncm91cD48Y29sPjwvY29sZ3JvdXA+Cgk8dGJvZHk+CiAgICAgICAgPHRyPjx0ZD48ZGl2PjwvZGl2PjwvdGQ+PHRkPjxkaXY+PC9kaXY+PC90ZD48dGQ+PGRpdj48L2Rpdj48L3RkPjx0ZD48ZGl2PjwvZGl2PjwvdGQ+PHRkPjxkaXY+PC9kaXY+PC90ZD48L3RyPgoJPC90Ym9keT4KCTx0Ym9keSBjbGFzcz0idCI+CiAgICAgICAgPHRyPjx0ZD48ZGl2PjwvZGl2PjwvdGQ+PHRkPjxkaXY+PC9kaXY+PC90ZD48dGQ+PGRpdj48L2Rpdj48L3RkPjx0ZD48ZGl2PjwvZGl2PjwvdGQ+PHRkPjxkaXY+PC9kaXY+PC90ZD48L3RyPgogICAgICAgIDx0ciBjbGFzcz0idCI+PHRkPjxkaXY+PC9kaXY+PC90ZD48dGQ+PGRpdj48L2Rpdj48L3RkPjx0ZCBjbGFzcz0idCI+PGRpdj48L2Rpdj48L3RkPjx0ZD48ZGl2PjwvZGl2PjwvdGQ+PHRkPjxkaXY+PC9kaXY+PC90ZD48L3RyPgogICAgICAgIDx0cj48dGQ+PGRpdj48L2Rpdj48L3RkPjx0ZD48ZGl2PjwvZGl2PjwvdGQ+PHRkPjxkaXY+PC9kaXY+PC90ZD48dGQ+PGRpdj48L2Rpdj48L3RkPjx0ZD48ZGl2PjwvZGl2PjwvdGQ+PC90cj4KCTwvdGJvZHk+Cgk8dGJvZHk+CiAgICAgICAgPHRyPjx0ZD48ZGl2PjwvZGl2PjwvdGQ+PHRkPjxkaXY+PC9kaXY+PC90ZD48dGQ+PGRpdj48L2Rpdj48L3RkPjx0ZD48ZGl2PjwvZGl2PjwvdGQ+PHRkPjxkaXY+PC9kaXY+PC90ZD48L3RyPgoJPC90Ym9keT4KPC90YWJsZT4KCjx0YWJsZSBjbGFzcz0iaW1hZ2ViciI+Cgk8Y29sZ3JvdXA+PGNvbD48L2NvbGdyb3VwPgoJPGNvbGdyb3VwIGNsYXNzPSJ0Ij4KICAgICAgICA8Y29sPgogICAgICAgIDxjb2wgY2xhc3M9InQiPgogICAgICAgIDxjb2w+Cgk8L2NvbGdyb3VwPgoJPGNvbGdyb3VwPjxjb2w+PC9jb2xncm91cD4KCTx0Ym9keT4KICAgICAgICA8dHI+PHRkPjxkaXY+PC9kaXY+PC90ZD48dGQ+PGRpdj48L2Rpdj48L3RkPjx0ZD48ZGl2PjwvZGl2PjwvdGQ+PHRkPjxkaXY+PC9kaXY+PC90ZD48dGQ+PGRpdj48L2Rpdj48L3RkPjwvdHI+Cgk8L3Rib2R5PgoJPHRib2R5IGNsYXNzPSJ0Ij4KICAgICAgICA8dHI+PHRkPjxkaXY+PC9kaXY+PC90ZD48dGQ+PGRpdj48L2Rpdj48L3RkPjx0ZD48ZGl2PjwvZGl2PjwvdGQ+PHRkPjxkaXY+PC9kaXY+PC90ZD48dGQ+PGRpdj48L2Rpdj48L3RkPjwvdHI+CiAgICAgICAgPHRyIGNsYXNzPSJ0Ij48dGQ+PGRpdj48L2Rpdj48L3RkPjx0ZD48ZGl2PjwvZGl2PjwvdGQ+PHRkIGNsYXNzPSJ0Ij48ZGl2PjwvZGl2PjwvdGQ+PHRkPjxkaXY+PC9kaXY+PC90ZD48dGQ+PGRpdj48L2Rpdj48L3RkPjwvdHI+CiAgICAgICAgPHRyPjx0ZD48ZGl2PjwvZGl2PjwvdGQ+PHRkPjxkaXY+PC9kaXY+PC90ZD48dGQ+PGRpdj48L2Rpdj48L3RkPjx0ZD48ZGl2PjwvZGl2PjwvdGQ+PHRkPjxkaXY+PC9kaXY+PC90ZD48L3RyPgoJPC90Ym9keT4KCTx0Ym9keT4KICAgICAgICA8dHI+PHRkPjxkaXY+PC9kaXY+PC90ZD48dGQ+PGRpdj48L2Rpdj48L3RkPjx0ZD48ZGl2PjwvZGl2PjwvdGQ+PHRkPjxkaXY+PC9kaXY+PC90ZD48dGQ+PGRpdj48L2Rpdj48L3RkPjwvdHI+Cgk8L3Rib2R5Pgo8L3RhYmxlPgoKCgo8L2JvZHk+PC9odG1sPg==",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sIGxhbmc9ImVuLVVTIj48aGVhZD4KCTx0aXRsZT5UYWJsZSBiYWNrZ3JvdW5kIHRlc3RzPC90aXRsZT4KCTxtZXRhIGh0dHAtZXF1aXY9IkNvbnRlbnQtVHlwZSIgY29udGVudD0idGV4dC9odG1sOyBjaGFyc2V0PVVURi04Ij4KCTxtZXRhIGh0dHAtZXF1aXY9IkNvbnRlbnQtU3R5bGUtVHlwZSIgY29udGVudD0idGV4dC9jc3MiPgoJPHN0eWxlIHR5cGU9InRleHQvY3NzIj4KCglodG1sLCBib2R5IHsgbWFyZ2luOiAwOyBwYWRkaW5nOiAwOyBib3JkZXI6IDA7IGZvbnQtc2l6ZTogMTZweDsgfQoJYm9keSB7IHBhZGRpbmc6IDE1cHg7IH0KCgkvKgoJdGFibGUgeyAKCQltYXJnaW46IDBweCAzcHggMnB4IDRweDsKCQlib3JkZXItd2lkdGg6IDRweCAycHggOHB4IDZweDsKCgkJaGVpZ2h0IGlzIDk3cHg6CgkJICAoMnB4IG9mIGJvcmRlciBvdXRzaWRlIGhlaWdodCkKCQkgIGV4dHJhIGJvcmRlciB3aWR0aCBmb3IgdG9wIHJvdzogMAoJCSAgY2VsbCAqIDU6ID09IDE5cHggKiA1ID09IDk1cHgKCQkgICAgYm9yZGVyLXRvcDogMnB4OwoJCSAgICBwYWRkaW5nLXRvcDogMXB4OwoJCSAgICBoZWlnaHQ6IDEwcHg7CgkJICAgIHBhZGRpbmctYm90dG9tOiA0cHg7CgkJICAgIGJvcmRlci1ib3R0b206IDJweDsKCQkgIGV4dHJhIGJvcmRlciB3aWR0aCBmb3IgdG9wIHJvdzogMnB4CgkJICAoNHB4IG9mIGJvcmRlciBvdXRzaWRlIGhlaWdodCkKCgkJd2lkdGggaXMgMjg3cHg6CgkJICAoM3B4IG9mIGJvcmRlciBvdXRzaWRlIHdpZHRoKQoJCSAgZXh0cmEgYm9yZGVyIHdpZHRoIGZvciBsZWZ0IGNvbHVtbjogMnB4CgkJICBjZWxsICogNTogPT0gNTdweCAqIDUgPT0gMjg1cHgKCQkgICAgYm9yZGVyLWxlZnQ6IDFweDsKCQkgICAgcGFkZGluZy1sZWZ0OiAzcHg7CgkJICAgIHdpZHRoOiA1MHB4OwoJCSAgICBwYWRkaW5nLXJpZ2h0OiAycHg7CgkJICAgIGJvcmRlci1yaWdodDogMXB4OwoJCSAgKDFweCBvZiBib3JkZXIgb3V0c2lkZSB3aWR0aCkKICAgICovCgoJZGl2IHsgd2lkdGg6IDE3MXB4OyBoZWlnaHQ6IDk3cHg7IG1hcmdpbjogMnB4IDYxcHggOHB4IDY2cHg7IH0KCWRpdi5jb2xvciB7IGJhY2tncm91bmQtY29sb3I6IGFxdWE7IH0KCglkaXYuaW1hZ2V0bCwgZGl2LmltYWdlYnIgewoJCWJhY2tncm91bmQtaW1hZ2U6IHVybChzdXBwb3J0L3JlcGVhdGFibGUtZGlhZ29uYWwtZ3JhZGllbnQtd2l0aC10aWNrcy5wbmcpOwoJfQoKCWRpdi5pbWFnZXRsIHsgYmFja2dyb3VuZC1wb3NpdGlvbjogMCAwOyB9CglkaXYuaW1hZ2ViciB7IGJhY2tncm91bmQtcG9zaXRpb246IDE3MXB4IDk3cHg7IH0KCgk8L3N0eWxlPgo8L2hlYWQ+Cjxib2R5PgoKPGRpdiBjbGFzcz0iY29sb3IiPjwvZGl2Pgo8ZGl2IGNsYXNzPSJpbWFnZXRsIj48L2Rpdj4KPGRpdiBjbGFzcz0iaW1hZ2ViciI+PC9kaXY+CgoKCjwvYm9keT48L2h0bWw+",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sIGxhbmc9ImVuLVVTIj48aGVhZD4KICAgIDxsaW5rIHJlbD0icmVmZXJlbmNlIiBocmVmPSJ0YWJsZS1iYWNrZ3JvdW5kcy1iYy1jb2xncm91cC0wMDEtcmVmLnhodCI+CiAgICA8dGl0bGU+Q1NTIFRlc3Q6IHRhYmxlIGJhY2tncm91bmRzPC90aXRsZT4KICAgIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iTC4gRGF2aWQgQmFyb24iIGhyZWY9Imh0dHA6Ly9kYmFyb24ub3JnLyI+CiAgICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9Ik1vemlsbGEgQ29ycG9yYXRpb24iIGhyZWY9Imh0dHA6Ly9tb3ppbGxhLmNvbS8iPgogICAgPGxpbmsgcmVsPSJoZWxwIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCN0YWJsZS1sYXllcnMiPgogICAgPG1ldGEgbmFtZT0iZmxhZ3MiIGNvbnRlbnQ9IiI+Cgk8bWV0YSBodHRwLWVxdWl2PSJDb250ZW50LVR5cGUiIGNvbnRlbnQ9InRleHQvaHRtbDsgY2hhcnNldD1VVEYtOCI+Cgk8bWV0YSBodHRwLWVxdWl2PSJDb250ZW50LVN0eWxlLVR5cGUiIGNvbnRlbnQ9InRleHQvY3NzIj4KCTxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+CgoJaHRtbCwgYm9keSB7IG1hcmdpbjogMDsgcGFkZGluZzogMDsgYm9yZGVyOiAwOyBmb250LXNpemU6IDE2cHg7IH0KCWJvZHkgeyBwYWRkaW5nOiAxNXB4OyB9CgoJdGFibGUgeyAKCQltYXJnaW46IDAgM3B4IDJweCA0cHg7IC8qIHplcm8gdG9wIHRvIHdvcmsgYXJvdW5kIGNvbGxhcHNpbmcgYnVnICovCgkJYm9yZGVyOiB0cmFuc3BhcmVudCBzb2xpZDsKCQlib3JkZXItd2lkdGg6IDRweCAycHggOHB4IDZweDsgLyogY29sbGFwc2VkICovCgkJcGFkZGluZzogM3B4IDdweCA4cHggNnB4OyAvKiBpZ25vcmVkICovCgkJYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsKCX0KCgl0ZCB7CgkJYm9yZGVyOiB0cmFuc3BhcmVudCBzb2xpZDsKCQlib3JkZXItd2lkdGg6IDJweCAwIDRweCAycHg7IC8qIGNvbGxhcHNlZCAqLwoJCXBhZGRpbmc6IDFweCAycHggNHB4IDNweDsKCQllbXB0eS1jZWxsczogc2hvdzsKCX0KCglkaXYgeyBoZWlnaHQ6IDEwcHg7IHdpZHRoOiA1MHB4OyB9CgoJdGFibGUuY29sb3IgY29sZ3JvdXAudCB7IGJhY2tncm91bmQtY29sb3I6IGFxdWE7IH0KCgl0YWJsZS5pbWFnZXRsIGNvbGdyb3VwLnQsIHRhYmxlLmltYWdlYnIgY29sZ3JvdXAudCB7CgkJYmFja2dyb3VuZC1pbWFnZTogdXJsKHN1cHBvcnQvcmVwZWF0YWJsZS1kaWFnb25hbC1ncmFkaWVudC13aXRoLXRpY2tzLnBuZyk7Cgl9CgoJdGFibGUuaW1hZ2V0bCBjb2xncm91cC50IHsgYmFja2dyb3VuZC1wb3NpdGlvbjogdG9wIGxlZnQ7IC8qIGRlZmF1bHQgKi8gfQoJdGFibGUuaW1hZ2ViciBjb2xncm91cC50IHsgYmFja2dyb3VuZC1wb3NpdGlvbjogYm90dG9tIHJpZ2h0OyAvKiBkZWZhdWx0ICovIH0KCgk8L3N0eWxlPgo8L2hlYWQ+Cjxib2R5PgoKPHRhYmxlIGNsYXNzPSJjb2xvciI+Cgk8Y29sZ3JvdXA+PGNvbD48L2NvbGdyb3VwPgoJPGNvbGdyb3VwIGNsYXNzPSJ0Ij4KICAgICAgICA8Y29sPgogICAgICAgIDxjb2wgY2xhc3M9InQiPgogICAgICAgIDxjb2w+Cgk8L2NvbGdyb3VwPgoJPGNvbGdyb3VwPjxjb2w+PC9jb2xncm91cD4KCTx0Ym9keT4KICAgICAgICA8dHI+PHRkPjxkaXY+PC9kaXY+PC90ZD48dGQ+PGRpdj48L2Rpdj48L3RkPjx0ZD48ZGl2PjwvZGl2PjwvdGQ+PHRkPjxkaXY+PC9kaXY+PC90ZD48dGQ+PGRpdj48L2Rpdj48L3RkPjwvdHI+Cgk8L3Rib2R5PgoJPHRib2R5IGNsYXNzPSJ0Ij4KICAgICAgICA8dHI+PHRkPjxkaXY+PC9kaXY+PC90ZD48dGQ+PGRpdj48L2Rpdj48L3RkPjx0ZD48ZGl2PjwvZGl2PjwvdGQ+PHRkPjxkaXY+PC9kaXY+PC90ZD48dGQ+PGRpdj48L2Rpdj48L3RkPjwvdHI+CiAgICAgICAgPHRyIGNsYXNzPSJ0Ij48dGQ+PGRpdj48L2Rpdj48L3RkPjx0ZD48ZGl2PjwvZGl2PjwvdGQ+PHRkIGNsYXNzPSJ0Ij48ZGl2PjwvZGl2PjwvdGQ+PHRkPjxkaXY+PC9kaXY+PC90ZD48dGQ+PGRpdj48L2Rpdj48L3RkPjwvdHI+CiAgICAgICAgPHRyPjx0ZD48ZGl2PjwvZGl2PjwvdGQ+PHRkPjxkaXY+PC9kaXY+PC90ZD48dGQ+PGRpdj48L2Rpdj48L3RkPjx0ZD48ZGl2PjwvZGl2PjwvdGQ+PHRkPjxkaXY+PC9kaXY+PC90ZD48L3RyPgoJPC90Ym9keT4KCTx0Ym9keT4KICAgICAgICA8dHI+PHRkPjxkaXY+PC9kaXY+PC90ZD48dGQ+PGRpdj48L2Rpdj48L3RkPjx0ZD48ZGl2PjwvZGl2PjwvdGQ+PHRkPjxkaXY+PC9kaXY+PC90ZD48dGQ+PGRpdj48L2Rpdj48L3RkPjwvdHI+Cgk8L3Rib2R5Pgo8L3RhYmxlPgoKPHRhYmxlIGNsYXNzPSJpbWFnZXRsIj4KCTxjb2xncm91cD48Y29sPjwvY29sZ3JvdXA+Cgk8Y29sZ3JvdXAgY2xhc3M9InQiPgogICAgICAgIDxjb2w+CiAgICAgICAgPGNvbCBjbGFzcz0idCI+CiAgICAgICAgPGNvbD4KCTwvY29sZ3JvdXA+Cgk8Y29sZ3JvdXA+PGNvbD48L2NvbGdyb3VwPgoJPHRib2R5PgogICAgICAgIDx0cj48dGQ+PGRpdj48L2Rpdj48L3RkPjx0ZD48ZGl2PjwvZGl2PjwvdGQ+PHRkPjxkaXY+PC9kaXY+PC90ZD48dGQ+PGRpdj48L2Rpdj48L3RkPjx0ZD48ZGl2PjwvZGl2PjwvdGQ+PC90cj4KCTwvdGJvZHk+Cgk8dGJvZHkgY2xhc3M9InQiPgogICAgICAgIDx0cj48dGQ+PGRpdj48L2Rpdj48L3RkPjx0ZD48ZGl2PjwvZGl2PjwvdGQ+PHRkPjxkaXY+PC9kaXY+PC90ZD48dGQ+PGRpdj48L2Rpdj48L3RkPjx0ZD48ZGl2PjwvZGl2PjwvdGQ+PC90cj4KICAgICAgICA8dHIgY2xhc3M9InQiPjx0ZD48ZGl2PjwvZGl2PjwvdGQ+PHRkPjxkaXY+PC9kaXY+PC90ZD48dGQgY2xhc3M9InQiPjxkaXY+PC9kaXY+PC90ZD48dGQ+PGRpdj48L2Rpdj48L3RkPjx0ZD48ZGl2PjwvZGl2PjwvdGQ+PC90cj4KICAgICAgICA8dHI+PHRkPjxkaXY+PC9kaXY+PC90ZD48dGQ+PGRpdj48L2Rpdj48L3RkPjx0ZD48ZGl2PjwvZGl2PjwvdGQ+PHRkPjxkaXY+PC9kaXY+PC90ZD48dGQ+PGRpdj48L2Rpdj48L3RkPjwvdHI+Cgk8L3Rib2R5PgoJPHRib2R5PgogICAgICAgIDx0cj48dGQ+PGRpdj48L2Rpdj48L3RkPjx0ZD48ZGl2PjwvZGl2PjwvdGQ+PHRkPjxkaXY+PC9kaXY+PC90ZD48dGQ+PGRpdj48L2Rpdj48L3RkPjx0ZD48ZGl2PjwvZGl2PjwvdGQ+PC90cj4KCTwvdGJvZHk+CjwvdGFibGU+Cgo8dGFibGUgY2xhc3M9ImltYWdlYnIiPgoJPGNvbGdyb3VwPjxjb2w+PC9jb2xncm91cD4KCTxjb2xncm91cCBjbGFzcz0idCI+CiAgICAgICAgPGNvbD4KICAgICAgICA8Y29sIGNsYXNzPSJ0Ij4KICAgICAgICA8Y29sPgoJPC9jb2xncm91cD4KCTxjb2xncm91cD48Y29sPjwvY29sZ3JvdXA+Cgk8dGJvZHk+CiAgICAgICAgPHRyPjx0ZD48ZGl2PjwvZGl2PjwvdGQ+PHRkPjxkaXY+PC9kaXY+PC90ZD48dGQ+PGRpdj48L2Rpdj48L3RkPjx0ZD48ZGl2PjwvZGl2PjwvdGQ+PHRkPjxkaXY+PC9kaXY+PC90ZD48L3RyPgoJPC90Ym9keT4KCTx0Ym9keSBjbGFzcz0idCI+CiAgICAgICAgPHRyPjx0ZD48ZGl2PjwvZGl2PjwvdGQ+PHRkPjxkaXY+PC9kaXY+PC90ZD48dGQ+PGRpdj48L2Rpdj48L3RkPjx0ZD48ZGl2PjwvZGl2PjwvdGQ+PHRkPjxkaXY+PC9kaXY+PC90ZD48L3RyPgogICAgICAgIDx0ciBjbGFzcz0idCI+PHRkPjxkaXY+PC9kaXY+PC90ZD48dGQ+PGRpdj48L2Rpdj48L3RkPjx0ZCBjbGFzcz0idCI+PGRpdj48L2Rpdj48L3RkPjx0ZD48ZGl2PjwvZGl2PjwvdGQ+PHRkPjxkaXY+PC9kaXY+PC90ZD48L3RyPgogICAgICAgIDx0cj48dGQ+PGRpdj48L2Rpdj48L3RkPjx0ZD48ZGl2PjwvZGl2PjwvdGQ+PHRkPjxkaXY+PC9kaXY+PC90ZD48dGQ+PGRpdj48L2Rpdj48L3RkPjx0ZD48ZGl2PjwvZGl2PjwvdGQ+PC90cj4KCTwvdGJvZHk+Cgk8dGJvZHk+CiAgICAgICAgPHRyPjx0ZD48ZGl2PjwvZGl2PjwvdGQ+PHRkPjxkaXY+PC9kaXY+PC90ZD48dGQ+PGRpdj48L2Rpdj48L3RkPjx0ZD48ZGl2PjwvZGl2PjwvdGQ+PHRkPjxkaXY+PC9kaXY+PC90ZD48L3RyPgoJPC90Ym9keT4KPC90YWJsZT4KCgoKPC9ib2R5PjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sIGxhbmc9ImVuLVVTIj48aGVhZD4KCTx0aXRsZT5UYWJsZSBiYWNrZ3JvdW5kIHRlc3RzPC90aXRsZT4KCTxtZXRhIGh0dHAtZXF1aXY9IkNvbnRlbnQtVHlwZSIgY29udGVudD0idGV4dC9odG1sOyBjaGFyc2V0PVVURi04Ij4KCTxtZXRhIGh0dHAtZXF1aXY9IkNvbnRlbnQtU3R5bGUtVHlwZSIgY29udGVudD0idGV4dC9jc3MiPgoJPHN0eWxlIHR5cGU9InRleHQvY3NzIj4KCglodG1sLCBib2R5IHsgbWFyZ2luOiAwOyBwYWRkaW5nOiAwOyBib3JkZXI6IDA7IGZvbnQtc2l6ZTogMTZweDsgfQoJYm9keSB7IHBhZGRpbmc6IDE1cHg7IH0KCgkvKgoJdGFibGUgeyAKCQltYXJnaW46IDBweCAzcHggMnB4IDRweDsKCQlib3JkZXItd2lkdGg6IDRweCAycHggN3B4IDNweDsKCgkJYm9yZGVyLWJveCBoZWlnaHQgaXMgMTQ1cHg6CgkJICBib3JkZXItdG9wOiA0cHg7CgkJICBwYWRkaW5nLXRvcDogM3B4CgkJICBib3JkZXItc3BhY2luZzogM3B4ICogNiA9PSAxOHB4CgkJICBjZWxsICogNTogPT0gMjFweCAqIDUgPT0gMTA1cHgKCQkgICAgYm9yZGVyLXRvcDogMnB4OwoJCSAgICBwYWRkaW5nLXRvcDogMXB4OwoJCSAgICBoZWlnaHQ6IDEwcHg7CgkJICAgIHBhZGRpbmctYm90dG9tOiA0cHg7CgkJICAgIGJvcmRlci1ib3R0b206IDRweDsKCQkgIHBhZGRpbmctYm90dG9tOiA4cHg7CgkJICBib3JkZXItYm90dG9tOiA3cHg7CgoJCWJvcmRlci1ib3ggd2lkdGggaXMgMzI1cHg6CgkJICBib3JkZXItbGVmdDogM3B4OwoJCSAgcGFkZGluZy1sZWZ0OiA2cHgKCQkgIGJvcmRlci1zcGFjaW5nOiAycHggKiA2ID09IDEycHgKCQkgIGNlbGwgKiA1OiA9PSA1OXB4ICogNSA9PSAyOTVweAoJCSAgICBib3JkZXItbGVmdDogM3B4OwoJCSAgICBwYWRkaW5nLWxlZnQ6IDNweDsKCQkgICAgd2lkdGg6IDUwcHg7CgkJICAgIHBhZGRpbmctcmlnaHQ6IDJweDsKCQkgICAgYm9yZGVyLXJpZ2h0OiAxcHg7CgkJICBwYWRkaW5nLXJpZ2h0OiA3cHg7CgkJICBib3JkZXItcmlnaHQ6IDJweDsKICAgICovCgoJZGl2LmNvbG9yLCBkaXYuaW1hZ2V0bCwgZGl2LmltYWdlYnIgewogICAgICAgIHdpZHRoOiAzMDNweDsgaGVpZ2h0OiA2OXB4OyBtYXJnaW46IDM0cHggMTRweCA3OHB4IDE1cHg7Cgl9CglkaXYuY29sb3IgeyBiYWNrZ3JvdW5kLWNvbG9yOiBhcXVhOyB9CgoJZGl2LmltYWdldGwsIGRpdi5pbWFnZWJyIHsKCQliYWNrZ3JvdW5kLWltYWdlOiB1cmwoc3VwcG9ydC9yZXBlYXRhYmxlLWRpYWdvbmFsLWdyYWRpZW50LXdpdGgtdGlja3MucG5nKTsKCX0KCglkaXYuaW1hZ2V0bCB7IGJhY2tncm91bmQtcG9zaXRpb246IDAgMDsgfQoJZGl2LmltYWdlYnIgeyBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAzMDNweCA2OXB4OyB9CgoJZGl2LnZzdHJpcGUsIGRpdi5oc3RyaXBlIHsgYmFja2dyb3VuZDogd2hpdGU7IHBvc2l0aW9uOiBhYnNvbHV0ZTsgfQoJZGl2LnZzdHJpcGUgeyB0b3A6IDA7IHdpZHRoOiAycHg7IGhlaWdodDogNTAwcHg7IH0KCWRpdi5oc3RyaXBlIHsgbGVmdDogMDsgaGVpZ2h0OiAzcHg7IHdpZHRoOiA0MDBweDsgfQoKCTwvc3R5bGU+CjwvaGVhZD4KPGJvZHk+Cgo8ZGl2IGNsYXNzPSJjb2xvciI+PC9kaXY+CjxkaXYgY2xhc3M9ImltYWdldGwiPjwvZGl2Pgo8ZGl2IGNsYXNzPSJpbWFnZWJyIj48L2Rpdj4KCjxkaXYgc3R5bGU9InRvcDogNDZweCIgY2xhc3M9ImhzdHJpcGUiPjwvZGl2Pgo8ZGl2IHN0eWxlPSJ0b3A6IDcwcHgiIGNsYXNzPSJoc3RyaXBlIj48L2Rpdj4KPGRpdiBzdHlsZT0idG9wOiA5NHB4IiBjbGFzcz0iaHN0cmlwZSI+PC9kaXY+CjxkaXYgc3R5bGU9InRvcDogMTE4cHgiIGNsYXNzPSJoc3RyaXBlIj48L2Rpdj4KPGRpdiBzdHlsZT0idG9wOiAxOTNweCIgY2xhc3M9ImhzdHJpcGUiPjwvZGl2Pgo8ZGl2IHN0eWxlPSJ0b3A6IDIxN3B4IiBjbGFzcz0iaHN0cmlwZSI+PC9kaXY+CjxkaXYgc3R5bGU9InRvcDogMjQxcHgiIGNsYXNzPSJoc3RyaXBlIj48L2Rpdj4KPGRpdiBzdHlsZT0idG9wOiAyNjVweCIgY2xhc3M9ImhzdHJpcGUiPjwvZGl2Pgo8ZGl2IHN0eWxlPSJ0b3A6IDM0MHB4IiBjbGFzcz0iaHN0cmlwZSI+PC9kaXY+CjxkaXYgc3R5bGU9InRvcDogMzY0cHgiIGNsYXNzPSJoc3RyaXBlIj48L2Rpdj4KPGRpdiBzdHlsZT0idG9wOiAzODhweCIgY2xhc3M9ImhzdHJpcGUiPjwvZGl2Pgo8ZGl2IHN0eWxlPSJ0b3A6IDQxMnB4IiBjbGFzcz0iaHN0cmlwZSI+PC9kaXY+Cgo8ZGl2IHN0eWxlPSJsZWZ0OiA4OXB4IiBjbGFzcz0idnN0cmlwZSI+PC9kaXY+CjxkaXYgc3R5bGU9ImxlZnQ6IDE1MHB4IiBjbGFzcz0idnN0cmlwZSI+PC9kaXY+CjxkaXYgc3R5bGU9ImxlZnQ6IDIxMXB4IiBjbGFzcz0idnN0cmlwZSI+PC9kaXY+CjxkaXYgc3R5bGU9ImxlZnQ6IDI3MnB4IiBjbGFzcz0idnN0cmlwZSI+PC9kaXY+CjxkaXYgc3R5bGU9ImxlZnQ6IDMzM3B4IiBjbGFzcz0idnN0cmlwZSI+PC9kaXY+CgoKCjwvYm9keT48L2h0bWw+",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXJzIG9uIFRhYmxlIEVsZW1lbnRzIChyb3cgZ3JvdXBzKTwvdGl0bGU+CiAgICAgICAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJNaWNyb3NvZnQiIGhyZWY9Imh0dHA6Ly93d3cubWljcm9zb2Z0LmNvbS8iPgogICAgICAgIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjdGFibGVzLWludHJvIj4KICAgICAgICA8bWV0YSBuYW1lPSJmbGFncyIgY29udGVudD0iIj4KICAgICAgICA8bWV0YSBuYW1lPSJhc3NlcnQiIGNvbnRlbnQ9IkJvcmRlcnMgY2FuIGJlIGFwcGxpZWQgdG8gcm93IGdyb3VwcyAodGhyb3VnaCB0aGUgdXNlIG9mIHRib2R5IGVsZW1lbnRzKS4iPgogICAgICAgIDxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+CiAgICAgICAgICAgIHRhYmxlCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgdGJvZHkKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyOiAzcHggc29saWQgYmxhY2s7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgdGQKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgaGVpZ2h0OiAyZW07CiAgICAgICAgICAgICAgICB3aWR0aDogMmVtOwogICAgICAgICAgICB9CiAgICAgICAgPC9zdHlsZT4KICAgIDwvaGVhZD4KICAgIDxib2R5PgogICAgICAgIDxwPlRlc3QgcGFzc2VzIGlmIHRoZSBib3ggaXMgZGl2aWRlZCBpbnRvIGEgdG9wIGFuZCBib3R0b20gaGFsZi48L3A+CiAgICAgICAgPHRhYmxlPgogICAgICAgICAgICA8dGJvZHk+CiAgICAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgICAgIDx0ZD48L3RkPgogICAgICAgICAgICAgICAgICAgIDx0ZD48L3RkPgogICAgICAgICAgICAgICAgICAgIDx0ZD48L3RkPgogICAgICAgICAgICAgICAgICAgIDx0ZD48L3RkPgogICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgICAgIDx0ZD48L3RkPgogICAgICAgICAgICAgICAgICAgIDx0ZD48L3RkPgogICAgICAgICAgICAgICAgICAgIDx0ZD48L3RkPgogICAgICAgICAgICAgICAgICAgIDx0ZD48L3RkPgogICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgPC90Ym9keT4KICAgICAgICAgICAgICA8dGJvZHk+CiAgICAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgICAgIDx0ZD48L3RkPgogICAgICAgICAgICAgICAgICAgIDx0ZD48L3RkPgogICAgICAgICAgICAgICAgICAgIDx0ZD48L3RkPgogICAgICAgICAgICAgICAgICAgIDx0ZD48L3RkPgogICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgICAgIDx0ZD48L3RkPgogICAgICAgICAgICAgICAgICAgIDx0ZD48L3RkPgogICAgICAgICAgICAgICAgICAgIDx0ZD48L3RkPgogICAgICAgICAgICAgICAgICAgIDx0ZD48L3RkPgogICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgIDwvdGJvZHk+CiAgICAgICAgPC90YWJsZT4KICAgIDwvYm9keT4KIDwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXJzIG9uIFRhYmxlIEVsZW1lbnRzIChyb3dzKTwvdGl0bGU+CiAgICAgICAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJNaWNyb3NvZnQiIGhyZWY9Imh0dHA6Ly93d3cubWljcm9zb2Z0LmNvbS8iPgogICAgICAgIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjdGFibGVzLWludHJvIj4KICAgICAgICA8bWV0YSBuYW1lPSJmbGFncyIgY29udGVudD0iIj4KICAgICAgICA8bWV0YSBuYW1lPSJhc3NlcnQiIGNvbnRlbnQ9IkJvcmRlcnMgY2FuIGJlIGFwcGxpZWQgdG8gdGFibGUgcm93cy4iPgogICAgICAgIDxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+CiAgICAgICAgICAgIHRhYmxlCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgdHIKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyOiAzcHggc29saWQgYmxhY2s7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgdGQKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgaGVpZ2h0OiAyZW07CiAgICAgICAgICAgICAgICB3aWR0aDogMmVtOwogICAgICAgICAgICB9CiAgICAgICAgPC9zdHlsZT4KICAgIDwvaGVhZD4KICAgIDxib2R5PgogICAgICAgIDxwPlRlc3QgcGFzc2VzIGlmIHRoZSBib3ggaXMgZGl2aWRlZCBpbnRvIGZvdXIgZXF1YWwgaG9yaXpvbnRhbCBzdHJpcHMuPC9wPgogICAgICAgIDx0YWJsZT4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkPjwvdGQ+CiAgICAgICAgICAgICAgICA8dGQ+PC90ZD4KICAgICAgICAgICAgICAgIDx0ZD48L3RkPgogICAgICAgICAgICAgICAgPHRkPjwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD48L3RkPgogICAgICAgICAgICAgICAgPHRkPjwvdGQ+CiAgICAgICAgICAgICAgICA8dGQ+PC90ZD4KICAgICAgICAgICAgICAgIDx0ZD48L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQ+PC90ZD4KICAgICAgICAgICAgICAgIDx0ZD48L3RkPgogICAgICAgICAgICAgICAgPHRkPjwvdGQ+CiAgICAgICAgICAgICAgICA8dGQ+PC90ZD4KICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkPjwvdGQ+CiAgICAgICAgICAgICAgICA8dGQ+PC90ZD4KICAgICAgICAgICAgICAgIDx0ZD48L3RkPgogICAgICAgICAgICAgICAgPHRkPjwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgPC90YWJsZT4KICAgIDwvYm9keT4KIDwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXJzIG9uIFRhYmxlIEVsZW1lbnRzIChjb2x1bW4tZ3JvdXBzKTwvdGl0bGU+CiAgICAgICAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJNaWNyb3NvZnQiIGhyZWY9Imh0dHA6Ly93d3cubWljcm9zb2Z0LmNvbS8iPgogICAgICAgIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjdGFibGVzLWludHJvIj4KICAgICAgICA8bWV0YSBuYW1lPSJmbGFncyIgY29udGVudD0iIj4KICAgICAgICA8bWV0YSBuYW1lPSJhc3NlcnQiIGNvbnRlbnQ9IkJvcmRlcnMgY2FuIGJlIGFwcGxpZWQgdG8gdGFibGUgY29sdW1uIGdyb3Vwcy4iPgogICAgICAgIDxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+CiAgICAgICAgICAgIHRhYmxlCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgY29sZ3JvdXAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyOiAzcHggc29saWQgYmxhY2s7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgdGQKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgaGVpZ2h0OiAyZW07CiAgICAgICAgICAgICAgICB3aWR0aDogMmVtOwogICAgICAgICAgICB9CiAgICAgICAgPC9zdHlsZT4KICAgIDwvaGVhZD4KICAgIDxib2R5PgogICAgICAgIDxwPlRlc3QgcGFzc2VzIGlmIHRoZSBib3ggaXMgZGl2aWRlZCBpbnRvIGEgbGVmdCBoYWxmIGFuZCBhIHJpZ2h0IGhhbGYuPC9wPgogICAgICAgIDx0YWJsZT4KICAgICAgICAgICAgPGNvbGdyb3VwPgogICAgICAgICAgICAgICAgPGNvbD4KICAgICAgICAgICAgICAgIDxjb2w+CiAgICAgICAgICAgIDwvY29sZ3JvdXA+CiAgICAgICAgICAgIDxjb2xncm91cD4KICAgICAgICAgICAgICAgIDxjb2w+CiAgICAgICAgICAgICAgICA8Y29sPgogICAgICAgICAgICA8L2NvbGdyb3VwPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQ+PC90ZD4KICAgICAgICAgICAgICAgIDx0ZD48L3RkPgogICAgICAgICAgICAgICAgPHRkPjwvdGQ+CiAgICAgICAgICAgICAgICA8dGQ+PC90ZD4KICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkPjwvdGQ+CiAgICAgICAgICAgICAgICA8dGQ+PC90ZD4KICAgICAgICAgICAgICAgIDx0ZD48L3RkPgogICAgICAgICAgICAgICAgPHRkPjwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD48L3RkPgogICAgICAgICAgICAgICAgPHRkPjwvdGQ+CiAgICAgICAgICAgICAgICA8dGQ+PC90ZD4KICAgICAgICAgICAgICAgIDx0ZD48L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQ+PC90ZD4KICAgICAgICAgICAgICAgIDx0ZD48L3RkPgogICAgICAgICAgICAgICAgPHRkPjwvdGQ+CiAgICAgICAgICAgICAgICA8dGQ+PC90ZD4KICAgICAgICAgICAgPC90cj4KICAgICAgICA8L3RhYmxlPgogICAgPC9ib2R5PgogPC9odG1sPg==",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXJzIG9uIFRhYmxlIEVsZW1lbnRzIChjb2x1bW5zKTwvdGl0bGU+CiAgICAgICAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJNaWNyb3NvZnQiIGhyZWY9Imh0dHA6Ly93d3cubWljcm9zb2Z0LmNvbS8iPgogICAgICAgIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjdGFibGVzLWludHJvIj4KICAgICAgICA8bWV0YSBuYW1lPSJmbGFncyIgY29udGVudD0iIj4KICAgICAgICA8bWV0YSBuYW1lPSJhc3NlcnQiIGNvbnRlbnQ9IkJvcmRlcnMgY2FuIGJlIGFwcGxpZWQgdG8gdGFibGUgY29sdW1ucy4iPgogICAgICAgIDxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+CiAgICAgICAgICAgIHRhYmxlCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgY29sCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlcjogNXB4IHNvbGlkIGJsYWNrOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHRkCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIHdpZHRoOiAyZW07CiAgICAgICAgICAgICAgICBoZWlnaHQ6IDJlbTsKICAgICAgICAgICAgfQogICAgICAgIDwvc3R5bGU+CiAgICA8L2hlYWQ+CiAgICA8Ym9keT4KICAgICAgICA8cD5UZXN0IHBhc3NlcyBpZiB0aGUgYm94IGlzIGRpdmlkZWQgaW50byBmb3VyIGVxdWFsIHZlcnRpY2FsIHN0cmlwcy48L3A+CiAgICAgICAgPHRhYmxlPgogICAgICAgICAgICA8Y29sPgogICAgICAgICAgICA8Y29sPgogICAgICAgICAgICA8Y29sPgogICAgICAgICAgICA8Y29sPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQ+PC90ZD4KICAgICAgICAgICAgICAgIDx0ZD48L3RkPgogICAgICAgICAgICAgICAgPHRkPjwvdGQ+CiAgICAgICAgICAgICAgICA8dGQ+PC90ZD4KICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkPjwvdGQ+CiAgICAgICAgICAgICAgICA8dGQ+PC90ZD4KICAgICAgICAgICAgICAgIDx0ZD48L3RkPgogICAgICAgICAgICAgICAgPHRkPjwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD48L3RkPgogICAgICAgICAgICAgICAgPHRkPjwvdGQ+CiAgICAgICAgICAgICAgICA8dGQ+PC90ZD4KICAgICAgICAgICAgICAgIDx0ZD48L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQ+PC90ZD4KICAgICAgICAgICAgICAgIDx0ZD48L3RkPgogICAgICAgICAgICAgICAgPHRkPjwvdGQ+CiAgICAgICAgICAgICAgICA8dGQ+PC90ZD4KICAgICAgICAgICAgPC90cj4KICAgICAgICA8L3RhYmxlPgogICAgPC9ib2R5PgogPC9odG1sPg==",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBCb3JkZXJzIG9uIFRhYmxlIEVsZW1lbnRzIChjZWxsKTwvdGl0bGU+CiAgICAgICAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJNaWNyb3NvZnQiIGhyZWY9Imh0dHA6Ly93d3cubWljcm9zb2Z0LmNvbS8iPgogICAgICAgIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjdGFibGVzLWludHJvIj4KICAgICAgICA8bWV0YSBuYW1lPSJmbGFncyIgY29udGVudD0iIj4KICAgICAgICA8bWV0YSBuYW1lPSJhc3NlcnQiIGNvbnRlbnQ9IkJvcmRlciBjYW4gYmUgYXBwbGllZCB0byB0YWJsZSBjZWxscy4iPgogICAgICAgIDxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+CiAgICAgICAgICAgIHRhYmxlCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgdGQKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyOiAzcHggc29saWQgYmxhY2s7CiAgICAgICAgICAgICAgICBoZWlnaHQ6IDJlbTsKICAgICAgICAgICAgICAgIHdpZHRoOiAyZW07CiAgICAgICAgICAgIH0KICAgICAgICA8L3N0eWxlPgogICAgPC9oZWFkPgogICAgPGJvZHk+CiAgICAgICAgPHA+VGVzdCBwYXNzZXMgaWYgdGhlIGJveCBpcyBkaXZpZGVkIGludG8gZm91ciBzcXVhcmVzLjwvcD4KICAgICAgICA8dGFibGU+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD48L3RkPgogICAgICAgICAgICAgICAgPHRkPjwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD48L3RkPgogICAgICAgICAgICAgICAgPHRkPjwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgPC90YWJsZT4KICAgIDwvYm9keT4KIDwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBUYWJsZS1jYXB0aW9uPC90aXRsZT4KICAgICAgICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9Ik1pY3Jvc29mdCIgaHJlZj0iaHR0cDovL3d3dy5taWNyb3NvZnQuY29tLyI+CiAgICAgICAgPGxpbmsgcmVsPSJoZWxwIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCN0YWJsZS1kaXNwbGF5Ij4KICAgICAgICA8bWV0YSBuYW1lPSJmbGFncyIgY29udGVudD0iIj4KICAgICAgICA8bWV0YSBuYW1lPSJhc3NlcnQiIGNvbnRlbnQ9IkFuIGVsZW1lbnQgd2l0aCAnZGlzcGxheTogdGFibGUtY2FwdGlvbicgaXMgcmVuZGVyZWQgYXMgaWYgaXQgd2VyZSBhIHRhYmxlIGNhcHRpb24uIj4KICAgICAgICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgogICAgICAgICAgICAudGFibGUKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgZGlzcGxheTogdGFibGU7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgLmNhcHRpb24KICAgICAgICAgICAgewogICAgICAgICAgICAgICAgZGlzcGxheTogdGFibGUtY2FwdGlvbjsKICAgICAgICAgICAgfQogICAgICAgICAgICAudHIKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgZGlzcGxheTogdGFibGUtcm93OwogICAgICAgICAgICB9CiAgICAgICAgICAgIC50ZAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiBibGFjazsKICAgICAgICAgICAgICAgIGRpc3BsYXk6IHRhYmxlLWNlbGw7CiAgICAgICAgICAgICAgICBoZWlnaHQ6IDNlbTsKICAgICAgICAgICAgICAgIHdpZHRoOiAzZW07CiAgICAgICAgICAgIH0KICAgICAgICA8L3N0eWxlPgogICAgPC9oZWFkPgogICAgPGJvZHk+CiAgICAgICAgPHA+VGVzdCBwYXNzZXMgaWYgdGhlICJGaWxsZXIgVGV4dCIgaXMgYWJvdmUgdGhlIGJveC48L3A+CiAgICAgICAgPGRpdiBjbGFzcz0idGFibGUiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXB0aW9uIj5GaWxsZXIgVGV4dDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ciI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZCI+PC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZCI+PC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ciI+CiAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idGQiPjwvZGl2PgogICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRkIj48L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICA8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBUYWJsZXMgd2l0aCBhbmQgd2l0aG91dCB0aGUgb3B0aW9uYWwgY2FwdGlvbjwvdGl0bGU+CiAgICAgICAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJNaWNyb3NvZnQiIGhyZWY9Imh0dHA6Ly93d3cubWljcm9zb2Z0LmNvbS8iPgogICAgICAgIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjdGFibGUtZGlzcGxheSI+CiAgICAgICAgPG1ldGEgbmFtZT0iZmxhZ3MiIGNvbnRlbnQ9Im1heSI+CiAgICAgICAgPG1ldGEgbmFtZT0iYXNzZXJ0IiBjb250ZW50PSJUaGUgdGFibGUgY2FwdGlvbiBpcyBvcHRpb25hbCAtIGEgdGFibGUgY2FuIGJlIHJlbmRlcmVkIHdpdGggb3Igd2l0aG91dCBpdC4iPgogICAgICAgIDxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+CiAgICAgICAgICAgIC50YWJsZQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBkaXNwbGF5OiB0YWJsZTsKICAgICAgICAgICAgfQogICAgICAgICAgICAuY2FwdGlvbgogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBkaXNwbGF5OiB0YWJsZS1jYXB0aW9uOwogICAgICAgICAgICB9CiAgICAgICAgICAgIC50cgogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBkaXNwbGF5OiB0YWJsZS1yb3c7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgLnRkCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IGJsYWNrOwogICAgICAgICAgICAgICAgZGlzcGxheTogdGFibGUtY2VsbDsKICAgICAgICAgICAgICAgIGhlaWdodDogNTBweDsKICAgICAgICAgICAgICAgIHdpZHRoOiA1MHB4OwogICAgICAgICAgICB9CiAgICAgICAgPC9zdHlsZT4KICAgIDwvaGVhZD4KICAgIDxib2R5PgogICAgICAgIDxwPlRlc3QgcGFzc2VzIGlmIHRoZSB0b3Agc3F1YXJlIGJlbG93IGhhcyAiRmlsbGVyIFRleHQiIGRpcmVjdGx5IGFib3ZlIGl0IGFuZCB0aGUgYm90dG9tIHNxdWFyZSBkb2VzIG5vdC48L3A+CiAgICAgICAgPGRpdiBjbGFzcz0idGFibGUiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXB0aW9uIj5GaWxsZXIgVGV4dDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ciI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZCI+PC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZCI+PC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ciI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZCI+PC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZCI+PC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXY+Jm5ic3A7PC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0idGFibGUiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ciI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZCI+PC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZCI+PC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ciI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZCI+PC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZCI+PC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgPC9ib2R5PgogPC9odG1sPg==",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBJbmxpbmUtdGFibGVzIHdpdGggYW5kIHdpdGhvdXQgdGhlIG9wdGlvbmFsIGNhcHRpb248L3RpdGxlPgogICAgICAgIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iTWljcm9zb2Z0IiBocmVmPSJodHRwOi8vd3d3Lm1pY3Jvc29mdC5jb20vIj4KICAgICAgICA8bGluayByZWw9ImhlbHAiIGhyZWY9Imh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL3RhYmxlcy5odG1sI3RhYmxlLWRpc3BsYXkiPgogICAgICAgIDxtZXRhIG5hbWU9ImZsYWdzIiBjb250ZW50PSJtYXkiPgogICAgICAgIDxtZXRhIG5hbWU9ImFzc2VydCIgY29udGVudD0iQSBjYXB0aW9uIG9uIGFuIGlubGluZS10YWJsZSBpcyBvcHRpb25hbCAtIGFuIGlubGluZSB0YWJsZSBjYW4gYmUgcmVuZGVyZWQgd2l0aCBvciB3aXRob3V0IGl0LiI+CiAgICAgICAgPHN0eWxlIHR5cGU9InRleHQvY3NzIj4KICAgICAgICAgICAgLnRhYmxlCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZS10YWJsZTsKICAgICAgICAgICAgfQogICAgICAgICAgICAuY2FwdGlvbgogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBkaXNwbGF5OiB0YWJsZS1jYXB0aW9uOwogICAgICAgICAgICB9CiAgICAgICAgICAgIC50cgogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBkaXNwbGF5OiB0YWJsZS1yb3c7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgLnRkCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IGJsYWNrOwogICAgICAgICAgICAgICAgZGlzcGxheTogdGFibGUtY2VsbDsKICAgICAgICAgICAgICAgIGhlaWdodDogNTBweDsKICAgICAgICAgICAgICAgIHdpZHRoOiA1MHB4OwogICAgICAgICAgICB9CiAgICAgICAgPC9zdHlsZT4KICAgIDwvaGVhZD4KICAgIDxib2R5PgogICAgICAgIDxwPlRlc3QgcGFzc2VzIGlmIHRoZSBsZWZ0IHNxdWFyZSBiZWxvdyBoYXMgIkZpbGxlciBUZXh0IiBkaXJlY3RseSBhYm92ZSBpdCBhbmQgdGhlIHNxdWFyZSBvbiB0aGUgcmlnaHQgZG9lcyBub3QuPC9wPgogICAgICAgIDxkaXY+CiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ0YWJsZSI+CiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iY2FwdGlvbiI+RmlsbGVyIFRleHQ8L3NwYW4+CiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0idHIiPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ0ZCI+PC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ0ZCI+PC9zcGFuPgogICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InRyIj4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0idGQiPjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0idGQiPjwvc3Bhbj4KICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAmbmJzcDsmbmJzcDsKICAgICAgICAgICAgPHNwYW4gY2xhc3M9InRhYmxlIj4KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ0ciI+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InRkIj48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InRkIj48L3NwYW4+CiAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0idHIiPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ0ZCI+PC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ0ZCI+PC9zcGFuPgogICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgPC9kaXY+CiAgICA8L2JvZHk+CiA8L2h0bWw+",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBUYWJsZS1jZWxsPC90aXRsZT4KICAgICAgICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9Ik1pY3Jvc29mdCIgaHJlZj0iaHR0cDovL3d3dy5taWNyb3NvZnQuY29tLyI+CiAgICAgICAgPGxpbmsgcmVsPSJoZWxwIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCN0YWJsZS1kaXNwbGF5Ij4KICAgICAgICA8bWV0YSBuYW1lPSJmbGFncyIgY29udGVudD0iIj4KICAgICAgICA8bWV0YSBuYW1lPSJhc3NlcnQiIGNvbnRlbnQ9IkFuIGVsZW1lbnQgd2l0aCAnZGlzcGxheTogdGFibGUtY2VsbCcgaXMgcmVuZGVyZWQgYXMgaWYgaXQgd2VyZSBhIHRhYmxlIGNlbGwuIj4KICAgICAgICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgogICAgICAgICAgICAudGFibGUKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgZGlzcGxheTogdGFibGU7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgLnRyCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGRpc3BsYXk6IHRhYmxlLXJvdzsKICAgICAgICAgICAgfQogICAgICAgICAgICAudGQKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYmFja2dyb3VuZDogYmxhY2s7CiAgICAgICAgICAgICAgICBkaXNwbGF5OiB0YWJsZS1jZWxsOwogICAgICAgICAgICAgICAgaGVpZ2h0OiAyZW07CiAgICAgICAgICAgICAgICB3aWR0aDogMmVtOwogICAgICAgICAgICB9CiAgICAgICAgPC9zdHlsZT4KICAgIDwvaGVhZD4KICAgIDxib2R5PgogICAgICAgIDxwPlRlc3QgcGFzc2VzIGlmIHRoZXJlIGlzIGEgc3F1YXJlIGJlbG93LjwvcD4KICAgICAgICA8ZGl2IGNsYXNzPSJ0YWJsZSI+CiAgICAgICAgICAgPGRpdiBjbGFzcz0idHIiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idGQiPjwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idGQiPjwvZGl2PgogICAgICAgICAgIDwvZGl2PgogICAgICAgICAgIDxkaXYgY2xhc3M9InRyIj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRkIj48L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRkIj48L2Rpdj4KICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgIDwvYm9keT4KPC9odG1sPg==",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBUYWJsZS1jb2x1bW48L3RpdGxlPgogICAgICAgIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iTWljcm9zb2Z0IiBocmVmPSJodHRwOi8vd3d3Lm1pY3Jvc29mdC5jb20vIj4KICAgICAgICA8bGluayByZWw9ImhlbHAiIGhyZWY9Imh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL3RhYmxlcy5odG1sI3RhYmxlLWRpc3BsYXkiPgogICAgICAgIDxtZXRhIG5hbWU9ImZsYWdzIiBjb250ZW50PSIiPgogICAgICAgIDxtZXRhIG5hbWU9ImFzc2VydCIgY29udGVudD0iQW4gZWxlbWVudCB3aXRoICdkaXNwbGF5OiB0YWJsZS1jb2x1bW4nIGFzIGlmIGl0IHdlcmUgYSB0YWJsZSBjb2x1bW4uIj4KICAgICAgICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgogICAgICAgICAgICAudGFibGUKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgZGlzcGxheTogdGFibGU7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgLmNvbHVtbgogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiBibGFjazsKICAgICAgICAgICAgICAgIGRpc3BsYXk6IHRhYmxlLWNvbHVtbjsKICAgICAgICAgICAgfQogICAgICAgICAgICAudHIKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgZGlzcGxheTogdGFibGUtcm93OwogICAgICAgICAgICB9CiAgICAgICAgICAgIC50ZAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBkaXNwbGF5OiB0YWJsZS1jZWxsOwogICAgICAgICAgICAgICAgaGVpZ2h0OiAyZW07CiAgICAgICAgICAgICAgICB3aWR0aDogMmVtOwogICAgICAgICAgICB9CiAgICAgICAgPC9zdHlsZT4KICAgIDwvaGVhZD4KICAgIDxib2R5PgogICAgICAgIDxwPlRlc3QgcGFzc2VzIGlmIHRoZXJlIGlzIGEgc3F1YXJlIGJlbG93LjwvcD4KICAgICAgICA8ZGl2IGNsYXNzPSJ0YWJsZSI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbHVtbiI+PC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbHVtbiI+PC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InRyIj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRkIj48L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRkIj48L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InRyIj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRkIj48L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRkIj48L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICA8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBUYWJsZS1jb2x1bW4tZ3JvdXA8L3RpdGxlPgogICAgICAgIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iTWljcm9zb2Z0IiBocmVmPSJodHRwOi8vd3d3Lm1pY3Jvc29mdC5jb20vIj4KICAgICAgICA8bGluayByZWw9ImhlbHAiIGhyZWY9Imh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL3RhYmxlcy5odG1sI3RhYmxlLWRpc3BsYXkiPgogICAgICAgIDxtZXRhIG5hbWU9ImZsYWdzIiBjb250ZW50PSIiPgogICAgICAgIDxtZXRhIG5hbWU9ImFzc2VydCIgY29udGVudD0iQW4gZWxlbWVudCB3aXRoICdkaXNwbGF5OiB0YWJsZS1jb2x1bW4tZ3JvdXAnIGlzIHJlbmRlcmVkIGFzIGlmIGl0IHdlcmUgYSB0YWJsZSBjb2x1bW4gZ3JvdXAuIj4KICAgICAgICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgogICAgICAgICAgICAjdGFibGUKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgZGlzcGxheTogdGFibGU7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgLmNvbGdyb3VwCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IGJsYWNrOwogICAgICAgICAgICAgICAgZGlzcGxheTogdGFibGUtY29sdW1uLWdyb3VwOwogICAgICAgICAgICB9CiAgICAgICAgICAgIC5jb2x1bW4KICAgICAgICAgICAgewogICAgICAgICAgICAgICAgZGlzcGxheTogdGFibGUtY29sdW1uOwogICAgICAgICAgICB9CiAgICAgICAgICAgIC50cgogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBkaXNwbGF5OiB0YWJsZS1yb3c7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgLnRkCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGRpc3BsYXk6IHRhYmxlLWNlbGw7CiAgICAgICAgICAgICAgICB3aWR0aDogMmVtOwogICAgICAgICAgICAgICAgaGVpZ2h0OiAyZW07CiAgICAgICAgICAgIH0KICAgICAgICA8L3N0eWxlPgogICAgPC9oZWFkPgogICAgPGJvZHk+CiAgICAgICAgPHA+VGVzdCBwYXNzZXMgaWYgdGhlcmUgaXMgYSBzcXVhcmUgYmVsb3cuPC9wPgogICAgICAgIDxkaXYgaWQ9InRhYmxlIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sZ3JvdXAiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sdW1uIj48L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbHVtbiI+PC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2xncm91cCI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2x1bW4iPjwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sdW1uIj48L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InRyIj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRkIj48L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRkIj48L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRkIj48L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRkIj48L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InRyIj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRkIj48L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRkIj48L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRkIj48L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRkIj48L2Rpdj4KICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ciI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZCI+PC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZCI+PC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZCI+PC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZCI+PC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ciI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZCI+PC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZCI+PC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZCI+PC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZCI+PC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgPC9ib2R5Pgo8L2h0bWw+",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBUYWJsZSBjb2x1bW5zIGFyZSBub3QgcmVuZGVyZWQ8L3RpdGxlPgogICAgICAgIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iTWljcm9zb2Z0IiBocmVmPSJodHRwOi8vd3d3Lm1pY3Jvc29mdC5jb20vIj4KICAgICAgICA8bGluayByZWw9ImhlbHAiIGhyZWY9Imh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL3RhYmxlcy5odG1sI3RhYmxlLWRpc3BsYXkiPgogICAgICAgIDxtZXRhIG5hbWU9ImZsYWdzIiBjb250ZW50PSIiPgogICAgICAgIDxtZXRhIG5hbWU9ImFzc2VydCIgY29udGVudD0iVGFibGUgY29sdW1ucyBpbiB0aGVtc2VsdmVzIGFyZSBub3QgcmVuZGVyZWQuIj4KICAgICAgICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgogICAgICAgICAgICAjdGFibGUKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgZGlzcGxheTogdGFibGU7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NvbAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiByZWQ7CiAgICAgICAgICAgICAgICBkaXNwbGF5OiB0YWJsZS1jb2x1bW47CiAgICAgICAgICAgICAgICBoZWlnaHQ6IDVlbTsKICAgICAgICAgICAgICAgIHdpZHRoOiA1ZW07CiAgICAgICAgICAgIH0KICAgICAgICA8L3N0eWxlPgogICAgPC9oZWFkPgogICAgPGJvZHk+CiAgICAgICAgPHA+VGVzdCBwYXNzZXMgaWYgdGhlcmUgaXMgbm8gcmVkIHZpc2libGUgb24gdGhlIHBhZ2UuPC9wPgogICAgICAgIDxkaXYgaWQ9InRhYmxlIj4KICAgICAgICAgICAgPGRpdiBpZD0iY29sIj48L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgIDwvYm9keT4KIDwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBUYWJsZSBjb2x1bW4gZ3JvdXBzIGFyZSBub3QgcmVuZGVyZWQ8L3RpdGxlPgogICAgICAgIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iTWljcm9zb2Z0IiBocmVmPSJodHRwOi8vd3d3Lm1pY3Jvc29mdC5jb20vIj4KICAgICAgICA8bGluayByZWw9ImhlbHAiIGhyZWY9Imh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL3RhYmxlcy5odG1sI3RhYmxlLWRpc3BsYXkiPgogICAgICAgIDxtZXRhIG5hbWU9ImZsYWdzIiBjb250ZW50PSIiPgogICAgICAgIDxtZXRhIG5hbWU9ImFzc2VydCIgY29udGVudD0iVGFibGUgY29sdW1uIGdyb3VwcyBpbiB0aGVtc2VsdmVzIGFyZSBub3QgcmVuZGVyZWQuIj4KICAgICAgICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgogICAgICAgICAgICAjdGFibGUKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgZGlzcGxheTogdGFibGU7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NvbGdyb3VwCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IHJlZDsKICAgICAgICAgICAgICAgIGRpc3BsYXk6IHRhYmxlLWNvbHVtbi1ncm91cDsKICAgICAgICAgICAgICAgIGhlaWdodDogNWVtOwogICAgICAgICAgICAgICAgd2lkdGg6IDVlbTsKICAgICAgICAgICAgfQogICAgICAgIDwvc3R5bGU+CiAgICA8L2hlYWQ+CiAgICA8Ym9keT4KICAgICAgICA8cD5UZXN0IHBhc3NlcyBpZiB0aGVyZSBpcyBubyByZWQgdmlzaWJsZSBvbiB0aGUgcGFnZS48L3A+CiAgICAgICAgPGRpdiBpZD0idGFibGUiPgogICAgICAgICAgICA8ZGl2IGlkPSJjb2xncm91cCI+PC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICA8L2JvZHk+CiA8L2h0bWw+",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBUYWJsZSBjb2x1bW5zIGNhbiBpbmR1Y2UgYSBzdHlsZSBvbiB0aGVpciBjZWxsczwvdGl0bGU+CiAgICAgICAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJNaWNyb3NvZnQiIGhyZWY9Imh0dHA6Ly93d3cubWljcm9zb2Z0LmNvbS8iPgogICAgICAgIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjdGFibGUtZGlzcGxheSI+CiAgICAgICAgPG1ldGEgbmFtZT0iZmxhZ3MiIGNvbnRlbnQ9IiI+CiAgICAgICAgPG1ldGEgbmFtZT0iYXNzZXJ0IiBjb250ZW50PSJUYWJsZSBjb2x1bW5zIGNhbiBpbmR1Y2UgYSBzdHlsZSAoYmFja2dyb3VuZC1jb2xvcikgb24gdGhlIGNlbGxzIHRoZXkgb2NjdXB5LiI+CiAgICAgICAgPHN0eWxlIHR5cGU9InRleHQvY3NzIj4KICAgICAgICAgICAgLnRhYmxlCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGRpc3BsYXk6IHRhYmxlOwogICAgICAgICAgICB9CiAgICAgICAgICAgIC5jb2wKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgZGlzcGxheTogdGFibGUtY29sdW1uOwogICAgICAgICAgICB9CiAgICAgICAgICAgICN0ZXN0CiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IGJsdWU7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgLnRyCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGRpc3BsYXk6IHRhYmxlLXJvdzsKICAgICAgICAgICAgfQogICAgICAgICAgICAudGQKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyOiAxcHggc29saWQgYmxhY2s7CiAgICAgICAgICAgICAgICBkaXNwbGF5OiB0YWJsZS1jZWxsOwogICAgICAgICAgICAgICAgaGVpZ2h0OiAyZW07CiAgICAgICAgICAgICAgICB3aWR0aDogMmVtOwogICAgICAgICAgICB9CiAgICAgICAgPC9zdHlsZT4KICAgIDwvaGVhZD4KICAgIDxib2R5PgogICAgICAgIDxwPlRlc3QgcGFzc2VzIGlmIHRoZSBtaWRkbGUgY29sdW1uIG9mIHRoZSB0aHJlZS1ieS10aHJlZSB0YWJsZSBiZWxvdyBpcyBibHVlLjwvcD4KICAgICAgICA8ZGl2IGNsYXNzPSJ0YWJsZSI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbCI+PC9kaXY+CiAgICAgICAgICAgIDxkaXYgaWQ9InRlc3QiIGNsYXNzPSJjb2wiPjwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wiPjwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ciI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZCI+PC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZCI+PC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZCI+PC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ciI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZCI+PC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZCI+PC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZCI+PC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ciI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZCI+PC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZCI+PC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZCI+PC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgPC9ib2R5PgogPC9odG1sPg==",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBUYWJsZSBjb2x1bW4gZ3JvdXBzIGNhbiBpbmR1Y2UgYSBzdHlsZSBvbiB0aGVpciBjZWxsczwvdGl0bGU+CiAgICAgICAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJNaWNyb3NvZnQiIGhyZWY9Imh0dHA6Ly93d3cubWljcm9zb2Z0LmNvbS8iPgogICAgICAgIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjdGFibGUtZGlzcGxheSI+CiAgICAgICAgPG1ldGEgbmFtZT0iZmxhZ3MiIGNvbnRlbnQ9IiI+CiAgICAgICAgPG1ldGEgbmFtZT0iYXNzZXJ0IiBjb250ZW50PSJUYWJsZSBjb2x1bW4gZ3JvdXBzIGNhbiBpbmR1Y2UgYSBzdHlsZSAoYmFja2dyb3VuZC1jb2xvcikgb24gdGhlIGNlbGxzIHRoZXkgb2NjdXB5LiI+CiAgICAgICAgPHN0eWxlIHR5cGU9InRleHQvY3NzIj4KICAgICAgICAgICAgLnRhYmxlCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGRpc3BsYXk6IHRhYmxlOwogICAgICAgICAgICB9CiAgICAgICAgICAgIC5jb2xncm91cAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBkaXNwbGF5OiB0YWJsZS1jb2x1bW4tZ3JvdXA7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI3Rlc3QKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYmFja2dyb3VuZDogYmx1ZTsKICAgICAgICAgICAgfQogICAgICAgICAgICAuY29sCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGRpc3BsYXk6IHRhYmxlLWNvbHVtbjsKICAgICAgICAgICAgfQogICAgICAgICAgICAudHIKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgZGlzcGxheTogdGFibGUtcm93OwogICAgICAgICAgICB9CiAgICAgICAgICAgIC50ZAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXI6IDFweCBzb2xpZCBibGFjazsKICAgICAgICAgICAgICAgIGRpc3BsYXk6IHRhYmxlLWNlbGw7CiAgICAgICAgICAgICAgICBoZWlnaHQ6IDJlbTsKICAgICAgICAgICAgICAgIHdpZHRoOiAyZW07CiAgICAgICAgICAgIH0KICAgICAgICA8L3N0eWxlPgogICAgPC9oZWFkPgogICAgPGJvZHk+CiAgICAgICAgPHA+VGVzdCBwYXNzZXMgaWYgdGhlIG1pZGRsZSBjb2x1bW4gb2YgdGhlIHRocmVlLWJ5LXRocmVlIHRhYmxlIGJlbG93IGlzIGJsdWUuPC9wPgogICAgICAgIDxkaXYgY2xhc3M9InRhYmxlIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sZ3JvdXAiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sIj48L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbGdyb3VwIiBpZD0idGVzdCI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wiPjwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sZ3JvdXAiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sIj48L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InRyIj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRkIj48L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRkIj48L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRkIj48L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InRyIj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRkIj48L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRkIj48L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRkIj48L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InRyIj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRkIj48L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRkIj48L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRkIj48L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICA8L2JvZHk+CiA8L2h0bWw+",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBUYWJsZS1mb290ZXItZ3JvdXA8L3RpdGxlPgogICAgICAgIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iTWljcm9zb2Z0IiBocmVmPSJodHRwOi8vd3d3Lm1pY3Jvc29mdC5jb20vIj4KICAgICAgICA8bGluayByZWw9ImhlbHAiIGhyZWY9Imh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL3RhYmxlcy5odG1sI3RhYmxlLWRpc3BsYXkiPgogICAgICAgIDxtZXRhIG5hbWU9ImZsYWdzIiBjb250ZW50PSIiPgogICAgICAgIDxtZXRhIG5hbWU9ImFzc2VydCIgY29udGVudD0iQW4gZWxlbWVudCB3aXRoICdkaXNwbGF5OiB0YWJsZS1mb290ZXItZ3JvdXAnIGlzIHJlbmRlcmVkIGFzIGlmIGl0IHdlcmUgYSB0YWJsZSBmb290ZXIgZ3JvdXAuIj4KICAgICAgICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgogICAgICAgICAgICAudGFibGUKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYmFja2dyb3VuZDogYmx1ZTsKICAgICAgICAgICAgICAgIGJvcmRlcjogMnB4IHNvbGlkIGJsYWNrOwogICAgICAgICAgICAgICAgZGlzcGxheTogdGFibGU7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgLmZvb3RlcgogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiB3aGl0ZTsKICAgICAgICAgICAgICAgIGRpc3BsYXk6IHRhYmxlLWZvb3Rlci1ncm91cDsKICAgICAgICAgICAgfQogICAgICAgICAgICAudHIKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgZGlzcGxheTogdGFibGUtcm93OwogICAgICAgICAgICB9CiAgICAgICAgICAgIC50ZAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBkaXNwbGF5OiB0YWJsZS1jZWxsOwogICAgICAgICAgICAgICAgaGVpZ2h0OiAyZW07CiAgICAgICAgICAgICAgICB3aWR0aDogMmVtOwogICAgICAgICAgICB9CiAgICAgICAgPC9zdHlsZT4KICAgIDwvaGVhZD4KICAgIDxib2R5PgogICAgICAgIDxwPlRlc3QgcGFzc2VzIGlmIHRoZXJlIGlzIGEgc3F1YXJlIGJlbG93LCBhbmQgdGhlIHRvcCBoYWxmIG9mIHRoZSBzcXVhcmUgaXMgYmx1ZS48L3A+CiAgICAgICAgPGRpdiBjbGFzcz0idGFibGUiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJmb290ZXIiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idHIiPgogICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZCI+PC9kaXY+CiAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRkIj48L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idGQiPjwvZGl2PgogICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZCI+PC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRyIj4KICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idGQiPjwvZGl2PgogICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZCI+PC9kaXY+CiAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRkIj48L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idGQiPjwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ciI+CiAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idGQiPjwvZGl2PgogICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRkIj48L2Rpdj4KICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZCI+PC9kaXY+CiAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idGQiPjwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0idHIiPgogICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRkIj48L2Rpdj4KICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZCI+PC9kaXY+CiAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idGQiPjwvZGl2PgogICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRkIj48L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICA8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBUYWJsZSBmb290ZXIgZ3JvdXAgYW5kIG90aGVyIHJvdyBncm91cHM8L3RpdGxlPgogICAgICAgIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iTWljcm9zb2Z0IiBocmVmPSJodHRwOi8vd3d3Lm1pY3Jvc29mdC5jb20vIj4KICAgICAgICA8bGluayByZWw9ImhlbHAiIGhyZWY9Imh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL3RhYmxlcy5odG1sI3RhYmxlLWRpc3BsYXkiPgogICAgICAgIDxtZXRhIG5hbWU9ImZsYWdzIiBjb250ZW50PSIiPgogICAgICAgIDxtZXRhIG5hbWU9ImFzc2VydCIgY29udGVudD0iQSB0YWJsZS1mb290ZXItZ3JvdXAgZWxlbWVudCBpcyBwbGFjZWQgYWZ0ZXIgYWxsIG90aGVyIHJvdyBncm91cHMgaW4gYSB0YWJsZS4iPgogICAgICAgIDxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+CiAgICAgICAgICAgIC50YWJsZQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBkaXNwbGF5OiB0YWJsZTsKICAgICAgICAgICAgfQogICAgICAgICAgICAjdGhlYWQKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYmFja2dyb3VuZDogb3JhbmdlOwogICAgICAgICAgICAgICAgZGlzcGxheTogdGFibGUtaGVhZGVyLWdyb3VwOwogICAgICAgICAgICB9CiAgICAgICAgICAgICN0Ym9keQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiBvcmFuZ2U7CiAgICAgICAgICAgICAgICBkaXNwbGF5OiB0YWJsZS1yb3ctZ3JvdXA7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI3Rmb290CiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IGJsdWU7CiAgICAgICAgICAgICAgICBkaXNwbGF5OiB0YWJsZS1mb290ZXItZ3JvdXA7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgLnRyCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGRpc3BsYXk6IHRhYmxlLXJvdzsKICAgICAgICAgICAgfQogICAgICAgICAgICAudGQKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgZGlzcGxheTogdGFibGUtY2VsbDsKICAgICAgICAgICAgICAgIGhlaWdodDogNGVtOwogICAgICAgICAgICAgICAgd2lkdGg6IDRlbTsKICAgICAgICAgICAgfQogICAgICAgIDwvc3R5bGU+CiAgICA8L2hlYWQ+CiAgICA8Ym9keT4KICAgICAgICA8cD5UZXN0IHBhc3NlcyBpZiB0aGUgYmx1ZSBzcXVhcmUgYmVsb3cgaXMgc3RhY2tlZCBiZWxvdyB0aGUgb3JhbmdlIGJveC48L3A+CiAgICAgICAgPGRpdiBjbGFzcz0idGFibGUiPgogICAgICAgICAgICA8ZGl2IGlkPSJ0Zm9vdCI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ciI+CiAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRkIj48L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBpZD0idGJvZHkiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idHIiPgogICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZCI+PC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgaWQ9InRoZWFkIj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRyIj4KICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idGQiPjwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgPC9ib2R5Pgo8L2h0bWw+",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBUYWJsZSBmb290ZXIgZ3JvdXAgYW5kIHRvcCBjYXB0aW9uczwvdGl0bGU+CiAgICAgICAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJNaWNyb3NvZnQiIGhyZWY9Imh0dHA6Ly93d3cubWljcm9zb2Z0LmNvbS8iPgogICAgICAgIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjdGFibGUtZGlzcGxheSI+CiAgICAgICAgPG1ldGEgbmFtZT0iZmxhZ3MiIGNvbnRlbnQ9IiI+CiAgICAgICAgPG1ldGEgbmFtZT0iYXNzZXJ0IiBjb250ZW50PSJBIHRhYmxlLWZvb3Rlci1ncm91cCBlbGVtZW50IGlzIHBsYWNlZCBiZWZvcmUgYW55IGJvdHRvbSBjYXB0aW9ucy4iPgogICAgICAgIDxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+CiAgICAgICAgICAgIC50YWJsZQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBkaXNwbGF5OiB0YWJsZTsKICAgICAgICAgICAgfQogICAgICAgICAgICAuY2FwdGlvbgogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiBvcmFuZ2U7CiAgICAgICAgICAgICAgICBib3JkZXI6IDFweCBzb2xpZCBibGFjazsKICAgICAgICAgICAgICAgIGNhcHRpb24tc2lkZTogYm90dG9tOwogICAgICAgICAgICAgICAgY29sb3I6IG9yYW5nZTsKICAgICAgICAgICAgICAgIGRpc3BsYXk6IHRhYmxlLWNhcHRpb247CiAgICAgICAgICAgICAgICBoZWlnaHQ6IDRlbTsKICAgICAgICAgICAgICAgIHdpZHRoOiA0ZW07CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI3Rmb290CiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IGJsdWU7CiAgICAgICAgICAgICAgICBkaXNwbGF5OiB0YWJsZS1mb290ZXItZ3JvdXA7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI3Rib2R5CiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IG9yYW5nZTsKICAgICAgICAgICAgICAgIGRpc3BsYXk6IHRhYmxlLXJvdy1ncm91cDsKICAgICAgICAgICAgfQogICAgICAgICAgICAudHIKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgZGlzcGxheTogdGFibGUtcm93OwogICAgICAgICAgICB9CiAgICAgICAgICAgIC50ZAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXI6IDFweCBzb2xpZCBibGFjazsKICAgICAgICAgICAgICAgIGRpc3BsYXk6IHRhYmxlLWNlbGw7CiAgICAgICAgICAgICAgICBoZWlnaHQ6IDRlbTsKICAgICAgICAgICAgICAgIHdpZHRoOiA0ZW07CiAgICAgICAgICAgIH0KICAgICAgICA8L3N0eWxlPgogICAgPC9oZWFkPgogICAgPGJvZHk+CiAgICAgICAgPHA+VGVzdCBwYXNzZXMgaWYgdGhlIGJsdWUgc3F1YXJlIGJlbG93IGlzIHN0YWNrZWQgYWJvdmUgZWl0aGVyIG9uZSBvciB0d28gb3JhbmdlIHNxdWFyZXMgYW5kIGhhcyBvbmUgb3JhbmdlIHNxdWFyZSBhYm92ZSBpdC48L3A+CiAgICAgICAgPGRpdiBjbGFzcz0idGFibGUiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXB0aW9uIj48L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2FwdGlvbiI+PC9kaXY+CiAgICAgICAgICAgIDxkaXYgaWQ9InRmb290Ij4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRyIj4KICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idGQiPjwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGlkPSJ0Ym9keSI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ciI+CiAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRkIj48L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgIDwvYm9keT4KPC9odG1sPg==",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBSZXBlYXRpbmcgdGFibGUgZm9vdGVyIGdyb3VwcyBpbiBwYWdlZCBtZWRpYTwvdGl0bGU+CiAgICAgICAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJNaWNyb3NvZnQiIGhyZWY9Imh0dHA6Ly93d3cubWljcm9zb2Z0LmNvbS8iPgogICAgICAgIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjdGFibGUtZGlzcGxheSI+CiAgICAgICAgPG1ldGEgbmFtZT0iZmxhZ3MiIGNvbnRlbnQ9Im1heSBwYWdlZCI+CiAgICAgICAgPG1ldGEgbmFtZT0iYXNzZXJ0IiBjb250ZW50PSJQcmludCB1c2VyIGFnZW50cyBtYXkgcmVwZWF0IGZvb3RlciByb3dzIG9uIGVhY2ggcGFnZSBzcGFubmVkIGJ5IGEgdGFibGUgKG5vbi1ub3JtYXRpdmUgcnVsZSkuIj4KICAgICAgICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgogICAgICAgICAgICAudGFibGUKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgZGlzcGxheTogdGFibGU7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI3Rmb290CiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IG9yYW5nZTsKICAgICAgICAgICAgICAgIGRpc3BsYXk6IHRhYmxlLWZvb3Rlci1ncm91cDsKICAgICAgICAgICAgfQogICAgICAgICAgICAjdGJvZHkKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgZGlzcGxheTogdGFibGUtcm93LWdyb3VwOwogICAgICAgICAgICB9CiAgICAgICAgICAgIC50cgogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBkaXNwbGF5OiB0YWJsZS1yb3c7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgLnRkCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlcjogMXB4IHNvbGlkIGJsYWNrOwogICAgICAgICAgICAgICAgZGlzcGxheTogdGFibGUtY2VsbDsKICAgICAgICAgICAgICAgIGhlaWdodDogNGVtOwogICAgICAgICAgICAgICAgd2lkdGg6IDRlbTsKICAgICAgICAgICAgfQogICAgICAgIDwvc3R5bGU+CiAgICA8L2hlYWQ+CiAgICA8Ym9keT4KICAgICAgICA8cD5UZXN0IHBhc3NlcyBpZiB0aGUgIkZpbGxlciBUZXh0IiBiZWxvdyBlaXRoZXIgcmVwZWF0cyBvciBkb2Vzbid0IHJlcGVhdCBvbiB0aGUgYm90dG9tIG9mIGVhY2ggcGFnZSBpbiBwYWdlZCBtZWRpYSB2aWV3LjwvcD4KICAgICAgICA8ZGl2IGNsYXNzPSJ0YWJsZSI+CiAgICAgICAgICAgIDxkaXYgaWQ9InRmb290Ij4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRyIj4KICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idGQiPkZpbGxlciBUZXh0PC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgaWQ9InRib2R5Ij4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRyIj4KICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idGQiPjwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ciI+CiAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRkIj48L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idHIiPgogICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZCI+PC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRyIj4KICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idGQiPjwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ciI+CiAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRkIj48L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idHIiPgogICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZCI+PC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRyIj4KICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idGQiPjwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ciI+CiAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRkIj48L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idHIiPgogICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZCI+PC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRyIj4KICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idGQiPjwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ciI+CiAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRkIj48L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idHIiPgogICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZCI+PC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRyIj4KICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idGQiPjwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ciI+CiAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRkIj48L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idHIiPgogICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZCI+PC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRyIj4KICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idGQiPjwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ciI+CiAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRkIj48L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idHIiPgogICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZCI+PC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRyIj4KICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idGQiPjwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ciI+CiAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRkIj48L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idHIiPgogICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZCI+PC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRyIj4KICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idGQiPjwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ciI+CiAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRkIj48L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idHIiPgogICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZCI+PC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRyIj4KICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idGQiPjwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ciI+CiAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRkIj48L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idHIiPgogICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZCI+PC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICA8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBNdWx0aXBsZSB0YWJsZSBmb290ZXIgZ3JvdXBzPC90aXRsZT4KICAgICAgICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9Ik1pY3Jvc29mdCIgaHJlZj0iaHR0cDovL3d3dy5taWNyb3NvZnQuY29tLyI+CiAgICAgICAgPGxpbmsgcmVsPSJoZWxwIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCN0YWJsZS1kaXNwbGF5Ij4KICAgICAgICA8bWV0YSBuYW1lPSJmbGFncyIgY29udGVudD0iIj4KICAgICAgICA8bWV0YSBuYW1lPSJhc3NlcnQiIGNvbnRlbnQ9IkEgdGFibGUgY29udGFpbmluZyBtdWx0aXBsZSB0YWJsZS1mb290ZXItZ3JvdXAgZWxlbWVudHMgb25seSB1c2VzIHRoZSBmaXJzdCBvbmUgYXMgaXRzIGZvb3RlciBhbmQgdHJlYXRzIHRoZSBvdGhlcnMgYXMgdGFibGUgcm93IGdyb3Vwcy4iPgogICAgICAgIDxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+CiAgICAgICAgICAgIC50YWJsZQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBkaXNwbGF5OiB0YWJsZTsKICAgICAgICAgICAgfQogICAgICAgICAgICAudGZvb3QKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgZGlzcGxheTogdGFibGUtZm9vdGVyLWdyb3VwOwogICAgICAgICAgICB9CiAgICAgICAgICAgIC50Ym9keQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBkaXNwbGF5OiB0YWJsZS1yb3ctZ3JvdXA7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgLnRyCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGRpc3BsYXk6IHRhYmxlLXJvdzsKICAgICAgICAgICAgfQogICAgICAgICAgICAudGQKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyOiAxcHggc29saWQgYmxhY2s7CiAgICAgICAgICAgICAgICBjb2xvcjogYmx1ZTsKICAgICAgICAgICAgICAgIGRpc3BsYXk6IHRhYmxlLWNlbGw7CiAgICAgICAgICAgICAgICBmb250LXNpemU6IDNlbTsKICAgICAgICAgICAgICAgIHdpZHRoOiAxZW07CiAgICAgICAgICAgIH0KICAgICAgICA8L3N0eWxlPgogICAgPC9oZWFkPgogICAgPGJvZHk+CiAgICAgICAgPHA+VGVzdCBwYXNzZXMgaWYgZnJvbSB0b3AtdG8tYm90dG9tLCB0aGUgYm94ZXMgYXJlIGxhYmVsZWQgb25lIHRocm91Z2ggc2l4LjwvcD4KICAgICAgICA8ZGl2IGNsYXNzPSJ0YWJsZSI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InRib2R5Ij4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRyIj4KICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idGQiPjE8L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0idGZvb3QiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idHIiPgogICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZCI+NjwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0Zm9vdCI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ciI+CiAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRkIj4yPC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InRib2R5Ij4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRyIj4KICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idGQiPjM8L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0idGZvb3QiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idHIiPgogICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZCI+NDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0Ym9keSI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ciI+CiAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRkIj41PC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICA8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBUYWJsZS1oZWFkZXItZ3JvdXA8L3RpdGxlPgogICAgICAgIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iTWljcm9zb2Z0IiBocmVmPSJodHRwOi8vd3d3Lm1pY3Jvc29mdC5jb20vIj4KICAgICAgICA8bGluayByZWw9ImhlbHAiIGhyZWY9Imh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL3RhYmxlcy5odG1sI3RhYmxlLWRpc3BsYXkiPgogICAgICAgIDxtZXRhIG5hbWU9ImZsYWdzIiBjb250ZW50PSIiPgogICAgICAgIDxtZXRhIG5hbWU9ImFzc2VydCIgY29udGVudD0iQW4gZWxlbWVudCB3aXRoICdkaXNwbGF5OiB0YWJsZS1oZWFkZXItZ3JvdXAnIGlzIHJlbmRlcmVkIGFzIGlmIGl0IHdlcmUgYSB0YWJsZSBoZWFkZXIgZ3JvdXAuIj4KICAgICAgICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgogICAgICAgICAgICAudGFibGUKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyOiAycHggc29saWQgYmxhY2s7CiAgICAgICAgICAgICAgICBkaXNwbGF5OiB0YWJsZTsKICAgICAgICAgICAgfQogICAgICAgICAgICAuaGVhZGVyCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IGJsdWU7CiAgICAgICAgICAgICAgICBkaXNwbGF5OiB0YWJsZS1oZWFkZXItZ3JvdXA7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgLnRyCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGRpc3BsYXk6IHRhYmxlLXJvdzsKICAgICAgICAgICAgfQogICAgICAgICAgICAudGQKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgZGlzcGxheTogdGFibGUtY2VsbDsKICAgICAgICAgICAgICAgIGhlaWdodDogMmVtOwogICAgICAgICAgICAgICAgd2lkdGg6IDJlbTsKICAgICAgICAgICAgfQogICAgICAgIDwvc3R5bGU+CiAgICA8L2hlYWQ+CiAgICA8Ym9keT4KICAgICAgICA8cD5UZXN0IHBhc3NlcyBpZiB0aGVyZSBpcyBhIHNxdWFyZSBiZWxvdywgYW5kIHRoZSB0b3AgaGFsZiBvZiB0aGUgc3F1YXJlIGlzIGJsdWUuPC9wPgogICAgICAgIDxkaXYgY2xhc3M9InRhYmxlIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0idHIiPgogICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRkIj48L2Rpdj4KICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZCI+PC9kaXY+CiAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idGQiPjwvZGl2PgogICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRkIj48L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InRyIj4KICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZCI+PC9kaXY+CiAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idGQiPjwvZGl2PgogICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRkIj48L2Rpdj4KICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZCI+PC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJoZWFkZXIiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idHIiPgogICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZCI+PC9kaXY+CiAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRkIj48L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idGQiPjwvZGl2PgogICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZCI+PC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRyIj4KICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idGQiPjwvZGl2PgogICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZCI+PC9kaXY+CiAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRkIj48L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idGQiPjwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgPC9ib2R5Pgo8L2h0bWw+",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBUYWJsZSBoZWFkZXIgZ3JvdXAgYW5kIG90aGVyIHJvdyBncm91cHM8L3RpdGxlPgogICAgICAgIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iTWljcm9zb2Z0IiBocmVmPSJodHRwOi8vd3d3Lm1pY3Jvc29mdC5jb20vIj4KICAgICAgICA8bGluayByZWw9ImhlbHAiIGhyZWY9Imh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL3RhYmxlcy5odG1sI3RhYmxlLWRpc3BsYXkiPgogICAgICAgIDxtZXRhIG5hbWU9ImZsYWdzIiBjb250ZW50PSIiPgogICAgICAgIDxtZXRhIG5hbWU9ImFzc2VydCIgY29udGVudD0iQSB0YWJsZS1oZWFkZXItZ3JvdXAgZWxlbWVudCBpcyBwbGFjZWQgYmVmb3JlIGFsbCBvdGhlciByb3cgZ3JvdXBzIGluIGEgdGFibGUuIj4KICAgICAgICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgogICAgICAgICAgICAudGFibGUKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgZGlzcGxheTogdGFibGU7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI3RoZWFkCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IGJsdWU7CiAgICAgICAgICAgICAgICBkaXNwbGF5OiB0YWJsZS1oZWFkZXItZ3JvdXA7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI3Rib2R5CiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IG9yYW5nZTsKICAgICAgICAgICAgICAgIGRpc3BsYXk6IHRhYmxlLXJvdy1ncm91cDsKICAgICAgICAgICAgfQogICAgICAgICAgICAjdGZvb3QKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYmFja2dyb3VuZDogb3JhbmdlOwogICAgICAgICAgICAgICAgZGlzcGxheTogdGFibGUtZm9vdGVyLWdyb3VwOwogICAgICAgICAgICB9CiAgICAgICAgICAgIC50cgogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBkaXNwbGF5OiB0YWJsZS1yb3c7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgLnRkCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGRpc3BsYXk6IHRhYmxlLWNlbGw7CiAgICAgICAgICAgICAgICBoZWlnaHQ6IDRlbTsKICAgICAgICAgICAgICAgIHdpZHRoOiA0ZW07CiAgICAgICAgICAgIH0KICAgICAgICA8L3N0eWxlPgogICAgPC9oZWFkPgogICAgPGJvZHk+CiAgICAgICAgPHA+VGVzdCBwYXNzZXMgaWYgdGhlIGJsdWUgc3F1YXJlIGJlbG93IGlzIHN0YWNrZWQgb24gdG9wIG9mIHRoZSBvcmFuZ2UgYm94LjwvcD4KICAgICAgICA8ZGl2IGNsYXNzPSJ0YWJsZSI+CiAgICAgICAgICAgIDxkaXYgaWQ9InRmb290Ij4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRyIj4KICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idGQiPjwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGlkPSJ0Ym9keSI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ciI+CiAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRkIj48L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBpZD0idGhlYWQiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idHIiPgogICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZCI+PC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICA8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBUYWJsZSBoZWFkZXIgZ3JvdXAgYW5kIHRvcCBjYXB0aW9uczwvdGl0bGU+CiAgICAgICAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJNaWNyb3NvZnQiIGhyZWY9Imh0dHA6Ly93d3cubWljcm9zb2Z0LmNvbS8iPgogICAgICAgIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjdGFibGUtZGlzcGxheSI+CiAgICAgICAgPG1ldGEgbmFtZT0iZmxhZ3MiIGNvbnRlbnQ9IiI+CiAgICAgICAgPG1ldGEgbmFtZT0iYXNzZXJ0IiBjb250ZW50PSJBIHRhYmxlLWhlYWRlci1ncm91cCBlbGVtZW50IGlzIHBsYWNlZCBhZnRlciBhbnkgdG9wIGNhcHRpb25zLiI+CiAgICAgICAgPHN0eWxlIHR5cGU9InRleHQvY3NzIj4KICAgICAgICAgICAgLnRhYmxlCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGRpc3BsYXk6IHRhYmxlOwogICAgICAgICAgICB9CiAgICAgICAgICAgIC5jYXB0aW9uCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlcjogMXB4IHNvbGlkIGJsYWNrOwogICAgICAgICAgICAgICAgYmFja2dyb3VuZDogb3JhbmdlOwogICAgICAgICAgICAgICAgY2FwdGlvbi1zaWRlOiB0b3A7CiAgICAgICAgICAgICAgICBjb2xvcjogb3JhbmdlOwogICAgICAgICAgICAgICAgZGlzcGxheTogdGFibGUtY2FwdGlvbjsKICAgICAgICAgICAgICAgIGhlaWdodDogNGVtOwogICAgICAgICAgICAgICAgd2lkdGg6IDRlbTsKICAgICAgICAgICAgfQogICAgICAgICAgICAjdGhlYWQKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgZGlzcGxheTogdGFibGUtaGVhZGVyLWdyb3VwOwogICAgICAgICAgICAgICAgYmFja2dyb3VuZDogYmx1ZTsKICAgICAgICAgICAgfQogICAgICAgICAgICAjdGJvZHkKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgZGlzcGxheTogdGFibGUtcm93LWdyb3VwOwogICAgICAgICAgICAgICAgYmFja2dyb3VuZDogb3JhbmdlOwogICAgICAgICAgICB9CiAgICAgICAgICAgIC50cgogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBkaXNwbGF5OiB0YWJsZS1yb3c7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgLnRkCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGRpc3BsYXk6IHRhYmxlLWNlbGw7CiAgICAgICAgICAgICAgICBib3JkZXI6IDFweCBzb2xpZCBibGFjazsKICAgICAgICAgICAgICAgIGhlaWdodDogNGVtOwogICAgICAgICAgICAgICAgd2lkdGg6IDRlbTsKICAgICAgICAgICAgfQogICAgICAgIDwvc3R5bGU+CiAgICA8L2hlYWQ+CiAgICA8Ym9keT4KICAgICAgICA8cD5UZXN0IHBhc3NlcyBpZiB0aGUgYmx1ZSBzcXVhcmUgYmVsb3cgaXMgc3RhY2tlZCBiZW5lYXRoIGVpdGhlciBvbmUgb3IgdHdvIG9yYW5nZSBzcXVhcmVzIGFuZCBoYXMgb25lIG9yYW5nZSBzcXVhcmUgdW5kZXJuZWF0aCBpdC48L3A+CiAgICAgICAgPGRpdiBjbGFzcz0idGFibGUiPgogICAgICAgICAgICA8ZGl2IGlkPSJ0Ym9keSI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ciI+CiAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRkIj48L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBpZD0idGhlYWQiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idHIiPgogICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZCI+PC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcHRpb24iPjwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXB0aW9uIj48L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgIDwvYm9keT4KPC9odG1sPg==",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBSZXBlYXRpbmcgdGFibGUgaGVhZGVyIGdyb3VwcyBpbiBwYWdlZCBtZWRpYTwvdGl0bGU+CiAgICAgICAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJNaWNyb3NvZnQiIGhyZWY9Imh0dHA6Ly93d3cubWljcm9zb2Z0LmNvbS8iPgogICAgICAgIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjdGFibGUtZGlzcGxheSI+CiAgICAgICAgPG1ldGEgbmFtZT0iZmxhZ3MiIGNvbnRlbnQ9Im1heSBwYWdlZCI+CiAgICAgICAgPG1ldGEgbmFtZT0iYXNzZXJ0IiBjb250ZW50PSJQcmludCB1c2VyIGFnZW50cyBtYXkgcmVwZWF0IGhlYWRlciByb3dzIG9uIGVhY2ggcGFnZSBzcGFubmVkIGJ5IGEgdGFibGUgKG5vbi1ub3JtYXRpdmUgcnVsZSkuIj4KICAgICAgICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgogICAgICAgICAgICAudGFibGUKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgZGlzcGxheTogdGFibGU7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI3RoZWFkCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IG9yYW5nZTsKICAgICAgICAgICAgICAgIGRpc3BsYXk6IHRhYmxlLWhlYWRlci1ncm91cDsKICAgICAgICAgICAgfQogICAgICAgICAgICAjdGJvZHkKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgZGlzcGxheTogdGFibGUtcm93LWdyb3VwOwogICAgICAgICAgICB9CiAgICAgICAgICAgIC50cgogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBkaXNwbGF5OiB0YWJsZS1yb3c7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgLnRkCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlcjogMXB4IHNvbGlkIGJsYWNrOwogICAgICAgICAgICAgICAgZGlzcGxheTogdGFibGUtY2VsbDsKICAgICAgICAgICAgICAgIGhlaWdodDogNGVtOwogICAgICAgICAgICAgICAgd2lkdGg6IDRlbTsKICAgICAgICAgICAgfQogICAgICAgIDwvc3R5bGU+CiAgICA8L2hlYWQ+CiAgICA8Ym9keT4KICAgICAgICA8cD5UZXN0IHBhc3NlcyBpZiB0aGUgIkZpbGxlciBUZXh0IiBiZWxvdyBlaXRoZXIgcmVwZWF0cyBvciBkb2Vzbid0IHJlcGVhdCBvbiB0aGUgdG9wIG9mIGVhY2ggcGFnZSBpbiBwYWdlZCBtZWRpYSB2aWV3LjwvcD4KICAgICAgICA8ZGl2IGNsYXNzPSJ0YWJsZSI+CiAgICAgICAgICAgIDxkaXYgaWQ9InRoZWFkIj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRyIj4KICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idGQiPkZpbGxlciBUZXh0PC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgaWQ9InRib2R5Ij4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRyIj4KICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idGQiPjwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ciI+CiAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRkIj48L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idHIiPgogICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZCI+PC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRyIj4KICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idGQiPjwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ciI+CiAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRkIj48L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idHIiPgogICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZCI+PC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRyIj4KICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idGQiPjwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ciI+CiAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRkIj48L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idHIiPgogICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZCI+PC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRyIj4KICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idGQiPjwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ciI+CiAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRkIj48L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idHIiPgogICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZCI+PC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRyIj4KICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idGQiPjwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ciI+CiAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRkIj48L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idHIiPgogICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZCI+PC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRyIj4KICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idGQiPjwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ciI+CiAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRkIj48L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idHIiPgogICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZCI+PC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRyIj4KICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idGQiPjwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ciI+CiAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRkIj48L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idHIiPgogICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZCI+PC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRyIj4KICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idGQiPjwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ciI+CiAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRkIj48L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idHIiPgogICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZCI+PC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRyIj4KICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idGQiPjwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ciI+CiAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRkIj48L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idHIiPgogICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZCI+PC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICA8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBNdWx0aXBsZSB0YWJsZSBoZWFkZXIgZ3JvdXBzPC90aXRsZT4KICAgICAgICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9Ik1pY3Jvc29mdCIgaHJlZj0iaHR0cDovL3d3dy5taWNyb3NvZnQuY29tLyI+CiAgICAgICAgPGxpbmsgcmVsPSJoZWxwIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCN0YWJsZS1kaXNwbGF5Ij4KICAgICAgICA8bWV0YSBuYW1lPSJmbGFncyIgY29udGVudD0iIj4KICAgICAgICA8bWV0YSBuYW1lPSJhc3NlcnQiIGNvbnRlbnQ9IkEgdGFibGUgY29udGFpbmluZyBtdWx0aXBsZSB0YWJsZS1oZWFkZXItZ3JvdXAgZWxlbWVudHMgb25seSB1c2VzIHRoZSBmaXJzdCBvbmUgYXMgaXRzIGhlYWRlciBhbmQgdHJlYXRzIHRoZSBvdGhlcnMgYXMgdGFibGUgcm93IGdyb3Vwcy4iPgogICAgICAgIDxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+CiAgICAgICAgICAgIC50YWJsZQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBkaXNwbGF5OiB0YWJsZTsKICAgICAgICAgICAgfQogICAgICAgICAgICAudGhlYWQKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgZGlzcGxheTogdGFibGUtaGVhZGVyLWdyb3VwOwogICAgICAgICAgICB9CiAgICAgICAgICAgIC50Ym9keQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBkaXNwbGF5OiB0YWJsZS1yb3ctZ3JvdXA7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgLnRyCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGRpc3BsYXk6IHRhYmxlLXJvdzsKICAgICAgICAgICAgfQogICAgICAgICAgICAudGQKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyOiAxcHggc29saWQgYmxhY2s7CiAgICAgICAgICAgICAgICBjb2xvcjogYmx1ZTsKICAgICAgICAgICAgICAgIGRpc3BsYXk6IHRhYmxlLWNlbGw7CiAgICAgICAgICAgICAgICBmb250LXNpemU6IDNlbTsKICAgICAgICAgICAgICAgIHdpZHRoOiAxZW07CiAgICAgICAgICAgIH0KICAgICAgICA8L3N0eWxlPgogICAgPC9oZWFkPgogICAgPGJvZHk+CiAgICAgICAgPHA+VGVzdCBwYXNzZXMgaWYgZnJvbSB0b3AtdG8tYm90dG9tLCB0aGUgYm94ZXMgYXJlIGxhYmVsZWQgb25lIHRocm91Z2ggc2l4LjwvcD4KICAgICAgICA8ZGl2IGNsYXNzPSJ0YWJsZSI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InRib2R5Ij4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRyIj4KICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idGQiPjI8L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0idGhlYWQiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idHIiPgogICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZCI+MTwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0aGVhZCI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ciI+CiAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRkIj4zPC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InRib2R5Ij4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRyIj4KICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idGQiPjQ8L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0idGhlYWQiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idHIiPgogICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZCI+NTwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0Ym9keSI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ciI+CiAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRkIj42PC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICA8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBDZWxsIHdpdGggJ3ZlcnRpY2FsLWFsaWduOiB0ZXh0LWJvdHRvbScgcmVuZGVycyBhcyAndmVydGljYWwtYWxpZ246IGJhc2VsaW5lJzwvdGl0bGU+CiAgICAgICAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJNaWNyb3NvZnQiIGhyZWY9Imh0dHA6Ly93d3cubWljcm9zb2Z0LmNvbS8iPgogICAgICAgIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjaGVpZ2h0LWxheW91dCI+CiAgICAgICAgPG1ldGEgbmFtZT0iZmxhZ3MiIGNvbnRlbnQ9IiI+CiAgICAgICAgPG1ldGEgbmFtZT0iYXNzZXJ0IiBjb250ZW50PSJBIGNlbGwgd2l0aCAndmVydGljYWwtYWxpZ246IHRleHQtYm90dG9tJyByZW5kZXJzIGFzIGlmIHRoZSB2YWx1ZSB3ZXJlICdiYXNlbGluZScuIj4KICAgICAgICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgogICAgICAgICAgICB0YWJsZQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBoZWlnaHQ6IDEwMHB4OwogICAgICAgICAgICB9CiAgICAgICAgICAgIHRkCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIHZlcnRpY2FsLWFsaWduOiB0ZXh0LWJvdHRvbTsKICAgICAgICAgICAgfQogICAgICAgICAgICAjc21hbGwKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgZm9udC1zaXplOiAxMHB0OwogICAgICAgICAgICB9CiAgICAgICAgICAgICNtZWRpdW0KICAgICAgICAgICAgewogICAgICAgICAgICAgICAgZm9udC1zaXplOiAyMHB0OwogICAgICAgICAgICB9CiAgICAgICAgICAgICNsYXJnZQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBmb250LXNpemU6IDMwcHQ7CiAgICAgICAgICAgIH0KICAgICAgICA8L3N0eWxlPgogICAgPC9oZWFkPgogICAgPGJvZHk+CiAgICAgICAgPHA+VGVzdCBwYXNzZXMgaWYgdGhlIGJvdHRvbSBvZiB0aGUgIkZpbGxlciBUZXh0IiBiZWxvdyBpcyBhbGlnbmVkLjwvcD4KICAgICAgICA8dGFibGU+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGlkPSJzbWFsbCI+RmlsbGVyIFRleHQ8L2Rpdj4KICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICA8dGQ+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBpZD0ibWVkaXVtIj5GaWxsZXIgVGV4dDwvZGl2PgogICAgICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGlkPSJsYXJnZSI+RmlsbGVyIFRleHQ8L2Rpdj4KICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgPC90YWJsZT4KICAgIDwvYm9keT4KPC9odG1sPg==",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBDZWxsIHdpdGggJ3ZlcnRpY2FsLWFsaWduOiBbbGVuZ3RoXScgcmVuZGVycyBhcyAndmVydGljYWwtYWxpZ246IGJhc2VsaW5lJzwvdGl0bGU+CiAgICAgICAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJNaWNyb3NvZnQiIGhyZWY9Imh0dHA6Ly93d3cubWljcm9zb2Z0LmNvbS8iPgogICAgICAgIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjaGVpZ2h0LWxheW91dCI+CiAgICAgICAgPG1ldGEgbmFtZT0iZmxhZ3MiIGNvbnRlbnQ9IiI+CiAgICAgICAgPG1ldGEgbmFtZT0iYXNzZXJ0IiBjb250ZW50PSJBIGNlbGwgd2l0aCAndmVydGljYWwtYWxpZ246IFtsZW5ndGhdJyByZW5kZXJzIGFzIGlmIHRoZSB2YWx1ZSB3ZXJlICdiYXNlbGluZScuIj4KICAgICAgICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgogICAgICAgICAgICB0YWJsZQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBoZWlnaHQ6IDEwMHB4OwogICAgICAgICAgICB9CiAgICAgICAgICAgIHRkCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIHZlcnRpY2FsLWFsaWduOiAyMHB4OwogICAgICAgICAgICB9CiAgICAgICAgICAgICNzbWFsbAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBmb250LXNpemU6IDEwcHQ7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI21lZGl1bQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBmb250LXNpemU6IDIwcHQ7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2xhcmdlCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMzBwdDsKICAgICAgICAgICAgfQogICAgICAgIDwvc3R5bGU+CiAgICA8L2hlYWQ+CiAgICA8Ym9keT4KICAgICAgICA8cD5UZXN0IHBhc3NlcyBpZiB0aGUgYm90dG9tIG9mIHRoZSAiRmlsbGVyIFRleHQiIGJlbG93IGlzIGFsaWduZWQuPC9wPgogICAgICAgIDx0YWJsZT4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkPgogICAgICAgICAgICAgICAgICAgIDxkaXYgaWQ9InNtYWxsIj5GaWxsZXIgVGV4dDwvZGl2PgogICAgICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGlkPSJtZWRpdW0iPkZpbGxlciBUZXh0PC9kaXY+CiAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgPHRkPgogICAgICAgICAgICAgICAgICAgIDxkaXYgaWQ9ImxhcmdlIj5GaWxsZXIgVGV4dDwvZGl2PgogICAgICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgPC90cj4KICAgICAgICA8L3RhYmxlPgogICAgPC9ib2R5Pgo8L2h0bWw+",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBDZWxsIHdpdGggJ3ZlcnRpY2FsLWFsaWduOiBbcGVyY2VudGFnZV0nIHJlbmRlcnMgYXMgJ3ZlcnRpY2FsLWFsaWduOiBiYXNlbGluZSc8L3RpdGxlPgogICAgICAgIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iTWljcm9zb2Z0IiBocmVmPSJodHRwOi8vd3d3Lm1pY3Jvc29mdC5jb20vIj4KICAgICAgICA8bGluayByZWw9ImhlbHAiIGhyZWY9Imh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL3RhYmxlcy5odG1sI2hlaWdodC1sYXlvdXQiPgogICAgICAgIDxtZXRhIG5hbWU9ImZsYWdzIiBjb250ZW50PSIiPgogICAgICAgIDxtZXRhIG5hbWU9ImFzc2VydCIgY29udGVudD0iQSBjZWxsIHdpdGggJ3ZlcnRpY2FsLWFsaWduOiBbcGVyY2VudGFnZV0nIHJlbmRlcnMgYXMgaWYgdGhlIHZhbHVlIHdlcmUgJ2Jhc2VsaW5lJy4iPgogICAgICAgIDxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+CiAgICAgICAgICAgIHRhYmxlCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGhlaWdodDogMTAwcHg7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgdGQKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgdmVydGljYWwtYWxpZ246IDUwJTsKICAgICAgICAgICAgfQogICAgICAgICAgICAjc21hbGwKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgZm9udC1zaXplOiAxMHB0OwogICAgICAgICAgICB9CiAgICAgICAgICAgICNtZWRpdW0KICAgICAgICAgICAgewogICAgICAgICAgICAgICAgZm9udC1zaXplOiAyMHB0OwogICAgICAgICAgICB9CiAgICAgICAgICAgICNsYXJnZQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBmb250LXNpemU6IDMwcHQ7CiAgICAgICAgICAgIH0KICAgICAgICA8L3N0eWxlPgogICAgPC9oZWFkPgogICAgPGJvZHk+CiAgICAgICAgPHA+VGVzdCBwYXNzZXMgaWYgdGhlIGJvdHRvbSBvZiB0aGUgIkZpbGxlciBUZXh0IiBiZWxvdyBpcyBhbGlnbmVkLjwvcD4KICAgICAgICA8dGFibGU+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGlkPSJzbWFsbCI+RmlsbGVyIFRleHQ8L2Rpdj4KICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICA8dGQ+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBpZD0ibWVkaXVtIj5GaWxsZXIgVGV4dDwvZGl2PgogICAgICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGlkPSJsYXJnZSI+RmlsbGVyIFRleHQ8L2Rpdj4KICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgPC90YWJsZT4KICAgIDwvYm9keT4KPC9odG1sPg==",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBGaW5kaW5nIHRoZSBiYXNlbGluZSBvZiBhIGNlbGw8L3RpdGxlPgogICAgICAgIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iTWljcm9zb2Z0IiBocmVmPSJodHRwOi8vd3d3Lm1pY3Jvc29mdC5jb20vIj4KICAgICAgICA8bGluayByZWw9ImhlbHAiIGhyZWY9Imh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL3RhYmxlcy5odG1sI2hlaWdodC1sYXlvdXQiPgogICAgICAgIDxtZXRhIG5hbWU9ImZsYWdzIiBjb250ZW50PSIiPgogICAgICAgIDxtZXRhIG5hbWU9ImFzc2VydCIgY29udGVudD0iVGhlIGJhc2VsaW5lIG9mIGEgY2VsbCBpcyB0aGUgYmFzZWxpbmUgb2YgdGhlIGZpcnN0IGluLWZsb3cgbGluZSBib3ggaW4gdGhlIGNlbGwgb3IgZmlyc3QgaW4tZmxvdyB0YWJsZS1yb3cgaW4gdGhlIGNlbGwsIHdoaWNoZXZlciBjb21lcyBmaXJzdC4iPgogICAgICAgIDxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+CiAgICAgICAgICAgIHRhYmxlCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1zcGFjaW5nOiAwOwogICAgICAgICAgICB9CiAgICAgICAgICAgIC5pbmxpbmUKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgZGlzcGxheTogaW5saW5lLXRhYmxlOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHRkCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTsKICAgICAgICAgICAgfQogICAgICAgIDwvc3R5bGU+CiAgICA8L2hlYWQ+CiAgICA8Ym9keT4KICAgICAgICA8cD5UZXN0IHBhc3NlcyBpZiB0aGUgYm90dG9tIG9mIHRoZSAiRmlsbGVyIFRleHQiIGJlbG93IGlzIGFsaWduZWQuPC9wPgogICAgICAgIDx0YWJsZT4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkPgogICAgICAgICAgICAgICAgICAgIDxoMT5GaWxsZXIgVGV4dDwvaDE+CiAgICAgICAgICAgICAgICAgICAgPHRhYmxlIGNsYXNzPSJpbmxpbmUiPgogICAgICAgICAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQ+Jm5ic3A7PC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgICAgICA8L3RhYmxlPgogICAgICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD4KICAgICAgICAgICAgICAgICAgICA8dGFibGUgY2xhc3M9ImlubGluZSI+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD5GaWxsZXIgVGV4dDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICAgICAgPC90YWJsZT4KICAgICAgICAgICAgICAgICAgICA8aDE+Jm5ic3A7PC9oMT4KICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgPC90YWJsZT4KICAgIDwvYm9keT4KPC9odG1sPg==",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBJbnRyb2R1Y3Rpb24gdG8gVGFibGVzICh0ZXh0LWFsaWduLCBmb250LXdlaWdodCk8L3RpdGxlPgogICAgICAgIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iTWljcm9zb2Z0IiBocmVmPSJodHRwOi8vd3d3Lm1pY3Jvc29mdC5jb20vIj4KICAgICAgICA8bGluayByZWw9ImhlbHAiIGhyZWY9Imh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL3RhYmxlcy5odG1sI3RhYmxlcy1pbnRybyI+CiAgICAgICAgPG1ldGEgbmFtZT0iZmxhZ3MiIGNvbnRlbnQ9IkhUTUxvbmx5Ij4KICAgICAgICA8bWV0YSBuYW1lPSJhc3NlcnQiIGNvbnRlbnQ9Iid0ZXh0LWFsaWduJyBhbmQgJ2ZvbnQtd2VpZ2h0JyBjYW4gYmUgYXBwbGllZCB0byB0YWJsZSBjZWxscyAoZXhhbXBsZSBmcm9tIHNwZWMgc2VjdGlvbiAxNy4xKS4iPgogICAgICAgICAgPHN0eWxlIHR5cGU9InRleHQvY3NzIj4KICAgICAgICAgICAgY2FwdGlvbgogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBjb2xvcjogYmx1ZTsKICAgICAgICAgICAgfQogICAgICAgICAgICB0ZAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXI6IDFweCBzb2xpZCBibHVlOwogICAgICAgICAgICAgICAgaGVpZ2h0OiA1ZW07CiAgICAgICAgICAgICAgICB3aWR0aDogMTBlbTsKICAgICAgICAgICAgfQogICAgICAgICAgICB0aAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXI6IDFweCBzb2xpZCBibHVlOwogICAgICAgICAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7CiAgICAgICAgICAgICAgICBoZWlnaHQ6IDVlbTsKICAgICAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjsKICAgICAgICAgICAgICAgIHdpZHRoOiAxMGVtOwogICAgICAgICAgICAgfQogICAgICAgIDwvc3R5bGU+CiAgICA8L2hlYWQ+CiAgICA8Ym9keT4KICAgICAgICA8cD5UZXN0IHBhc3NlcyBpZiB0aGUgdGV4dCBpbiB0aGUgbGVmdC1tb3N0IGJveCBjb2x1bW4gaXMgY2VudGVyZWQgaW4gaXRzIGNvbHVtbiBhbmQgZGFya2VyIHRoYW4gdGhlIHRleHQgaW4gdGhlIG90aGVyIGNvbHVtbnMuPC9wPgogICAgICAgIDx0YWJsZT4KICAgICAgICAgICAgPGNhcHRpb24+VGhpcyBpcyBhIHNpbXBsZSAzeDMgdGFibGU8L2NhcHRpb24+CiAgICAgICAgICAgIDx0ciBpZD0icm93MSI+CiAgICAgICAgICAgICAgICA8dGg+SGVhZGVyIDE8L3RoPgogICAgICAgICAgICAgICAgPHRkPkNlbGwgMTwvdGQ+CiAgICAgICAgICAgICAgICA8dGQ+Q2VsbCAyPC90ZD4KICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgPHRyIGlkPSJyb3cyIj4KICAgICAgICAgICAgICAgIDx0aD5IZWFkZXIgMjwvdGg+CiAgICAgICAgICAgICAgICA8dGQ+Q2VsbCAzPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5DZWxsIDQ8L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgICAgICA8dHIgaWQ9InJvdzMiPgogICAgICAgICAgICAgICAgPHRoPkhlYWRlciAzPC90aD4KICAgICAgICAgICAgICAgIDx0ZD5DZWxsIDU8L3RkPgogICAgICAgICAgICAgICAgPHRkPkNlbGwgNjwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgPC90YWJsZT4KICAgIDwvYm9keT4KIDwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBJbnRyb2R1Y3Rpb24gdG8gVGFibGVzICh2ZXJ0aWNhbC1hbGlnbik8L3RpdGxlPgogICAgICAgIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iTWljcm9zb2Z0IiBocmVmPSJodHRwOi8vd3d3Lm1pY3Jvc29mdC5jb20vIj4KICAgICAgICA8bGluayByZWw9ImhlbHAiIGhyZWY9Imh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL3RhYmxlcy5odG1sI3RhYmxlcy1pbnRybyI+CiAgICAgICAgPG1ldGEgbmFtZT0iZmxhZ3MiIGNvbnRlbnQ9IkhUTUxvbmx5Ij4KICAgICAgICA8bWV0YSBuYW1lPSJhc3NlcnQiIGNvbnRlbnQ9Iid2ZXJ0aWNhbC1hbGlnbicgY2FuIGJlIHNldCBvbiB0YWJsZSBjZWxscyAoZXhhbXBsZSBmcm9tIHNlY3Rpb24gMTcuMSkuIj4KICAgICAgICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgogICAgICAgICAgICBjYXB0aW9uCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGNvbG9yOiBibHVlOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHRkCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlcjogMXB4IHNvbGlkIGJsdWU7CiAgICAgICAgICAgICAgICBoZWlnaHQ6IDVlbTsKICAgICAgICAgICAgICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7CiAgICAgICAgICAgICAgICB3aWR0aDogMTBlbTsKICAgICAgICAgICAgfQogICAgICAgICAgICB0aAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXI6IDFweCBzb2xpZCBibHVlOwogICAgICAgICAgICAgICAgaGVpZ2h0OiA1ZW07CiAgICAgICAgICAgICAgICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7CiAgICAgICAgICAgICAgICB3aWR0aDogMTBlbTsKICAgICAgICAgICAgIH0KICAgICAgICA8L3N0eWxlPgogICAgPC9oZWFkPgogICAgPGJvZHk+CiAgICAgICAgPHA+VGVzdCBwYXNzZXMgaWYgdGhlIHRleHQgaW4gdGhlIGxlZnQtbW9zdCBib3ggY29sdW1uIGlzIGF0IHRoZSB2ZXJ5IHRvcCBvZiB0aGUgY29sdW1uIGFuZCB0ZXh0IGluIHRoZSBvdGhlciB0d28gY29sdW1ucyBpcyB2ZXJ0aWNhbGx5IGNlbnRlcmVkLjwvcD4KICAgICAgICA8dGFibGU+CiAgICAgICAgICAgIDxjYXB0aW9uPlRoaXMgaXMgYSBzaW1wbGUgM3gzIHRhYmxlPC9jYXB0aW9uPgogICAgICAgICAgICA8dHIgaWQ9InJvdzEiPgogICAgICAgICAgICAgICAgPHRoPkhlYWRlciAxPC90aD4KICAgICAgICAgICAgICAgIDx0ZD5DZWxsIDE8L3RkPgogICAgICAgICAgICAgICAgPHRkPkNlbGwgMjwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgIDx0ciBpZD0icm93MiI+CiAgICAgICAgICAgICAgICA8dGg+SGVhZGVyIDI8L3RoPgogICAgICAgICAgICAgICAgPHRkPkNlbGwgMzwvdGQ+CiAgICAgICAgICAgICAgICA8dGQ+Q2VsbCA0PC90ZD4KICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgPHRyIGlkPSJyb3czIj4KICAgICAgICAgICAgICAgIDx0aD5IZWFkZXIgMzwvdGg+CiAgICAgICAgICAgICAgICA8dGQ+Q2VsbCA1PC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5DZWxsIDY8L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgIDwvdGFibGU+CiAgICA8L2JvZHk+CiA8L2h0bWw+",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBJbnRyb2R1Y3Rpb24gdG8gVGFibGVzIChib3JkZXItY29sbGFwc2UsIGJvcmRlcik8L3RpdGxlPgogICAgICAgIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iTWljcm9zb2Z0IiBocmVmPSJodHRwOi8vd3d3Lm1pY3Jvc29mdC5jb20vIj4KICAgICAgICA8bGluayByZWw9ImhlbHAiIGhyZWY9Imh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL3RhYmxlcy5odG1sI3RhYmxlcy1pbnRybyI+CiAgICAgICAgPG1ldGEgbmFtZT0iZmxhZ3MiIGNvbnRlbnQ9IkhUTUxvbmx5Ij4KICAgICAgICA8bWV0YSBuYW1lPSJhc3NlcnQiIGNvbnRlbnQ9Iidib3JkZXItY29sbGFwc2UnIGFuZCAnYm9yZGVyJyBjYW4gYmUgc2V0IG9uIHRhYmxlIGVsZW1lbnRzIChleGFtcGxlIGZyb20gc2VjdGlvbiAxNy4xKS4iPgogICAgICAgIDxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+CiAgICAgICAgICAgIHRhYmxlCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgdHIjcm93MQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXI6IDNweCBzb2xpZCBibHVlOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHRyI3JvdzIKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyOiAxcHggc29saWQgYmxhY2s7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgdHIjcm93MwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXI6IDFweCBzb2xpZCBibGFjazsKICAgICAgICAgICAgfSAKICAgICAgICA8L3N0eWxlPgogICAgPC9oZWFkPgogICAgPGJvZHk+CiAgICAgICAgPHA+VGVzdCBwYXNzZXMgaWYgdGhlIGJveCBiZWxvdyBpcyBzZXBhcmF0ZWQgaW50byB0aHJlZSBob3Jpem9udGFsIHJvd3MsIGFuZCB0aGUgdG9wIG9uZSBoYXMgYSBibHVlIGJvcmRlciB0aGF0IGlzIHRoaWNrZXIgdGhhbiB0aGUgYm9yZGVycyBvZiB0aGUgb3RoZXIgcm93cy48L3A+CiAgICAgICAgPHRhYmxlPgogICAgICAgICAgICA8Y2FwdGlvbj5UaGlzIGlzIGEgc2ltcGxlIDN4MyB0YWJsZTwvY2FwdGlvbj4KICAgICAgICAgICAgPHRyIGlkPSJyb3cxIj4KICAgICAgICAgICAgICAgIDx0aD5IZWFkZXIgMTwvdGg+CiAgICAgICAgICAgICAgICA8dGQ+Q2VsbCAxPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5DZWxsIDI8L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgICAgICA8dHIgaWQ9InJvdzIiPgogICAgICAgICAgICAgICAgPHRoPkhlYWRlciAyPC90aD4KICAgICAgICAgICAgICAgIDx0ZD5DZWxsIDM8L3RkPgogICAgICAgICAgICAgICAgPHRkPkNlbGwgNDwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgIDx0ciBpZD0icm93MyI+CiAgICAgICAgICAgICAgICA8dGg+SGVhZGVyIDM8L3RoPgogICAgICAgICAgICAgICAgPHRkPkNlbGwgNTwvdGQ+CiAgICAgICAgICAgICAgICA8dGQ+Q2VsbCA2PC90ZD4KICAgICAgICAgICAgPC90cj4KICAgICAgICA8L3RhYmxlPgogICAgPC9ib2R5PgogPC9odG1sPg==",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBJbnRyb2R1Y3Rpb24gdG8gVGFibGVzIChjYXB0aW9uLXNpZGUpPC90aXRsZT4KICAgICAgICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9Ik1pY3Jvc29mdCIgaHJlZj0iaHR0cDovL3d3dy5taWNyb3NvZnQuY29tLyI+CiAgICAgICAgPGxpbmsgcmVsPSJoZWxwIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCN0YWJsZXMtaW50cm8iPgogICAgICAgIDxtZXRhIG5hbWU9ImZsYWdzIiBjb250ZW50PSJIVE1Mb25seSI+CiAgICAgICAgPG1ldGEgbmFtZT0iYXNzZXJ0IiBjb250ZW50PSInY2FwdGlvbi1zaWRlJyBjYW4gYmUgc2V0IG9uIGEgdGFibGUgY2FwdGlvbiAoZXhhbXBsZSBmcm9tIHNlY3Rpb24gMTcuMSkuIj4KICAgICAgICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgogICAgICAgICAgICBjYXB0aW9uCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGNvbG9yOiBibHVlOwogICAgICAgICAgICAgICAgY2FwdGlvbi1zaWRlOiB0b3A7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgdGQKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyOiBzb2xpZCBibGFjazsKICAgICAgICAgICAgfQogICAgICAgICAgICB0aAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBib3JkZXI6IHNvbGlkIGJsYWNrOwogICAgICAgICAgICB9CiAgICAgICAgPC9zdHlsZT4KICAgIDwvaGVhZD4KICAgIDxib2R5PgogICAgICAgIDxwPlRlc3QgcGFzc2VzIGlmIGJsdWUgdGV4dCAod2l0aCB0aGUgd29yZHMgJ1RoaXMgaXMgYSBzaW1wbGUgM3gzIHRhYmxlJykgYXBwZWFycyBhYm92ZSB0aGUgdGhyZWUtYnktdGhyZWUgZ3JpZCBiZWxvdy48L3A+CiAgICAgICAgPHRhYmxlPgogICAgICAgICAgICA8Y2FwdGlvbj5UaGlzIGlzIGEgc2ltcGxlIDN4MyB0YWJsZTwvY2FwdGlvbj4KICAgICAgICAgICAgPHRyIGlkPSJyb3cxIj4KICAgICAgICAgICAgICAgIDx0aD5IZWFkZXIgMTwvdGg+CiAgICAgICAgICAgICAgICA8dGQ+Q2VsbCAxPC90ZD4KICAgICAgICAgICAgICAgIDx0ZD5DZWxsIDI8L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgICAgICA8dHIgaWQ9InJvdzIiPgogICAgICAgICAgICAgICAgPHRoPkhlYWRlciAyPC90aD4KICAgICAgICAgICAgICAgIDx0ZD5DZWxsIDM8L3RkPgogICAgICAgICAgICAgICAgPHRkPkNlbGwgNDwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgIDx0ciBpZD0icm93MyI+CiAgICAgICAgICAgICAgICA8dGg+SGVhZGVyIDM8L3RoPgogICAgICAgICAgICAgICAgPHRkPkNlbGwgNTwvdGQ+CiAgICAgICAgICAgICAgICA8dGQ+Q2VsbCA2PC90ZD4KICAgICAgICAgICAgPC90cj4KICAgICAgICA8L3RhYmxlPgogICAgPC9ib2R5PgogPC9odG1sPg==",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBUYWJsZS1sYXlvdXQgYW5kICdkaXNwbGF5OiBpbmxpbmUnIGVsZW1lbnRzPC90aXRsZT4KICAgICAgICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9Ik1pY3Jvc29mdCIgaHJlZj0iaHR0cDovL3d3dy5taWNyb3NvZnQuY29tLyI+CiAgICAgICAgPGxpbmsgcmVsPSJoZWxwIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCNwcm9wZGVmLXRhYmxlLWxheW91dCI+CiAgICAgICAgPGxpbmsgcmVsPSJoZWxwIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCN3aWR0aC1sYXlvdXQiPgogICAgICAgIDxtZXRhIG5hbWU9ImZsYWdzIiBjb250ZW50PSJhaGVtIj4KICAgICAgICA8bWV0YSBuYW1lPSJhc3NlcnQiIGNvbnRlbnQ9IlRhYmxlLWxheW91dCBkb2VzIG5vdCBhcHBseSB0byAnZGlzcGxheTogaW5saW5lJyBlbGVtZW50cy4iPgogICAgICAgIDxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+CiAgICAgICAgICAgICN0ZXN0CiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZTsKICAgICAgICAgICAgICAgIHRhYmxlLWxheW91dDogZml4ZWQ7CiAgICAgICAgICAgICAgICB3aWR0aDogMTBlbTsKICAgICAgICAgICAgfQogICAgICAgICAgICAuY29sZ3JvdXAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgZGlzcGxheTogdGFibGUtY29sdW1uLWdyb3VwOwogICAgICAgICAgICAgICAgd2lkdGg6IDVlbTsKICAgICAgICAgICAgfQogICAgICAgICAgICAudHIKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgZGlzcGxheTogdGFibGUtcm93OwogICAgICAgICAgICB9CiAgICAgICAgICAgIC50ZAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiBibGFjazsKICAgICAgICAgICAgICAgIGRpc3BsYXk6IHRhYmxlLWNlbGw7CiAgICAgICAgICAgICAgICBmb250OiAxZW0gQWhlbTsKICAgICAgICAgICAgICAgIG92ZXJmbG93OiBoaWRkZW47CiAgICAgICAgICAgICAgICBwYWRkaW5nOiAwOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNyZWZlcmVuY2UKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYmFja2dyb3VuZDogYmx1ZTsKICAgICAgICAgICAgICAgIGhlaWdodDogMmVtOwogICAgICAgICAgICAgICAgd2lkdGg6IDIwZW07CiAgICAgICAgICAgIH0KICAgICAgICA8L3N0eWxlPgogICAgPC9oZWFkPgogICAgPGJvZHk+CiAgICAgICAgPHA+VGVzdCBwYXNzZXMgaWYgYm90aCBiYXJzIGJlbG93IGFyZSB0aGUgc2FtZSB3aWR0aC48L3A+CiAgICAgICAgPGRpdiBpZD0idGVzdCI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbGdyb3VwIj48L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sZ3JvdXAiPjwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ciI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZCI+WFhYWFg8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRkIj5YWFhYWDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0idHIiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idGQiPlhYWFhYWFhYWDA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRkIj5YWFhYWFhYWFgwPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgaWQ9InJlZmVyZW5jZSI+PC9kaXY+CiAgICA8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBUYWJsZS1sYXlvdXQgYW5kICdkaXNwbGF5OiB0YWJsZS1oZWFkZXItZ3JvdXAnIGVsZW1lbnRzPC90aXRsZT4KICAgICAgICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9Ik1pY3Jvc29mdCIgaHJlZj0iaHR0cDovL3d3dy5taWNyb3NvZnQuY29tLyI+CiAgICAgICAgPGxpbmsgcmVsPSJoZWxwIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCNwcm9wZGVmLXRhYmxlLWxheW91dCI+CiAgICAgICAgPGxpbmsgcmVsPSJoZWxwIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCN3aWR0aC1sYXlvdXQiPgogICAgICAgIDxtZXRhIG5hbWU9ImZsYWdzIiBjb250ZW50PSJhaGVtIj4KICAgICAgICA8bWV0YSBuYW1lPSJhc3NlcnQiIGNvbnRlbnQ9IlRhYmxlLWxheW91dCBkb2VzIG5vdCBhcHBseSB0byAnZGlzcGxheTogdGFibGUtaGVhZGVyLWdyb3VwJyBlbGVtZW50cy4iPgogICAgICAgIDxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+CiAgICAgICAgICAgICN0YWJsZQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBkaXNwbGF5OiB0YWJsZTsKICAgICAgICAgICAgICAgIHdpZHRoOiAxMGVtOwogICAgICAgICAgICB9CiAgICAgICAgICAgIC5jb2xncm91cAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBkaXNwbGF5OiB0YWJsZS1jb2x1bW4tZ3JvdXA7CiAgICAgICAgICAgICAgICB3aWR0aDogNWVtOwogICAgICAgICAgICB9CiAgICAgICAgICAgICN0ZXN0CiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGRpc3BsYXk6IHRhYmxlLWhlYWRlci1ncm91cDsKICAgICAgICAgICAgICAgIHRhYmxlLWxheW91dDogZml4ZWQ7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgLnRyCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGRpc3BsYXk6IHRhYmxlLXJvdzsKICAgICAgICAgICAgfQogICAgICAgICAgICAudGQKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYmFja2dyb3VuZDogYmxhY2s7CiAgICAgICAgICAgICAgICBkaXNwbGF5OiB0YWJsZS1jZWxsOwogICAgICAgICAgICAgICAgZm9udDogMWVtIEFoZW07CiAgICAgICAgICAgICAgICBvdmVyZmxvdzogaGlkZGVuOwogICAgICAgICAgICAgICAgcGFkZGluZzogMDsKICAgICAgICAgICAgfQogICAgICAgICAgICAjcmVmZXJlbmNlCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IGJsdWU7CiAgICAgICAgICAgICAgICBoZWlnaHQ6IDJlbTsKICAgICAgICAgICAgICAgIHdpZHRoOiAyMGVtOwogICAgICAgICAgICB9CiAgICAgICAgPC9zdHlsZT4KICAgIDwvaGVhZD4KICAgIDxib2R5PgogICAgICAgIDxwPlRlc3QgcGFzc2VzIGlmIGJvdGggYmFycyBiZWxvdyBhcmUgdGhlIHNhbWUgd2lkdGguPC9wPgogICAgICAgIDxkaXYgaWQ9InRhYmxlIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sZ3JvdXAiPjwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2xncm91cCI+PC9kaXY+CiAgICAgICAgICAgIDxkaXYgaWQ9InRlc3QiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idHIiPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRkIj5YWFhYWDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRkIj5YWFhYWDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ciI+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idGQiPlhYWFhYWFhYWDA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZCI+WFhYWFhYWFhYMDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgaWQ9InJlZmVyZW5jZSI+PC9kaXY+CiAgICA8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBUYWJsZS1sYXlvdXQgYW5kICdkaXNwbGF5OiB0YWJsZS1mb290ZXItZ3JvdXAnIGVsZW1lbnRzPC90aXRsZT4KICAgICAgICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9Ik1pY3Jvc29mdCIgaHJlZj0iaHR0cDovL3d3dy5taWNyb3NvZnQuY29tLyI+CiAgICAgICAgPGxpbmsgcmVsPSJoZWxwIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCNwcm9wZGVmLXRhYmxlLWxheW91dCI+CiAgICAgICAgPGxpbmsgcmVsPSJoZWxwIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCN3aWR0aC1sYXlvdXQiPgogICAgICAgIDxtZXRhIG5hbWU9ImZsYWdzIiBjb250ZW50PSJhaGVtIj4KICAgICAgICA8bWV0YSBuYW1lPSJhc3NlcnQiIGNvbnRlbnQ9IlRhYmxlLWxheW91dCBkb2VzIG5vdCBhcHBseSB0byAnZGlzcGxheTogdGFibGUtZm9vdGVyLWdyb3VwJyBlbGVtZW50cy4iPgogICAgICAgIDxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+CiAgICAgICAgICAgICN0YWJsZQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBkaXNwbGF5OiB0YWJsZTsKICAgICAgICAgICAgICAgIHdpZHRoOiAxMGVtOwogICAgICAgICAgICB9CiAgICAgICAgICAgIC5jb2xncm91cAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBkaXNwbGF5OiB0YWJsZS1jb2x1bW4tZ3JvdXA7CiAgICAgICAgICAgICAgICB3aWR0aDogNWVtOwogICAgICAgICAgICB9CiAgICAgICAgICAgICN0ZXN0CiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGRpc3BsYXk6IHRhYmxlLWZvb3Rlci1ncm91cDsKICAgICAgICAgICAgICAgIHRhYmxlLWxheW91dDogZml4ZWQ7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgLnRyCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGRpc3BsYXk6IHRhYmxlLXJvdzsKICAgICAgICAgICAgfQogICAgICAgICAgICAudGQKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYmFja2dyb3VuZDogYmxhY2s7CiAgICAgICAgICAgICAgICBkaXNwbGF5OiB0YWJsZS1jZWxsOwogICAgICAgICAgICAgICAgZm9udDogMWVtIEFoZW07CiAgICAgICAgICAgICAgICBvdmVyZmxvdzogaGlkZGVuOwogICAgICAgICAgICAgICAgcGFkZGluZzogMDsKICAgICAgICAgICAgfQogICAgICAgICAgICAjcmVmZXJlbmNlCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IGJsdWU7CiAgICAgICAgICAgICAgICBoZWlnaHQ6IDJlbTsKICAgICAgICAgICAgICAgIHdpZHRoOiAyMGVtOwogICAgICAgICAgICB9CiAgICAgICAgPC9zdHlsZT4KICAgIDwvaGVhZD4KICAgIDxib2R5PgogICAgICAgIDxwPlRlc3QgcGFzc2VzIGlmIGJvdGggYmFycyBiZWxvdyBhcmUgdGhlIHNhbWUgd2lkdGguPC9wPgogICAgICAgIDxkaXYgaWQ9InRhYmxlIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sZ3JvdXAiPjwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2xncm91cCI+PC9kaXY+CiAgICAgICAgICAgIDxkaXYgaWQ9InRlc3QiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idHIiPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRkIj5YWFhYWDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRkIj5YWFhYWDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ciI+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idGQiPlhYWFhYWFhYWDA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZCI+WFhYWFhYWFhYMDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgaWQ9InJlZmVyZW5jZSI+PC9kaXY+CiAgICA8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBUYWJsZS1sYXlvdXQgYW5kICdkaXNwbGF5OiB0YWJsZS1yb3cnIGVsZW1lbnRzPC90aXRsZT4KICAgICAgICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9Ik1pY3Jvc29mdCIgaHJlZj0iaHR0cDovL3d3dy5taWNyb3NvZnQuY29tLyI+CiAgICAgICAgPGxpbmsgcmVsPSJoZWxwIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCNwcm9wZGVmLXRhYmxlLWxheW91dCI+CiAgICAgICAgPGxpbmsgcmVsPSJoZWxwIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCN3aWR0aC1sYXlvdXQiPgogICAgICAgIDxtZXRhIG5hbWU9ImZsYWdzIiBjb250ZW50PSJhaGVtIj4KICAgICAgICA8bWV0YSBuYW1lPSJhc3NlcnQiIGNvbnRlbnQ9IlRhYmxlLWxheW91dCBkb2VzIG5vdCBhcHBseSB0byAnZGlzcGxheTogdGFibGUtcm93JyBlbGVtZW50cy4iPgogICAgICAgIDxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+CiAgICAgICAgICAgICN0YWJsZQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBkaXNwbGF5OiB0YWJsZTsKICAgICAgICAgICAgICAgIHdpZHRoOiAxMGVtOwogICAgICAgICAgICB9CiAgICAgICAgICAgIC5jb2xncm91cAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBkaXNwbGF5OiB0YWJsZS1jb2x1bW4tZ3JvdXA7CiAgICAgICAgICAgICAgICB3aWR0aDogNWVtOwogICAgICAgICAgICB9CiAgICAgICAgICAgICN0ZXN0CiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGRpc3BsYXk6IHRhYmxlLXJvdzsKICAgICAgICAgICAgICAgIHRhYmxlLWxheW91dDogZml4ZWQ7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgLnRkCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IGJsYWNrOwogICAgICAgICAgICAgICAgZGlzcGxheTogdGFibGUtY2VsbDsKICAgICAgICAgICAgICAgIGZvbnQ6IDFlbSBBaGVtOwogICAgICAgICAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjsKICAgICAgICAgICAgICAgIHBhZGRpbmc6IDA7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI3JlZmVyZW5jZQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiBibHVlOwogICAgICAgICAgICAgICAgaGVpZ2h0OiAxZW07CiAgICAgICAgICAgICAgICB3aWR0aDogMTVlbTsKICAgICAgICAgICAgfQogICAgICAgIDwvc3R5bGU+CiAgICA8L2hlYWQ+CiAgICA8Ym9keT4KICAgICAgICA8cD5UZXN0IHBhc3NlcyBpZiBib3RoIGJhcnMgYmVsb3cgYXJlIHRoZSBzYW1lIHdpZHRoLjwvcD4KICAgICAgICA8ZGl2IGlkPSJ0YWJsZSI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbGdyb3VwIj48L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sZ3JvdXAiPjwvZGl2PgogICAgICAgICAgICA8ZGl2IGlkPSJ0ZXN0Ij4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRkIj5YWFhYWDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idGQiPlhYWFhYWFhYWDA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBpZD0icmVmZXJlbmNlIj48L2Rpdj4KICAgIDwvYm9keT4KPC9odG1sPg==",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBUYWJsZS1sYXlvdXQgYW5kICdkaXNwbGF5OiB0YWJsZS1jb2x1bW4nIGVsZW1lbnRzPC90aXRsZT4KICAgICAgICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9Ik1pY3Jvc29mdCIgaHJlZj0iaHR0cDovL3d3dy5taWNyb3NvZnQuY29tLyI+CiAgICAgICAgPGxpbmsgcmVsPSJoZWxwIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCNwcm9wZGVmLXRhYmxlLWxheW91dCI+CiAgICAgICAgPGxpbmsgcmVsPSJoZWxwIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCN3aWR0aC1sYXlvdXQiPgogICAgICAgIDxtZXRhIG5hbWU9ImZsYWdzIiBjb250ZW50PSJhaGVtIj4KICAgICAgICA8bWV0YSBuYW1lPSJhc3NlcnQiIGNvbnRlbnQ9IlRhYmxlLWxheW91dCBkb2VzIG5vdCBhcHBseSB0byAnZGlzcGxheTogdGFibGUtY29sdW1uJyBlbGVtZW50cy4iPgogICAgICAgIDxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+CiAgICAgICAgICAgICN0YWJsZQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBkaXNwbGF5OiB0YWJsZTsKICAgICAgICAgICAgICAgIHdpZHRoOiA1ZW07CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI3Rlc3QKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgZGlzcGxheTogdGFibGUtY29sdW1uOwogICAgICAgICAgICAgICAgdGFibGUtbGF5b3V0OiBmaXhlZDsKICAgICAgICAgICAgICAgIHdpZHRoOiA1ZW07CiAgICAgICAgICAgIH0KICAgICAgICAgICAgLnRyCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGRpc3BsYXk6IHRhYmxlLXJvdzsKICAgICAgICAgICAgfQogICAgICAgICAgICAudGQKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYmFja2dyb3VuZDogYmxhY2s7CiAgICAgICAgICAgICAgICBkaXNwbGF5OiB0YWJsZS1jZWxsOwogICAgICAgICAgICAgICAgZm9udDogMWVtIEFoZW07CiAgICAgICAgICAgICAgICBvdmVyZmxvdzogaGlkZGVuOwogICAgICAgICAgICAgICAgcGFkZGluZzogMDsKICAgICAgICAgICAgfQogICAgICAgICAgICAjcmVmZXJlbmNlCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IGJsdWU7CiAgICAgICAgICAgICAgICBoZWlnaHQ6IDJlbTsKICAgICAgICAgICAgICAgIHdpZHRoOiAxMGVtOwogICAgICAgICAgICB9CiAgICAgICAgPC9zdHlsZT4KICAgIDwvaGVhZD4KICAgIDxib2R5PgogICAgICAgIDxwPlRlc3QgcGFzc2VzIGlmIGJvdGggYmFycyBiZWxvdyBhcmUgdGhlIHNhbWUgd2lkdGguPC9wPgogICAgICAgIDxkaXYgaWQ9InRhYmxlIj4KICAgICAgICAgICAgPGRpdiBpZD0idGVzdCI+PC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InRyIj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRkIj5YWFhYWDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0idHIiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idGQiPlhYWFhYWFhYWDA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBpZD0icmVmZXJlbmNlIj48L2Rpdj4KICAgIDwvYm9keT4KPC9odG1sPg==",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBUYWJsZS1sYXlvdXQgYW5kICdkaXNwbGF5OiB0YWJsZS1jb2x1bW4tZ3JvdXAnIGVsZW1lbnRzPC90aXRsZT4KICAgICAgICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9Ik1pY3Jvc29mdCIgaHJlZj0iaHR0cDovL3d3dy5taWNyb3NvZnQuY29tLyI+CiAgICAgICAgPGxpbmsgcmVsPSJoZWxwIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCNwcm9wZGVmLXRhYmxlLWxheW91dCI+CiAgICAgICAgPGxpbmsgcmVsPSJoZWxwIiBocmVmPSJodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS90YWJsZXMuaHRtbCN3aWR0aC1sYXlvdXQiPgogICAgICAgIDxtZXRhIG5hbWU9ImZsYWdzIiBjb250ZW50PSJhaGVtIj4KICAgICAgICA8bWV0YSBuYW1lPSJhc3NlcnQiIGNvbnRlbnQ9IlRhYmxlLWxheW91dCBkb2VzIG5vdCBhcHBseSB0byAnZGlzcGxheTogdGFibGUtY29sdW1uLWdyb3VwJyBlbGVtZW50cy4iPgogICAgICAgIDxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+CiAgICAgICAgICAgICN0YWJsZQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBkaXNwbGF5OiB0YWJsZTsKICAgICAgICAgICAgICAgIHdpZHRoOiA1ZW07CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI3Rlc3QKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgZGlzcGxheTogdGFibGUtY29sdW1uLWdyb3VwOwogICAgICAgICAgICAgICAgdGFibGUtbGF5b3V0OiBmaXhlZDsKICAgICAgICAgICAgICAgIHdpZHRoOiA1ZW07CiAgICAgICAgICAgIH0KICAgICAgICAgICAgLnRyCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGRpc3BsYXk6IHRhYmxlLXJvdzsKICAgICAgICAgICAgfQogICAgICAgICAgICAudGQKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYmFja2dyb3VuZDogYmxhY2s7CiAgICAgICAgICAgICAgICBkaXNwbGF5OiB0YWJsZS1jZWxsOwogICAgICAgICAgICAgICAgZm9udDogMWVtIEFoZW07CiAgICAgICAgICAgICAgICBvdmVyZmxvdzogaGlkZGVuOwogICAgICAgICAgICAgICAgcGFkZGluZzogMDsKICAgICAgICAgICAgfQogICAgICAgICAgICAjcmVmZXJlbmNlCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IGJsdWU7CiAgICAgICAgICAgICAgICBoZWlnaHQ6IDJlbTsKICAgICAgICAgICAgICAgIHdpZHRoOiAxMGVtOwogICAgICAgICAgICB9CiAgICAgICAgPC9zdHlsZT4KICAgIDwvaGVhZD4KICAgIDxib2R5PgogICAgICAgIDxwPlRlc3QgcGFzc2VzIGlmIGJvdGggYmFycyBiZWxvdyBhcmUgdGhlIHNhbWUgd2lkdGguPC9wPgogICAgICAgIDxkaXYgaWQ9InRhYmxlIj4KICAgICAgICAgICAgPGRpdiBpZD0idGVzdCI+PC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InRyIj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRkIj5YWFhYWDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0idHIiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idGQiPlhYWFhYWFhYWDA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBpZD0icmVmZXJlbmNlIj48L2Rpdj4KICAgIDwvYm9keT4KPC9odG1sPg==",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBUYWJsZS1sYXlvdXQgYW5kICdkaXNwbGF5OiB0YWJsZS1jZWxsJyBlbGVtZW50czwvdGl0bGU+CiAgICAgICAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJNaWNyb3NvZnQiIGhyZWY9Imh0dHA6Ly93d3cubWljcm9zb2Z0LmNvbS8iPgogICAgICAgIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjcHJvcGRlZi10YWJsZS1sYXlvdXQiPgogICAgICAgIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjd2lkdGgtbGF5b3V0Ij4KICAgICAgICA8bWV0YSBuYW1lPSJmbGFncyIgY29udGVudD0iYWhlbSI+CiAgICAgICAgPG1ldGEgbmFtZT0iYXNzZXJ0IiBjb250ZW50PSJUYWJsZS1sYXlvdXQgZG9lcyBub3QgYXBwbHkgdG8gJ2Rpc3BsYXk6IHRhYmxlLWNlbGwnIGVsZW1lbnRzLiI+CiAgICAgICAgPHN0eWxlIHR5cGU9InRleHQvY3NzIj4KICAgICAgICAgICAgI3RhYmxlCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGRpc3BsYXk6IHRhYmxlOwogICAgICAgICAgICAgICAgd2lkdGg6IDEwZW07CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2NvbGdyb3VwCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGRpc3BsYXk6IHRhYmxlLWNvbHVtbi1ncm91cDsKICAgICAgICAgICAgICAgIHdpZHRoOiAxMGVtOwogICAgICAgICAgICB9CiAgICAgICAgICAgICN0cgogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBkaXNwbGF5OiB0YWJsZS1yb3c7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI3Rlc3QKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYmFja2dyb3VuZDogYmxhY2s7CiAgICAgICAgICAgICAgICBkaXNwbGF5OiB0YWJsZS1jZWxsOwogICAgICAgICAgICAgICAgZm9udDogMWVtIEFoZW07CiAgICAgICAgICAgICAgICBvdmVyZmxvdzogaGlkZGVuOwogICAgICAgICAgICAgICAgcGFkZGluZzogMDsKICAgICAgICAgICAgICAgIHRhYmxlLWxheW91dDogZml4ZWQ7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI3JlZmVyZW5jZQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiBibHVlOwogICAgICAgICAgICAgICAgaGVpZ2h0OiAxZW07CiAgICAgICAgICAgICAgICB3aWR0aDogMjBlbTsKICAgICAgICAgICAgfQogICAgICAgIDwvc3R5bGU+CiAgICA8L2hlYWQ+CiAgICA8Ym9keT4KICAgICAgICA8cD5UZXN0IHBhc3NlcyBpZiBib3RoIGJhcnMgYmVsb3cgYXJlIHRoZSBzYW1lIHdpZHRoLjwvcD4KICAgICAgICA8ZGl2IGlkPSJ0YWJsZSI+CiAgICAgICAgICAgIDxkaXYgaWQ9ImNvbGdyb3VwIj48L2Rpdj4KICAgICAgICAgICAgPGRpdiBpZD0idHIiPgogICAgICAgICAgICAgICAgPGRpdiBpZD0idGVzdCI+WFhYWFhYWFhYMFhYWFhYWFhYWDA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBpZD0icmVmZXJlbmNlIj48L2Rpdj4KICAgIDwvYm9keT4KPC9odG1sPg==",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBUYWJsZS1sYXlvdXQgYW5kICdkaXNwbGF5OiB0YWJsZS1jYXB0aW9uJyBlbGVtZW50czwvdGl0bGU+CiAgICAgICAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJNaWNyb3NvZnQiIGhyZWY9Imh0dHA6Ly93d3cubWljcm9zb2Z0LmNvbS8iPgogICAgICAgIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjcHJvcGRlZi10YWJsZS1sYXlvdXQiPgogICAgICAgIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjd2lkdGgtbGF5b3V0Ij4KICAgICAgICA8bWV0YSBuYW1lPSJmbGFncyIgY29udGVudD0iYWhlbSI+CiAgICAgICAgPG1ldGEgbmFtZT0iYXNzZXJ0IiBjb250ZW50PSJUYWJsZS1sYXlvdXQgZG9lcyBub3QgYXBwbHkgdG8gJ2Rpc3BsYXk6IHRhYmxlLWNhcHRpb24nIGVsZW1lbnRzLiI+CiAgICAgICAgPHN0eWxlIHR5cGU9InRleHQvY3NzIj4KICAgICAgICAgICAgI3RhYmxlCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIHdpZHRoOiAxMGVtOwogICAgICAgICAgICB9CiAgICAgICAgICAgICN0ZXN0CiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGRpc3BsYXk6IHRhYmxlLWNhcHRpb247CiAgICAgICAgICAgICAgICB0YWJsZS1sYXlvdXQ6IGZpeGVkOwogICAgICAgICAgICB9CiAgICAgICAgICAgIC5jb2xncm91cAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBkaXNwbGF5OiB0YWJsZS1jb2x1bW4tZ3JvdXA7CiAgICAgICAgICAgICAgICB3aWR0aDogNWVtOwogICAgICAgICAgICB9CiAgICAgICAgICAgIC50cgogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBkaXNwbGF5OiB0YWJsZS1yb3c7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgLnRkCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IGJsYWNrOwogICAgICAgICAgICAgICAgZGlzcGxheTogdGFibGUtY2VsbDsKICAgICAgICAgICAgICAgIGZvbnQ6IDFlbSBBaGVtOwogICAgICAgICAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjsKICAgICAgICAgICAgICAgIHBhZGRpbmc6IDA7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI3JlZmVyZW5jZQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiBibHVlOwogICAgICAgICAgICAgICAgaGVpZ2h0OiAyZW07CiAgICAgICAgICAgICAgICB3aWR0aDogMjBlbTsKICAgICAgICAgICAgfQogICAgICAgIDwvc3R5bGU+CiAgICA8L2hlYWQ+CiAgICA8Ym9keT4KICAgICAgICA8cD5UZXN0IHBhc3NlcyBpZiBib3RoIGJhcnMgYmVsb3cgYXJlIHRoZSBzYW1lIHdpZHRoLjwvcD4KICAgICAgICA8ZGl2IGlkPSJ0YWJsZSI+CiAgICAgICAgICAgIDxkaXYgaWQ9InRlc3QiPjwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2xncm91cCI+PC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbGdyb3VwIj48L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0idHIiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idGQiPlhYWFhYPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZCI+WFhYWFg8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InRyIj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRkIj5YWFhYWFhYWFgwPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZCI+WFhYWFhYWFhYMDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGlkPSJyZWZlcmVuY2UiPjwvZGl2PgogICAgPC9ib2R5Pgo8L2h0bWw+",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBUYWJsZS1sYXlvdXQgYW5kICdkaXNwbGF5OiBub25lJyBlbGVtZW50czwvdGl0bGU+CiAgICAgICAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJNaWNyb3NvZnQiIGhyZWY9Imh0dHA6Ly93d3cubWljcm9zb2Z0LmNvbS8iPgogICAgICAgIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjcHJvcGRlZi10YWJsZS1sYXlvdXQiPgogICAgICAgIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjd2lkdGgtbGF5b3V0Ij4KICAgICAgICA8bWV0YSBuYW1lPSJmbGFncyIgY29udGVudD0iIj4KICAgICAgICA8bWV0YSBuYW1lPSJhc3NlcnQiIGNvbnRlbnQ9IlRhYmxlLWxheW91dCBkb2VzIG5vdCBhcHBseSB0byAnZGlzcGxheTogbm9uZScgZWxlbWVudHMuIj4KICAgICAgICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgogICAgICAgICAgICAjdGVzdAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBkaXNwbGF5OiBub25lOwogICAgICAgICAgICAgICAgdGFibGUtbGF5b3V0OiBmaXhlZDsKICAgICAgICAgICAgICAgIHdpZHRoOiAxMGVtOwogICAgICAgICAgICB9CiAgICAgICAgICAgICN0cgogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBkaXNwbGF5OiB0YWJsZS1yb3c7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI3RkCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IHJlZDsKICAgICAgICAgICAgICAgIGRpc3BsYXk6IHRhYmxlLWNlbGw7CiAgICAgICAgICAgIH0KICAgICAgICA8L3N0eWxlPgogICAgPC9oZWFkPgogICAgPGJvZHk+CiAgICAgICAgPHA+VGVzdCBwYXNzZXMgaWYgdGhlcmUgaXMgbm8gcmVkIHZpc2libGUgb24gdGhlIHBhZ2UuPC9wPgogICAgICAgIDxkaXYgaWQ9InRlc3QiPgogICAgICAgICAgICA8ZGl2IGlkPSJ0ciI+CiAgICAgICAgICAgICAgICA8ZGl2IGlkPSJ0ZCI+WFhYWFhYWFhYMDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgIDwvYm9keT4KPC9odG1sPg==",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBUYWJsZS1sYXlvdXQgYW5kICdkaXNwbGF5OiBpbmhlcml0JyBlbGVtZW50czwvdGl0bGU+CiAgICAgICAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJNaWNyb3NvZnQiIGhyZWY9Imh0dHA6Ly93d3cubWljcm9zb2Z0LmNvbS8iPgogICAgICAgIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjcHJvcGRlZi10YWJsZS1sYXlvdXQiPgogICAgICAgIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjd2lkdGgtbGF5b3V0Ij4KICAgICAgICA8bWV0YSBuYW1lPSJmbGFncyIgY29udGVudD0iYWhlbSI+CiAgICAgICAgPG1ldGEgbmFtZT0iYXNzZXJ0IiBjb250ZW50PSJUYWJsZS1sYXlvdXQgZG9lcyBub3QgYXBwbHkgdG8gJ2Rpc3BsYXk6IGluaGVyaXQnIGVsZW1lbnRzIHdoaWNoIGRvIG5vdCBpbmhlcml0IHRoZSB2YWx1ZSBvZiAndGFibGUnLiI+CiAgICAgICAgPHN0eWxlIHR5cGU9InRleHQvY3NzIj4KICAgICAgICAgICAgI2NvbnRhaW5lcgogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBkaXNwbGF5OiBibG9jazsKICAgICAgICAgICAgfQogICAgICAgICAgICAjdGVzdAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBkaXNwbGF5OiBpbmhlcml0OwogICAgICAgICAgICAgICAgdGFibGUtbGF5b3V0OiBmaXhlZDsKICAgICAgICAgICAgICAgIHdpZHRoOiAxMGVtOwogICAgICAgICAgICB9CiAgICAgICAgICAgIC5jb2xncm91cAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBkaXNwbGF5OiB0YWJsZS1jb2x1bW4tZ3JvdXA7CiAgICAgICAgICAgICAgICB3aWR0aDogNWVtOwogICAgICAgICAgICB9CiAgICAgICAgICAgIC50cgogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBkaXNwbGF5OiB0YWJsZS1yb3c7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgLnRkCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IGJsYWNrOwogICAgICAgICAgICAgICAgZGlzcGxheTogdGFibGUtY2VsbDsKICAgICAgICAgICAgICAgIGZvbnQ6IDFlbSBBaGVtOwogICAgICAgICAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjsKICAgICAgICAgICAgICAgIHBhZGRpbmc6IDA7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI3JlZmVyZW5jZQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiBibHVlOwogICAgICAgICAgICAgICAgaGVpZ2h0OiAyZW07CiAgICAgICAgICAgICAgICB3aWR0aDogMjBlbTsKICAgICAgICAgICAgfQogICAgICAgIDwvc3R5bGU+CiAgICA8L2hlYWQ+CiAgICA8Ym9keT4KICAgICAgICA8cD5UZXN0IHBhc3NlcyBpZiBib3RoIGJhcnMgYmVsb3cgYXJlIHRoZSBzYW1lIHdpZHRoLjwvcD4KICAgICAgICA8ZGl2IGlkPSJjb250YWluZXIiPgogICAgICAgICAgICA8ZGl2IGlkPSJ0ZXN0Ij4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbGdyb3VwIj48L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbGdyb3VwIj48L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRyIj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZCI+WFhYWFg8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZCI+WFhYWFg8L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idHIiPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRkIj5YWFhYWFhYWFgwPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idGQiPlhYWFhYWFhYWDA8L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGlkPSJyZWZlcmVuY2UiPjwvZGl2PgogICAgPC9ib2R5Pgo8L2h0bWw+",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBBIHRhYmxlIGRvZXNuJ3Qgc2l6ZSB0byBmaXQgaXRzIGNvbnRhaW5lciB3aGVuIG1hcmdpbnMgYXJlIHplcm8gYW5kIHdpZHRoIGlzICdhdXRvJzwvdGl0bGU+CiAgICAgICAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJNaWNyb3NvZnQiIGhyZWY9Imh0dHA6Ly93d3cubWljcm9zb2Z0LmNvbS8iPgogICAgICAgIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjd2lkdGgtbGF5b3V0Ij4KICAgICAgICA8bWV0YSBuYW1lPSJmbGFncyIgY29udGVudD0iIj4KICAgICAgICA8bWV0YSBuYW1lPSJhc3NlcnQiIGNvbnRlbnQ9IldoZW4gdGFibGUgbWFyZ2lucyBhcmUgemVybyBhbmQgd2lkdGggaXMgJ2F1dG8nLCB0aGUgdGFibGUgZG9lc24ndCBhdXRvbWF0aWNhbGx5IHNpemUgdG8gZmlsbCBpdHMgY29udGFpbmluZyBibG9jayAuIj4KICAgICAgICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgogICAgICAgICAgICBkaXYKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYmFja2dyb3VuZDogYmx1ZTsKICAgICAgICAgICAgICAgIHdpZHRoOiAzMDBweDsKICAgICAgICAgICAgfQogICAgICAgICAgICB0YWJsZQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiBibGFjazsKICAgICAgICAgICAgICAgIG1hcmdpbjogMDsKICAgICAgICAgICAgICAgIHdpZHRoOiBhdXRvOwogICAgICAgICAgICB9CiAgICAgICAgPC9zdHlsZT4KICAgIDwvaGVhZD4KICAgIDxib2R5PgogICAgICAgIDxwPlRlc3QgcGFzc2VzIGlmIHRoZXJlIGlzIGEgYmxhY2sgYm94IGJlbG93IGlzIGFkamFjZW50IHRvIGEgYmx1ZSBib3guPC9wPgogICAgICAgIDxkaXY+CiAgICAgICAgICAgIDx0YWJsZT4KICAgICAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgICAgICA8dGQ+RmlsbGVyIFRleHQgRmlsbGVyIFRleHQ8L3RkPgogICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgIDwvdGFibGU+CiAgICAgICAgICA8L2Rpdj4KICAgIDwvYm9keT4KIDwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBUYWJsZSBvcmdhbml6YXRpb24gKGNvbHVtbnMgaW4gY29sdW1uIGdyb3Vwcyk8L3RpdGxlPgogICAgICAgIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iTWljcm9zb2Z0IiBocmVmPSJodHRwOi8vd3d3Lm1pY3Jvc29mdC5jb20vIj4KICAgICAgICA8bGluayByZWw9ImhlbHAiIGhyZWY9Imh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL3RhYmxlcy5odG1sI3RhYmxlcy1pbnRybyI+CiAgICAgICAgPG1ldGEgbmFtZT0iZmxhZ3MiIGNvbnRlbnQ9IiI+CiAgICAgICAgPG1ldGEgbmFtZT0iYXNzZXJ0IiBjb250ZW50PSJUYWJsZSBjb2x1bW5zIGNhbiBiZSBncm91cGVkIGludG8gdGFibGUgY29sdW1uIGdyb3Vwcy4iPgogICAgICAgIDxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+CiAgICAgICAgICAgIHRhYmxlCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlcjogMXB4IHNvbGlkIGJsYWNrOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZzEKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYmFja2dyb3VuZDogYmx1ZTsKICAgICAgICAgICAgfQogICAgICAgICAgICAjY2cyCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IHB1cnBsZTsKICAgICAgICAgICAgfQogICAgICAgICAgICB0ZAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBoZWlnaHQ6IDJlbTsKICAgICAgICAgICAgICAgIHdpZHRoOiAyZW07CiAgICAgICAgICAgIH0KICAgICAgICA8L3N0eWxlPgogICAgPC9oZWFkPgogICAgPGJvZHk+CiAgICAgICAgPHA+VGVzdCBwYXNzZXMgaWYgdGhlIHRhYmxlIGJlbG93IGhhcyB0d28gYmx1ZSBjb2x1bW5zIG9uIHRoZSBsZWZ0IGFuZCB0d28gcHVycGxlIGNvbHVtbnMgb24gdGhlIHJpZ2h0LjwvcD4KICAgICAgICA8dGFibGU+CiAgICAgICAgICAgIDxjb2xncm91cCBpZD0iY2cxIj4KICAgICAgICAgICAgICAgIDxjb2w+CiAgICAgICAgICAgICAgICA8Y29sPgogICAgICAgICAgICA8L2NvbGdyb3VwPgogICAgICAgICAgICA8Y29sZ3JvdXAgaWQ9ImNnMiI+CiAgICAgICAgICAgICAgICA8Y29sPgogICAgICAgICAgICAgICAgPGNvbD4KICAgICAgICAgICAgPC9jb2xncm91cD4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkPjwvdGQ+CiAgICAgICAgICAgICAgICA8dGQ+PC90ZD4KICAgICAgICAgICAgICAgIDx0ZD48L3RkPgogICAgICAgICAgICAgICAgPHRkPjwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgIDx0ZD48L3RkPgogICAgICAgICAgICAgICAgPHRkPjwvdGQ+CiAgICAgICAgICAgICAgICA8dGQ+PC90ZD4KICAgICAgICAgICAgICAgIDx0ZD48L3RkPgogICAgICAgICAgICA8L3RyPgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICA8dGQ+PC90ZD4KICAgICAgICAgICAgICAgIDx0ZD48L3RkPgogICAgICAgICAgICAgICAgPHRkPjwvdGQ+CiAgICAgICAgICAgICAgICA8dGQ+PC90ZD4KICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgPHRkPjwvdGQ+CiAgICAgICAgICAgICAgICA8dGQ+PC90ZD4KICAgICAgICAgICAgICAgIDx0ZD48L3RkPgogICAgICAgICAgICAgICAgPHRkPjwvdGQ+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgPC90YWJsZT4KICAgIDwvYm9keT4KIDwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBUYWJsZSBvcmdhbml6YXRpb24gKHJvd3MgaW4gcm93IGdyb3Vwcyk8L3RpdGxlPgogICAgICAgIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iTWljcm9zb2Z0IiBocmVmPSJodHRwOi8vd3d3Lm1pY3Jvc29mdC5jb20vIj4KICAgICAgICA8bGluayByZWw9ImhlbHAiIGhyZWY9Imh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL3RhYmxlcy5odG1sI3RhYmxlcy1pbnRybyI+CiAgICAgICAgPG1ldGEgbmFtZT0iZmxhZ3MiIGNvbnRlbnQ9IiI+CiAgICAgICAgPG1ldGEgbmFtZT0iYXNzZXJ0IiBjb250ZW50PSJUYWJsZSByb3dzIGNhbiBiZSBncm91cGVkIGludG8gdGFibGUgcm93IGdyb3Vwcy4iPgogICAgICAgIDxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+CiAgICAgICAgICAgIHRhYmxlCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlcjogMXB4IHNvbGlkIGJsYWNrOwogICAgICAgICAgICB9CiAgICAgICAgICAgICN0YjEKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYmFja2dyb3VuZDogYmx1ZTsKICAgICAgICAgICAgfQogICAgICAgICAgICAjdGIyCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IHB1cnBsZTsKICAgICAgICAgICAgfQogICAgICAgICAgICB0ZAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBoZWlnaHQ6IDJlbTsKICAgICAgICAgICAgICAgIHdpZHRoOiAyZW07CiAgICAgICAgICAgIH0KICAgICAgICA8L3N0eWxlPgogICAgPC9oZWFkPgogICAgPGJvZHk+CiAgICAgICAgPHA+VGVzdCBwYXNzZXMgaWYgdGhlIHRhYmxlIGJlbG93IGhhcyB0d28gYmx1ZSByb3dzIG9uIHRvcCBhbmQgdHdvIHB1cnBsZSByb3dzIG9uIHRoZSBib3R0b20uPC9wPgogICAgICAgIDx0YWJsZT4KICAgICAgICAgICAgPHRib2R5IGlkPSJ0YjEiPgogICAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgICAgIDx0ZD48L3RkPgogICAgICAgICAgICAgICAgICAgIDx0ZD48L3RkPgogICAgICAgICAgICAgICAgICAgIDx0ZD48L3RkPgogICAgICAgICAgICAgICAgICAgIDx0ZD48L3RkPgogICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgICAgICA8dGQ+PC90ZD4KICAgICAgICAgICAgICAgICAgICA8dGQ+PC90ZD4KICAgICAgICAgICAgICAgICAgICA8dGQ+PC90ZD4KICAgICAgICAgICAgICAgICAgICA8dGQ+PC90ZD4KICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgIDwvdGJvZHk+CiAgICAgICAgICAgIDx0Ym9keSBpZD0idGIyIj4KICAgICAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgICAgICA8dGQ+PC90ZD4KICAgICAgICAgICAgICAgICAgICA8dGQ+PC90ZD4KICAgICAgICAgICAgICAgICAgICA8dGQ+PC90ZD4KICAgICAgICAgICAgICAgICAgICA8dGQ+PC90ZD4KICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgICAgPHRkPjwvdGQ+CiAgICAgICAgICAgICAgICAgICAgPHRkPjwvdGQ+CiAgICAgICAgICAgICAgICAgICAgPHRkPjwvdGQ+CiAgICAgICAgICAgICAgICAgICAgPHRkPjwvdGQ+CiAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICA8L3Rib2R5PgogICAgICAgIDwvdGFibGU+CiAgICA8L2JvZHk+CiA8L2h0bWw+",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBUYWJsZS1yb3c8L3RpdGxlPgogICAgICAgIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iTWljcm9zb2Z0IiBocmVmPSJodHRwOi8vd3d3Lm1pY3Jvc29mdC5jb20vIj4KICAgICAgICA8bGluayByZWw9ImhlbHAiIGhyZWY9Imh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL3RhYmxlcy5odG1sI3RhYmxlLWRpc3BsYXkiPgogICAgICAgIDxtZXRhIG5hbWU9ImZsYWdzIiBjb250ZW50PSIiPgogICAgICAgIDxtZXRhIG5hbWU9ImFzc2VydCIgY29udGVudD0iQW4gZWxlbWVudCB3aXRoICdkaXNwbGF5OiB0YWJsZS1yb3cnIGlzIHJlbmRlcmVkIGFzIGlmIGl0IHdlcmUgYSB0YWJsZSByb3cuIj4KICAgICAgICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgogICAgICAgICAgICAjdGFibGUKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgZGlzcGxheTogdGFibGU7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgLnRyCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IGJsYWNrOwogICAgICAgICAgICAgICAgZGlzcGxheTogdGFibGUtcm93OwogICAgICAgICAgICB9CiAgICAgICAgICAgIC50ZAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBkaXNwbGF5OiB0YWJsZS1jZWxsOwogICAgICAgICAgICAgICAgaGVpZ2h0OiAyZW07CiAgICAgICAgICAgICAgICB3aWR0aDogMmVtOwogICAgICAgICAgICB9CiAgICAgICAgPC9zdHlsZT4KICAgIDwvaGVhZD4KICAgIDxib2R5PgogICAgICAgIDxwPlRlc3QgcGFzc2VzIGlmIHRoZXJlIGlzIGEgc3F1YXJlIGJlbG93LjwvcD4KICAgICAgICA8ZGl2IGlkPSJ0YWJsZSI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InRyIj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRkIj48L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRkIj48L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRkIj48L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRkIj48L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InRyIj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRkIj48L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRkIj48L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRkIj48L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRkIj48L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InRyIj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRkIj48L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRkIj48L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRkIj48L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRkIj48L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InRyIj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRkIj48L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRkIj48L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRkIj48L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRkIj48L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICA8L2JvZHk+CjwvaHRtbD4=",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBUYWJsZS1yb3ctZ3JvdXA8L3RpdGxlPgogICAgICAgIDxsaW5rIHJlbD0iYXV0aG9yIiB0aXRsZT0iTWljcm9zb2Z0IiBocmVmPSJodHRwOi8vd3d3Lm1pY3Jvc29mdC5jb20vIj4KICAgICAgICA8bGluayByZWw9ImhlbHAiIGhyZWY9Imh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL3RhYmxlcy5odG1sI3RhYmxlLWRpc3BsYXkiPgogICAgICAgIDxtZXRhIG5hbWU9ImZsYWdzIiBjb250ZW50PSIiPgogICAgICAgIDxtZXRhIG5hbWU9ImFzc2VydCIgY29udGVudD0iQW4gZWxlbWVudCB3aXRoICdkaXNwbGF5OiB0YWJsZS1yb3ctZ3JvdXAnIGlzIHJlbmRlcmVkIGFzIGlmIGl0IHdlcmUgYSB0YWJsZSByb3cgZ3JvdXAuIj4KICAgICAgICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgogICAgICAgICAgICAudGFibGUKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYm9yZGVyOiAycHggc29saWQgYmxhY2s7CiAgICAgICAgICAgICAgICBkaXNwbGF5OiB0YWJsZTsKICAgICAgICAgICAgfQogICAgICAgICAgICAjdGJvZHkKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYmFja2dyb3VuZDogYmx1ZTsKICAgICAgICAgICAgICAgIGRpc3BsYXk6IHRhYmxlLXJvdy1ncm91cDsKICAgICAgICAgICAgfQogICAgICAgICAgICAudHIKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgZGlzcGxheTogdGFibGUtcm93OwogICAgICAgICAgICB9CiAgICAgICAgICAgIC50ZAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBkaXNwbGF5OiB0YWJsZS1jZWxsOwogICAgICAgICAgICAgICAgaGVpZ2h0OiAyZW07CiAgICAgICAgICAgICAgICB3aWR0aDogMmVtOwogICAgICAgICAgICB9CiAgICAgICAgPC9zdHlsZT4KICAgIDwvaGVhZD4KICAgIDxib2R5PgogICAgICAgIDxwPlRlc3QgcGFzc2VzIGlmIHRoZXJlIGlzIGEgc3F1YXJlIGJlbG93LCBhbmQgdGhlIHRvcCBoYWxmIG9mIHRoZSBzcXVhcmUgaXMgYmx1ZS48L3A+CiAgICAgICAgPGRpdiBjbGFzcz0idGFibGUiPgogICAgICAgICAgICA8ZGl2IGlkPSJ0Ym9keSI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ciI+CiAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRkIj48L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idGQiPjwvZGl2PgogICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZCI+PC9kaXY+CiAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRkIj48L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idHIiPgogICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZCI+PC9kaXY+CiAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRkIj48L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idGQiPjwvZGl2PgogICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZCI+PC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InRyIj4KICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZCI+PC9kaXY+CiAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idGQiPjwvZGl2PgogICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRkIj48L2Rpdj4KICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZCI+PC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ciI+CiAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idGQiPjwvZGl2PgogICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRkIj48L2Rpdj4KICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZCI+PC9kaXY+CiAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idGQiPjwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgIDwvYm9keT4KPC9odG1sPg==",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogICAgPGhlYWQ+CiAgICAgICAgPHRpdGxlPkNTUyBUZXN0OiBBIGNlbGwgYm94IGNhbm5vdCBleHRlbmQgYmV5b25kIHRoZSBsYXN0IHJvdyBvZiBhIHJvdyBncm91cDwvdGl0bGU+CiAgICAgICAgPGxpbmsgcmVsPSJhdXRob3IiIHRpdGxlPSJNaWNyb3NvZnQiIGhyZWY9Imh0dHA6Ly93d3cubWljcm9zb2Z0LmNvbS8iPgogICAgICAgIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjdGFibGUtbGF5b3V0Ij4KICAgICAgICA8bWV0YSBuYW1lPSJmbGFncyIgY29udGVudD0iIj4KICAgICAgICA8bWV0YSBuYW1lPSJhc3NlcnQiIGNvbnRlbnQ9IkEgY2VsbCBib3ggY2Fubm90IGV4dGVuZCBiZXlvbmQgdGhlIGxhc3Qgcm93IGJveCBvZiBhIHJvdyBncm91cC4iPgogICAgICAgIDxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+CiAgICAgICAgICAgIHRkCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJvcmRlcjogMXB4IHNvbGlkIGJsYWNrOwogICAgICAgICAgICAgICAgaGVpZ2h0OiAyZW07CiAgICAgICAgICAgICAgICB3aWR0aDogMmVtOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNjZWxsCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IGJsdWU7CiAgICAgICAgICAgIH0KICAgICAgICA8L3N0eWxlPgogICAgPC9oZWFkPgogICAgPGJvZHk+CiAgICAgICAgPHA+VGVzdCBwYXNzZXMgaWYgb25seSB0aGUgc3F1YXJlIGluIHRoZSBtaWRkbGUgb2YgdGhlIGNvbHVtbiBiZWxvdyBpcyBibHVlLjwvcD4KICAgICAgICA8dGFibGU+CiAgICAgICAgICAgIDx0Ym9keT4KICAgICAgICAgICAgICAgIDx0cj4KICAgICAgICAgICAgICAgICAgICA8dGQ+PC90ZD4KICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgICAgICAgPHRkIGlkPSJjZWxsIiByb3dzcGFuPSIyIj48L3RkPgogICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgPC90Ym9keT4KICAgICAgICAgICAgPHRib2R5PgogICAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgICAgIDx0ZD48L3RkPgogICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgPC90Ym9keT4KICAgICAgICA8L3RhYmxlPgogICAgPC9ib2R5Pgo8L2h0bWw+",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogPGhlYWQ+CiAgPHRpdGxlPkNTUyBUZXN0OiBUYWJsZSBjZWxsIHNpemUgd2l0aCBubyBsaW5lIGJveCBjb250ZW50PC90aXRsZT4KICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9IklhbiBIaWNrc29uIiBocmVmPSJtYWlsdG86aWFuQGhpeGllLmNoIj4KICA8bGluayByZWw9ImFsdGVybmF0ZSIgaHJlZj0iaHR0cDovL3d3dy5oaXhpZS5jaC90ZXN0cy9hZGhvYy9jc3MvYm94L3RhYmxlLzAxNC5odG1sIiB0eXBlPSJ0ZXh0L2h0bWwiPgogIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjdGFibGUtbGF5b3V0Ij4KICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgogICB0ZCB7IG1hcmdpbjogMDsgYm9yZGVyOiAxZW0gZ3JlZW47IGJvcmRlci1zdHlsZTogc29saWQgbm9uZTsgd2lkdGg6IDEwZW07IH0KICAgZGl2IHsgaGVpZ2h0OiAxZW07IGJhY2tncm91bmQ6IHllbGxvdzsgfQogIDwvc3R5bGU+CiA8L2hlYWQ+CiA8Ym9keT4KICA8cD5UaGVyZSBzaG91bGQgYmUgdHdvIGdyZWVuIGJhcnMgYmVsb3cgKHdpdGggYSB5ZWxsb3cgb25lIGluIGJldHdlZW4pLjwvcD4KICA8dGFibGU+CiAgIDx0cj4KICAgIDx0ZD4KICAgICA8ZGl2PjwvZGl2PgogICAgPC90ZD4KICAgPC90cj4KICA8L3RhYmxlPgogPC9ib2R5Pgo8L2h0bWw+",
"PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIvaHRtbDQvc3RyaWN0LmR0ZCI+CjxodG1sPgogPGhlYWQ+CiAgPHRpdGxlPkNTUyBUZXN0OiBUYWJsZSBjZWxsIHNpemUgd2l0aCBsaW5lIGJveCBjb250ZW50PC90aXRsZT4KICA8bGluayByZWw9ImF1dGhvciIgdGl0bGU9IklhbiBIaWNrc29uIiBocmVmPSJtYWlsdG86aWFuQGhpeGllLmNoIj4KICA8bGluayByZWw9ImFsdGVybmF0ZSIgaHJlZj0iaHR0cDovL3d3dy5oaXhpZS5jaC90ZXN0cy9hZGhvYy9jc3MvYm94L3RhYmxlLzAxNS5odG1sIiB0eXBlPSJ0ZXh0L2h0bWwiPgogIDxsaW5rIHJlbD0iaGVscCIgaHJlZj0iaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvdGFibGVzLmh0bWwjdGFibGUtbGF5b3V0Ij4KICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgogICB0ZCB7IG1hcmdpbjogMDsgYm9yZGVyOiAxZW0gZ3JlZW47IGJvcmRlci1zdHlsZTogc29saWQgbm9uZTsgd2lkdGg6IDEwZW07IH0KICAgZGl2IHsgaGVpZ2h0OiAxZW07IGJhY2tncm91bmQ6IHllbGxvdzsgfQogIDwvc3R5bGU+CiA8L2hlYWQ+CiA8Ym9keT4KICA8cD5UaGVyZSBzaG91bGQgYmUgdHdvIGdyZWVuIGJhcnMgYmVsb3cgKHdpdGggYSB5ZWxsb3cgb25lIGluIGJldHdlZW4pLjwvcD4KICA8dGFibGU+CiAgIDx0cj4KICAgIDx0ZD4KICAgICA8ZGl2PlRFU1Q8L2Rpdj4KICAgIDwvdGQ+CiAgIDwvdHI+CiAgPC90YWJsZT4KIDwvYm9keT4KPC9odG1sPg==",
]


module.exports.tabledb=tabledb
